var COMPODOC_SEARCH_INDEX = {
  index: {
    version: '2.3.9',
    fields: ['title', 'body'],
    fieldVectors: [
      ['title/controllers/AppController.html', [0, 1.238, 1, 3.006]],
      [
        'body/controllers/AppController.html',
        [
          0, 2.051, 1, 4.978, 2, 1.664, 3, 0.16, 4, 0.16, 5, 0.108, 6, 4.842, 7,
          0.321, 8, 0.012, 9, 2.878, 10, 4.842, 11, 3.167, 12, 0.871, 13, 4.725,
          14, 4.842, 15, 4.463, 16, 3.167, 17, 4.381, 18, 3.338, 19, 3.763, 20,
          5.541, 21, 5.97, 22, 4.234, 23, 5.541, 24, 4.037, 25, 5.541, 26,
          3.015, 27, 5.541, 28, 0.16, 29, 0.266, 30, 2.179, 31, 3.257, 32,
          2.103, 33, 0.01, 34, 0.01,
        ],
      ],
      ['title/modules/AppModule.html', [35, 1.056, 36, 3.006]],
      [
        'body/modules/AppModule.html',
        [
          1, 4.407, 2, 1.565, 3, 0.106, 4, 0.106, 5, 0.071, 7, 0.323, 8, 0.013,
          12, 0.579, 13, 4.595, 14, 3.218, 15, 3.962, 16, 2.105, 28, 0.106, 29,
          0.177, 33, 0.008, 34, 0.008, 35, 1.548, 36, 6.178, 37, 1.559, 38,
          1.502, 39, 1.684, 40, 1.684, 41, 1.559, 42, 2.766, 43, 1.684, 44,
          3.218, 45, 3.218, 46, 3.218, 47, 4.892, 48, 4.892, 49, 4.892, 50,
          4.892, 51, 4.892, 52, 4.595, 53, 4.892, 54, 4.892, 55, 4.595, 56,
          4.892, 57, 4.595, 58, 2.383, 59, 1.619, 60, 1.684, 61, 3.683, 62,
          2.881, 63, 3.683, 64, 1.913, 65, 1.037, 66, 4.554, 67, 3.683, 68,
          3.683, 69, 3.683, 70, 1.83, 71, 1.398, 72, 1.83, 73, 1.176, 74, 6.048,
          75, 3.683, 76, 3.683, 77, 3.683, 78, 3.683, 79, 3.683, 80, 3.683, 81,
          3.683, 82, 3.683, 83, 3.683, 84, 3.683, 85, 2.912, 86, 3.683, 87,
          2.912, 88, 3.683, 89, 3.683, 90, 3.218, 91, 2.912, 92, 1.448, 93,
          3.683, 94, 3.683, 95, 2.912, 96, 1.35, 97, 3.683, 98, 3.683, 99,
          3.683, 100, 3.683, 101, 1.005, 102, 2.912, 103, 3.683, 104, 3.683,
          105, 1.261,
        ],
      ],
      ['title/injectables/AppService.html', [13, 2.631, 106, 0.819]],
      [
        'body/injectables/AppService.html',
        [
          3, 0.175, 4, 0.175, 5, 0.117, 7, 0.235, 8, 0.012, 12, 0.952, 13,
          4.597, 28, 0.175, 29, 0.291, 33, 0.01, 34, 0.01, 101, 1.651, 106,
          1.431, 107, 2.218, 108, 5.289, 109, 0.602, 110, 1.966, 111, 7.968,
          112, 0.766, 113, 6.052, 114, 1.651, 115, 0.913, 116, 5.289, 117,
          6.052, 118, 6.052, 119, 6.052,
        ],
      ],
      ['title/controllers/AuthController.html', [0, 1.238, 120, 3.006]],
      [
        'body/controllers/AuthController.html',
        [
          0, 0.853, 2, 0.853, 3, 0.082, 4, 0.082, 5, 0.055, 7, 0.289, 8, 0.013,
          9, 1.476, 10, 2.484, 11, 3.756, 12, 0.447, 19, 1.93, 21, 2.484, 22,
          2.975, 26, 3.575, 28, 0.082, 29, 0.136, 30, 1.118, 31, 2.289, 33,
          0.006, 34, 0.006, 59, 2.554, 87, 2.248, 90, 2.484, 91, 2.248, 92,
          1.118, 96, 2.639, 101, 1.862, 105, 1.782, 109, 0.283, 110, 1.176, 112,
          0.865, 114, 1.862, 115, 0.832, 120, 3.14, 121, 2.484, 122, 1.413, 123,
          2.484, 124, 4.31, 125, 4.31, 126, 4.31, 127, 5.205, 128, 5.205, 129,
          4.31, 130, 5.205, 131, 2.843, 132, 1.59, 133, 2.843, 134, 2.843, 135,
          4.593, 136, 3.102, 137, 2.843, 138, 1.985, 139, 0.738, 140, 0.827,
          141, 1.862, 142, 1.353, 143, 2.381, 144, 2.843, 145, 2.418, 146,
          5.076, 147, 2.196, 148, 2.843, 149, 2.843, 150, 2.843, 151, 4.872,
          152, 2.843, 153, 2.843, 154, 2.843, 155, 3.766, 156, 2.843, 157,
          4.233, 158, 2.843, 159, 4.31, 160, 2.843, 161, 2.843, 162, 2.843, 163,
          2.843, 164, 3.766, 165, 2.843, 166, 2.843, 167, 2.843, 168, 3.575,
          169, 2.843, 170, 1.614, 171, 2.843, 172, 2.843, 173, 2.843, 174,
          2.238, 175, 2.843, 176, 2.843, 177, 2.843, 178, 3.569, 179, 5.809,
          180, 1.476, 181, 2.248, 182, 2.248, 183, 1.354, 184, 1.203, 185,
          2.597, 186, 1.625, 187, 1.813, 188, 1.547, 189, 1.203, 190, 2.832,
          191, 2.248, 192, 4.31, 193, 2.843, 194, 4.31, 195, 1.476, 196, 1.203,
          197, 2.704, 198, 2.071, 199, 2.843, 200, 2.843, 201, 2.843, 202,
          2.843, 203, 1.93, 204, 2.248, 205, 2.843, 206, 2.843, 207, 2.843, 208,
          5.205, 209, 2.843, 210, 2.843, 211, 2.843, 212, 2.843, 213, 2.843,
          214, 2.484, 215, 2.843, 216, 2.843, 217, 1.636, 218, 2.248, 219,
          2.203, 220, 2.843, 221, 2.843, 222, 2.843, 223, 2.248, 224, 2.843,
          225, 2.071, 226, 2.843, 227, 2.843, 228, 2.843, 229, 2.843, 230,
          2.843, 231, 2.843, 232, 2.843, 233, 2.843, 234, 2.843, 235, 3.793,
          236, 4.31, 237, 2.843, 238, 1.3, 239, 2.843, 240, 1.079, 241, 1.713,
          242, 1.476, 243, 2.484, 244, 2.248, 245, 2.071, 246, 2.843, 247,
          0.911, 248, 2.248, 249, 2.248, 250, 2.248, 251, 1.93,
        ],
      ],
      ['title/modules/AuthModule.html', [35, 1.056, 47, 2.801]],
      [
        'body/modules/AuthModule.html',
        [
          2, 1.76, 3, 0.126, 4, 0.126, 5, 0.085, 7, 0.318, 8, 0.013, 12, 0.687,
          15, 4.26, 16, 2.497, 18, 2.632, 22, 4.686, 28, 0.126, 29, 0.21, 33,
          0.008, 34, 0.008, 35, 1.694, 37, 1.849, 38, 1.781, 39, 1.998, 40,
          1.998, 41, 1.849, 42, 3.026, 43, 3.026, 47, 5.701, 52, 4.843, 55,
          4.843, 57, 4.843, 58, 2.681, 59, 1.921, 60, 1.998, 62, 3.151, 66,
          5.122, 95, 3.454, 96, 1.601, 102, 3.454, 120, 4.821, 181, 3.454, 252,
          3.817, 253, 3.817, 254, 4.368, 255, 3.817, 256, 5.156, 257, 5.156,
          258, 4.368, 259, 4.368, 260, 5.862, 261, 4.368, 262, 4.368, 263,
          3.454, 264, 4.368, 265, 4.635, 266, 4.368, 267, 4.368, 268, 4.368,
          269, 4.368, 270, 3.817, 271, 3.817, 272, 4.368, 273, 3.817, 274,
          4.368, 275, 3.817,
        ],
      ],
      ['title/injectables/AuthService.html', [22, 2.358, 106, 0.819]],
      [
        'body/injectables/AuthService.html',
        [
          3, 0.058, 4, 0.058, 5, 0.039, 7, 0.268, 8, 0.013, 12, 0.314, 15,
          3.593, 16, 1.143, 22, 1.866, 28, 0.058, 29, 0.096, 30, 1.284, 31,
          2.316, 32, 0.759, 33, 0.005, 34, 0.005, 91, 1.581, 96, 2.713, 101,
          1.756, 105, 1.636, 106, 0.648, 107, 0.733, 109, 0.199, 110, 0.891,
          112, 0.815, 114, 1.437, 115, 0.981, 135, 3.968, 138, 1.643, 139,
          0.773, 140, 0.637, 141, 1.542, 142, 1.578, 143, 2.585, 145, 1.865,
          147, 2.104, 151, 4.167, 155, 4.602, 164, 4.602, 168, 2.6, 170, 1.849,
          180, 2.15, 186, 1.143, 187, 1.275, 188, 1.088, 189, 0.846, 190, 3.245,
          191, 1.581, 197, 2.936, 198, 1.457, 203, 2.811, 217, 2.104, 218,
          2.582, 219, 3.023, 223, 4.469, 225, 1.457, 235, 3.016, 238, 2.409,
          240, 1.571, 241, 1.967, 242, 1.696, 243, 1.747, 244, 2.582, 245,
          2.379, 247, 1.046, 248, 3.273, 249, 3.273, 250, 1.581, 251, 1.358,
          263, 1.581, 265, 2.582, 270, 2.853, 273, 1.747, 275, 2.853, 276,
          1.747, 277, 0.836, 278, 4.139, 279, 4.139, 280, 4.139, 281, 2.853,
          282, 3.265, 283, 3.265, 284, 2.853, 285, 1.999, 286, 5.963, 287,
          3.593, 288, 1.999, 289, 3.265, 290, 1.999, 291, 2.853, 292, 1.999,
          293, 3.265, 294, 1.999, 295, 3.265, 296, 3.048, 297, 1.999, 298,
          1.967, 299, 2.582, 300, 2.853, 301, 5.963, 302, 1.999, 303, 2.64, 304,
          1.999, 305, 1.999, 306, 1.999, 307, 1.999, 308, 1.999, 309, 1.747,
          310, 1.747, 311, 1.581, 312, 0.952, 313, 3.016, 314, 1.999, 315,
          1.999, 316, 1.999, 317, 1.275, 318, 1.999, 319, 1.999, 320, 1.999,
          321, 3.265, 322, 1.999, 323, 2.853, 324, 2.379, 325, 3.265, 326,
          1.864, 327, 3.265, 328, 3.265, 329, 1.999, 330, 2.866, 331, 2.853,
          332, 4.176, 333, 2.263, 334, 1.358, 335, 1.457, 336, 1.457, 337,
          1.435, 338, 3.016, 339, 1.358, 340, 1.628, 341, 1.581, 342, 3.617,
          343, 3.265, 344, 3.265, 345, 2.853, 346, 6.436, 347, 3.265, 348,
          1.893, 349, 3.265, 350, 3.265, 351, 3.265, 352, 3.265, 353, 3.265,
          354, 3.265, 355, 3.265, 356, 4.139, 357, 3.265, 358, 3.265, 359,
          4.139, 360, 1.581, 361, 1.999, 362, 1.747, 363, 1.088, 364, 1.747,
          365, 3.265, 366, 1.747, 367, 1.999, 368, 1.999, 369, 1.999, 370,
          1.747, 371, 1.999, 372, 3.265, 373, 1.436, 374, 2.582, 375, 2.582,
          376, 2.853, 377, 2.853, 378, 1.581, 379, 1.581, 380, 1.999, 381,
          1.088, 382, 1.999, 383, 4.139, 384, 3.265, 385, 3.265, 386, 3.265,
          387, 2.379, 388, 2.379, 389, 1.747, 390, 1.999, 391, 1.999, 392,
          1.999, 393, 2.811, 394, 1.999, 395, 1.999, 396, 1.747, 397, 1.747,
          398, 1.747, 399, 1.999, 400, 1.999, 401, 1.999, 402, 1.747, 403,
          4.176, 404, 4.139, 405, 1.999, 406, 2.853, 407, 1.999, 408, 1.457,
          409, 1.358, 410, 1.747, 411, 1.457, 412, 1.747, 413, 2.582, 414,
          1.275, 415, 1.275, 416, 0.879, 417, 1.999, 418, 1.747, 419, 1.747,
          420, 1.747, 421, 1.747, 422, 1.143,
        ],
      ],
      ['title/controllers/CompaniesController.html', [0, 1.238, 423, 3.006]],
      [
        'body/controllers/CompaniesController.html',
        [
          0, 1.126, 2, 1.126, 3, 0.108, 4, 0.108, 5, 0.073, 7, 0.295, 8, 0.012,
          9, 3.173, 12, 0.59, 26, 3.324, 28, 0.108, 29, 0.18, 32, 1.424, 33,
          0.008, 34, 0.008, 71, 1.424, 92, 2.607, 101, 1.906, 109, 0.373, 110,
          1.44, 112, 0.885, 114, 1.906, 115, 1.048, 122, 1.864, 132, 1.627, 138,
          2.031, 139, 0.756, 140, 0.787, 141, 1.906, 145, 2.773, 147, 2.31, 178,
          3.017, 183, 1.787, 184, 1.587, 188, 2.041, 189, 1.587, 195, 1.948,
          196, 1.587, 337, 1.585, 348, 2.794, 423, 3.847, 424, 3.278, 425,
          3.278, 426, 1.487, 427, 2.585, 428, 2.234, 429, 2.234, 430, 3.278,
          431, 4.623, 432, 3.751, 433, 1.649, 434, 2.915, 435, 3.278, 436,
          5.279, 437, 3.181, 438, 3.751, 439, 2.321, 440, 1.587, 441, 3.751,
          442, 3.751, 443, 2.4, 444, 1.587, 445, 3.181, 446, 3.751, 447, 2.393,
          448, 5.162, 449, 3.181, 450, 3.751, 451, 2.26, 452, 1.948, 453, 2.585,
          454, 3.896, 455, 3.278, 456, 1.587, 457, 4.174, 458, 1.649, 459,
          3.751, 460, 3.751, 461, 1.649, 462, 2.393, 463, 3.751, 464, 2.393,
          465, 2.393, 466, 2.393, 467, 3.751, 468, 2.26, 469, 2.26, 470, 3.751,
          471, 2.547, 472, 3.751, 473, 2.26, 474, 3.751,
        ],
      ],
      ['title/modules/CompaniesModule.html', [35, 1.056, 48, 2.801]],
      [
        'body/modules/CompaniesModule.html',
        [
          2, 2.023, 3, 0.157, 4, 0.157, 5, 0.105, 7, 0.312, 8, 0.012, 12, 0.852,
          28, 0.157, 29, 0.26, 33, 0.01, 34, 0.01, 35, 1.878, 37, 2.294, 38,
          2.21, 39, 2.479, 40, 2.479, 41, 2.294, 42, 3.354, 43, 2.479, 48,
          5.463, 58, 3.082, 59, 2.383, 60, 2.479, 62, 2.582, 64, 2.815, 65,
          1.526, 73, 1.52, 139, 0.586, 337, 1.627, 423, 5.344, 454, 5.131, 455,
          4.736, 475, 4.736, 476, 4.736, 477, 5.42, 478, 5.42, 479, 4.91, 480,
          4.736, 481, 2.949, 482, 4.736, 483, 2.21,
        ],
      ],
      ['title/injectables/CompaniesService.html', [106, 0.819, 454, 2.631]],
      [
        'body/injectables/CompaniesService.html',
        [
          3, 0.093, 4, 0.093, 5, 0.063, 7, 0.294, 8, 0.013, 12, 0.506, 28,
          0.093, 29, 0.227, 30, 1.86, 31, 1.416, 33, 0.007, 34, 0.007, 65,
          0.907, 70, 1.6, 71, 2.128, 72, 1.6, 73, 1.265, 92, 2.797, 96, 2.846,
          101, 1.796, 106, 0.939, 107, 1.18, 109, 0.32, 110, 1.29, 112, 0.872,
          114, 1.796, 115, 0.983, 138, 2.001, 139, 0.744, 140, 0.775, 141,
          1.877, 142, 1.306, 143, 2.826, 145, 2.681, 147, 2.097, 170, 0.999,
          180, 1.673, 189, 1.363, 217, 1.74, 219, 2.786, 238, 1.473, 326, 1.938,
          337, 1.42, 348, 2.163, 381, 3.051, 422, 1.841, 426, 1.332, 427, 2.002,
          428, 2.002, 429, 2.002, 430, 4.134, 431, 4.39, 433, 2.08, 434, 2.465,
          439, 2.465, 440, 2.002, 443, 2.279, 444, 2.002, 447, 3.017, 448,
          4.955, 453, 1.363, 454, 3.017, 456, 1.363, 457, 3.74, 458, 1.416, 480,
          2.814, 484, 2.814, 485, 3.22, 486, 3.362, 487, 3.22, 488, 4.73, 489,
          3.22, 490, 2.522, 491, 3.22, 492, 3.22, 493, 3.22, 494, 3.22, 495,
          2.346, 496, 1.752, 497, 1.94, 498, 1.752, 499, 1.841, 500, 2.814, 501,
          1.18, 502, 3.22, 503, 3.22, 504, 1.416, 505, 3.378, 506, 1.841, 507,
          1.94, 508, 1.94, 509, 1.94, 510, 1.94, 511, 1.94, 512, 1.94, 513,
          1.752, 514, 2.85, 515, 2.85, 516, 3.22, 517, 2.85, 518, 1.94, 519,
          2.85, 520, 3.22, 521, 2.054, 522, 1.94, 523, 1.94, 524, 1.94, 525,
          1.94, 526, 1.94, 527, 1.94, 528, 1.94, 529, 1.94, 530, 1.94, 531,
          1.94, 532, 1.94, 533, 2.346, 534, 2.346, 535, 3.22, 536, 3.22, 537,
          4.73, 538, 1.18, 539, 1.416, 540, 3.22,
        ],
      ],
      ['title/classes/Company.html', [29, 0.198, 337, 1.238]],
      [
        'body/classes/Company.html',
        [
          3, 0.116, 4, 0.116, 5, 0.078, 7, 0.214, 8, 0.012, 28, 0.183, 29,
          0.192, 33, 0.008, 34, 0.008, 65, 1.126, 73, 1.245, 105, 2.595, 109,
          0.398, 112, 1.015, 115, 1.015, 132, 1.866, 139, 0.684, 140, 0.939,
          142, 1.472, 174, 3.284, 217, 1.126, 277, 1.413, 326, 1.78, 337, 1.658,
          416, 3.252, 479, 2.915, 483, 2.251, 495, 2.915, 504, 2.78, 538, 2.317,
          539, 2.78, 541, 0.931, 542, 2.915, 543, 3.284, 544, 4.999, 545, 3.809,
          546, 2.399, 547, 3.809, 548, 4.293, 549, 4.999, 550, 4.999, 551, 4,
          552, 5.006, 553, 4, 554, 3.809, 555, 4.456, 556, 4, 557, 4, 558, 4,
          559, 4, 560, 2.868, 561, 4, 562, 4, 563, 4, 564, 4, 565, 4, 566, 2.41,
          567, 3.156, 568, 2.41, 569, 4.607, 570, 2.578, 571, 3.495,
        ],
      ],
      ['title/classes/Company-1.html', [29, 0.165, 337, 1.033, 513, 1.872]],
      [
        'body/classes/Company-1.html',
        [
          3, 0.111, 4, 0.111, 5, 0.074, 7, 0.24, 8, 0.012, 28, 0.111, 29, 0.321,
          33, 0.008, 34, 0.008, 73, 1.208, 105, 1.311, 109, 0.381, 112, 0.782,
          115, 0.983, 132, 1.438, 139, 0.761, 140, 0.793, 170, 1.661, 240,
          2.842, 247, 2.622, 277, 1.371, 303, 3.416, 312, 3.353, 326, 1.739,
          337, 2.114, 340, 2.945, 373, 2.716, 416, 2.941, 490, 2.264, 501,
          1.403, 541, 0.891, 546, 1.453, 548, 4.194, 560, 2.781, 570, 2.184,
          572, 5.289, 573, 2.79, 574, 3.497, 575, 3.828, 576, 3.828, 577, 3.828,
          578, 5.397, 579, 1.988, 580, 3.226, 581, 3.902, 582, 5.397, 583,
          3.939, 584, 3.416, 585, 3.226, 586, 2.914, 587, 2.307, 588, 3.567,
          589, 3.361, 590, 3.186, 591, 3.498, 592, 3.498, 593, 2.307, 594, 2.79,
          595, 3.027, 596, 3.902, 597, 3.637, 598, 3.902, 599, 3.902, 600,
          3.345, 601, 4.5, 602, 3.208, 603, 3.208, 604, 3.208, 605, 4.68, 606,
          4.5, 607, 3.53,
        ],
      ],
      ['title/classes/Company-2.html', [29, 0.165, 313, 2.507, 337, 1.033]],
      [
        'body/classes/Company-2.html',
        [
          3, 0.107, 4, 0.107, 5, 0.072, 7, 0.256, 8, 0.013, 28, 0.175, 29,
          0.347, 32, 1.985, 33, 0.008, 34, 0.008, 73, 1.18, 109, 0.368, 112,
          0.662, 115, 1.025, 132, 1.218, 136, 3.275, 139, 0.802, 140, 0.742,
          142, 1.68, 168, 2.014, 185, 2.23, 186, 3.466, 196, 1.566, 240, 3.091,
          247, 2.624, 277, 1.339, 296, 3.336, 298, 3.151, 312, 1.763, 326,
          1.708, 333, 2.301, 337, 2.087, 340, 3.161, 443, 1.226, 490, 1.917,
          501, 1.357, 541, 0.862, 543, 3.423, 546, 1.985, 570, 2.473, 574,
          3.522, 579, 1.922, 583, 3.336, 584, 3.336, 585, 3.654, 586, 2.845,
          588, 3.829, 590, 1.763, 591, 1.839, 592, 1.839, 608, 2.361, 609,
          3.701, 610, 3.701, 611, 4.419, 612, 3.466, 613, 2.845, 614, 1.922,
          615, 2.989, 616, 2.989, 617, 3.151, 618, 3.767, 619, 3.767, 620,
          2.116, 621, 3.811, 622, 2.514, 623, 2.697,
        ],
      ],
      ['title/classes/CreateCompanyDto.html', [29, 0.198, 431, 2.631]],
      [
        'body/classes/CreateCompanyDto.html',
        [
          3, 0.141, 4, 0.141, 5, 0.095, 7, 0.19, 8, 0.012, 28, 0.141, 29, 0.303,
          33, 0.009, 34, 0.009, 109, 0.486, 112, 0.936, 115, 1.023, 132, 1.72,
          139, 0.827, 140, 0.832, 240, 2.973, 247, 2.367, 277, 1.616, 340, 3.08,
          373, 2.774, 431, 4.025, 501, 1.79, 541, 1.138, 543, 3.972, 546, 2.652,
          548, 5.194, 574, 3.237, 588, 3.731, 602, 3.277, 603, 3.277, 604,
          3.277, 624, 6.683, 625, 3.863, 626, 3.837, 627, 4.885, 628, 6.31, 629,
          4.885, 630, 4.885, 631, 4.885,
        ],
      ],
      ['title/classes/CreateFileDto.html', [29, 0.198, 632, 2.801]],
      [
        'body/classes/CreateFileDto.html',
        [
          3, 0.188, 4, 0.188, 5, 0.126, 8, 0.011, 28, 0.188, 29, 0.313, 33,
          0.011, 34, 0.011, 541, 1.516, 632, 5.109, 633, 5.69, 634, 5.149,
        ],
      ],
      ['title/classes/CreateJobDto.html', [29, 0.198, 587, 2.485]],
      [
        'body/classes/CreateJobDto.html',
        [
          3, 0.085, 4, 0.085, 5, 0.057, 7, 0.207, 8, 0.012, 28, 0.085, 29,
          0.284, 33, 0.006, 34, 0.006, 73, 1, 105, 1.518, 109, 0.293, 112,
          0.953, 115, 0.966, 132, 1.753, 139, 0.721, 140, 0.869, 170, 1.375,
          240, 2.955, 247, 2.535, 277, 1.135, 303, 2.828, 312, 3.531, 326,
          0.831, 337, 2.076, 340, 3.061, 373, 2.931, 416, 3.128, 490, 2.443,
          501, 1.082, 541, 0.687, 546, 2.021, 548, 2.004, 560, 3.075, 570,
          1.204, 572, 6.03, 573, 2.151, 574, 3.295, 578, 4.654, 579, 1.533, 580,
          2.671, 581, 3.231, 582, 4.654, 583, 3.397, 584, 2.828, 585, 2.671,
          586, 2.413, 587, 2.671, 588, 3.673, 589, 3.762, 590, 3.388, 591,
          3.683, 592, 3.683, 593, 1.778, 594, 2.151, 595, 3.506, 596, 4.624,
          597, 4.31, 598, 4.624, 599, 4.624, 600, 3.875, 601, 5.038, 602, 3.462,
          603, 3.462, 604, 2.766, 605, 3.875, 606, 5.038, 607, 3.952, 626, 3.85,
          635, 2.579, 636, 2.952, 637, 2.952, 638, 4.434, 639, 4.434, 640,
          2.952, 641, 2.952, 642, 2.952, 643, 2.952, 644, 2.952, 645, 2.952,
          646, 2.952, 647, 2.952, 648, 2.579, 649, 2.579, 650, 2.952, 651,
          2.952,
        ],
      ],
      ['title/classes/CreatePermissionDto.html', [29, 0.198, 652, 2.631]],
      [
        'body/classes/CreatePermissionDto.html',
        [
          3, 0.14, 4, 0.14, 5, 0.094, 7, 0.243, 8, 0.012, 28, 0.14, 29, 0.301,
          33, 0.009, 34, 0.009, 35, 1.953, 73, 1.415, 109, 0.482, 112, 0.932,
          115, 1.021, 132, 1.714, 139, 0.825, 140, 0.829, 240, 2.966, 247,
          2.359, 277, 1.606, 340, 3.073, 373, 2.759, 501, 1.775, 541, 1.128,
          574, 3.228, 588, 3.722, 602, 3.259, 603, 3.259, 604, 3.259, 613,
          2.635, 626, 3.824, 652, 4.002, 653, 6.665, 654, 3.829, 655, 5.18, 656,
          5.558, 657, 4.843, 658, 4.843, 659, 4.843, 660, 4.843,
        ],
      ],
      ['title/classes/CreateResumeDto.html', [29, 0.198, 661, 2.244]],
      [
        'body/classes/CreateResumeDto.html',
        [
          3, 0.115, 4, 0.115, 5, 0.077, 7, 0.214, 8, 0.012, 28, 0.159, 29,
          0.303, 33, 0.008, 34, 0.008, 73, 1.242, 109, 0.396, 112, 0.936, 115,
          0.992, 132, 1.72, 140, 0.832, 142, 1.663, 240, 2.874, 247, 2.566, 277,
          1.41, 340, 2.977, 373, 3.393, 443, 1.824, 501, 1.461, 541, 0.928, 570,
          3.012, 574, 3.355, 588, 3.607, 602, 4.008, 603, 4.008, 604, 4.008,
          613, 3.433, 620, 3.148, 626, 3.837, 661, 2.997, 662, 5.987, 663,
          2.542, 664, 5.383, 665, 5.383, 666, 4.262, 667, 5.517, 668, 4.556,
          669, 3.483, 670, 3.986, 671, 3.483, 672, 3.986, 673, 3.986, 674,
          3.483, 675, 2.542,
        ],
      ],
      ['title/classes/CreateRoleDto.html', [29, 0.198, 676, 2.631]],
      [
        'body/classes/CreateRoleDto.html',
        [
          3, 0.127, 4, 0.127, 5, 0.085, 7, 0.228, 8, 0.012, 28, 0.127, 29,
          0.282, 33, 0.008, 34, 0.008, 73, 1.324, 105, 2.01, 109, 0.435, 112,
          0.896, 115, 0.896, 132, 1.648, 139, 0.798, 140, 0.797, 240, 2.883,
          247, 2.527, 277, 1.503, 312, 3.371, 330, 4.347, 340, 2.987, 373,
          2.581, 443, 1.449, 501, 1.604, 541, 1.019, 546, 2.801, 555, 3.537,
          560, 3.675, 570, 2.393, 574, 3.123, 580, 3.537, 581, 4.277, 588,
          3.515, 590, 3.371, 591, 2.917, 592, 2.917, 593, 3.537, 594, 4.826,
          602, 3.049, 603, 3.049, 604, 2.273, 607, 4.436, 613, 3.194, 620,
          3.355, 626, 3.675, 676, 3.744, 677, 6.449, 678, 3.461, 679, 4.377,
          680, 4.377, 681, 5.87, 682, 5.87, 683, 4.377, 684, 4.377, 685, 4.377,
          686, 4.377, 687, 4.377,
        ],
      ],
      ['title/classes/CreateSubscriberDto.html', [29, 0.198, 688, 2.631]],
      [
        'body/classes/CreateSubscriberDto.html',
        [
          3, 0.133, 4, 0.133, 5, 0.089, 7, 0.235, 8, 0.012, 28, 0.133, 29,
          0.291, 33, 0.009, 34, 0.009, 73, 1.367, 105, 2.075, 109, 0.457, 112,
          0.859, 115, 1.01, 132, 1.58, 139, 0.811, 140, 0.764, 142, 1.829, 240,
          2.923, 247, 2.554, 277, 1.552, 312, 3.436, 340, 3.029, 373, 2.665,
          501, 1.684, 541, 1.07, 574, 3.053, 580, 3.652, 581, 3.347, 585, 3.652,
          588, 3.572, 589, 4.273, 590, 2.887, 591, 3.827, 592, 3.726, 593,
          2.768, 594, 3.347, 595, 4.793, 612, 3.878, 613, 2.499, 626, 3.148,
          648, 4.014, 649, 4.014, 688, 3.866, 689, 6.304, 690, 3.632, 691,
          4.793, 692, 4.593, 693, 4.593, 694, 4.593, 695, 4.593,
        ],
      ],
      ['title/classes/CreateUserCvDto.html', [29, 0.198, 675, 2.631]],
      [
        'body/classes/CreateUserCvDto.html',
        [
          3, 0.125, 4, 0.125, 5, 0.084, 7, 0.225, 8, 0.012, 28, 0.168, 29,
          0.316, 33, 0.008, 34, 0.008, 73, 1.31, 109, 0.428, 112, 0.832, 115,
          0.958, 132, 1.53, 140, 0.74, 142, 1.353, 240, 2.786, 247, 2.602, 277,
          1.487, 340, 2.887, 373, 3.398, 443, 2.329, 501, 1.579, 541, 1.003,
          570, 3.084, 574, 3.406, 588, 3.497, 602, 4.015, 603, 4.015, 604,
          3.813, 613, 3.575, 620, 4.019, 626, 3.413, 661, 2.345, 662, 5.56, 663,
          2.749, 664, 5.727, 665, 5.727, 666, 3.826, 667, 5.632, 668, 3.705,
          675, 3.705, 696, 5.809, 697, 4.309, 698, 3.766, 699, 4.309,
        ],
      ],
      ['title/classes/CreateUserDto.html', [29, 0.198, 614, 2.142]],
      [
        'body/classes/CreateUserDto.html',
        [
          3, 0.09, 4, 0.09, 5, 0.06, 7, 0.236, 8, 0.013, 28, 0.159, 29, 0.326,
          32, 1.751, 33, 0.007, 34, 0.007, 73, 1.041, 109, 0.309, 112, 0.915,
          115, 1.022, 132, 1.683, 136, 3.378, 139, 0.782, 140, 0.846, 142,
          1.749, 168, 1.693, 185, 1.875, 186, 4.219, 196, 1.317, 240, 3.127,
          247, 2.572, 277, 1.181, 296, 3.506, 298, 2.779, 312, 2.197, 326,
          0.876, 333, 2.67, 337, 2.113, 340, 3.204, 443, 1.528, 490, 2.014, 501,
          1.141, 541, 0.725, 543, 3.654, 546, 1.751, 570, 2.241, 574, 3.416,
          579, 1.617, 583, 2.942, 584, 2.942, 585, 3.311, 586, 2.51, 588, 3.864,
          590, 2.197, 591, 2.292, 592, 2.292, 608, 1.985, 611, 4.005, 612,
          3.474, 613, 2.51, 614, 2.396, 615, 3.142, 616, 3.142, 617, 2.779, 618,
          4.022, 619, 4.022, 620, 2.637, 621, 3.361, 622, 2.114, 623, 2.268,
          626, 3.531, 635, 2.72, 700, 3.112, 701, 3.112, 702, 3.112, 703, 2.72,
          704, 3.112, 705, 3.112, 706, 2.72, 707, 3.112, 708, 3.112, 709, 3.112,
        ],
      ],
      ['title/controllers/DatabasesController.html', [0, 1.238, 710, 3.006]],
      [
        'body/controllers/DatabasesController.html',
        [
          0, 1.857, 2, 1.857, 3, 0.179, 4, 0.179, 5, 0.12, 7, 0.283, 8, 0.012,
          12, 0.973, 28, 0.179, 29, 0.297, 32, 2.348, 33, 0.011, 34, 0.011, 122,
          3.074, 461, 2.72, 710, 5.321, 711, 5.406, 712, 6.187, 713, 4.955, 714,
          5.406, 715, 6.187,
        ],
      ],
      ['title/modules/DatabasesModule.html', [35, 1.056, 49, 2.801]],
      [
        'body/modules/DatabasesModule.html',
        [
          2, 1.919, 3, 0.144, 4, 0.144, 5, 0.097, 7, 0.315, 8, 0.013, 12, 0.784,
          28, 0.144, 29, 0.239, 33, 0.009, 34, 0.009, 35, 1.806, 37, 2.109, 38,
          2.032, 39, 2.279, 40, 2.279, 41, 2.109, 42, 3.227, 43, 2.279, 49,
          5.507, 58, 2.923, 59, 2.191, 60, 2.279, 62, 2.374, 64, 2.588, 65,
          1.403, 139, 0.763, 147, 1.403, 197, 4.09, 198, 3.631, 333, 1.891, 481,
          2.712, 483, 2.877, 710, 5.141, 713, 5.022, 714, 4.355, 716, 4.355,
          717, 4.355, 718, 4.984, 719, 4.984, 720, 4.34, 721, 3.941, 722, 2.374,
          723, 4.34, 724, 3.941, 725, 4.077, 726, 3.384, 727, 4.355, 728, 3.941,
          729, 3.631,
        ],
      ],
      ['title/injectables/DatabasesService.html', [106, 0.819, 713, 2.631]],
      [
        'body/injectables/DatabasesService.html',
        [
          3, 0.102, 4, 0.102, 5, 0.069, 7, 0.296, 8, 0.013, 12, 0.555, 15,
          4.408, 16, 2.018, 28, 0.102, 29, 0.17, 30, 1.989, 31, 3.002, 33,
          0.007, 34, 0.007, 65, 0.994, 70, 1.755, 71, 1.34, 72, 1.755, 73,
          0.797, 96, 2.166, 105, 1.732, 106, 1.004, 107, 1.294, 109, 0.351, 110,
          1.38, 112, 0.641, 114, 0.963, 136, 2.936, 138, 1.027, 139, 0.809, 140,
          0.398, 141, 0.963, 142, 1.376, 147, 0.994, 197, 3.351, 198, 2.573,
          217, 2.06, 219, 3.224, 324, 2.573, 330, 3.511, 333, 2.591, 426, 0.994,
          486, 4.206, 496, 1.921, 543, 3.069, 546, 1.919, 607, 2.891, 618,
          3.377, 619, 3.377, 622, 2.398, 713, 3.226, 721, 2.792, 722, 1.682,
          724, 2.792, 726, 2.398, 730, 3.086, 731, 7.105, 732, 3.086, 733,
          5.163, 734, 4.672, 735, 5.909, 736, 3.531, 737, 4.419, 738, 3.531,
          739, 2.398, 740, 2.252, 741, 2.252, 742, 4.306, 743, 2.792, 744,
          4.306, 745, 5.058, 746, 2.398, 747, 3.531, 748, 3.086, 749, 2.792,
          750, 3.531, 751, 3.531, 752, 3.531, 753, 5.909, 754, 3.531, 755,
          5.909, 756, 3.531, 757, 5.909, 758, 3.531, 759, 5.177, 760, 3.531,
          761, 3.531, 762, 3.531, 763, 3.685, 764, 3.531, 765, 3.531, 766,
          3.531, 767, 3.086, 768, 3.086, 769, 3.531, 770, 3.999, 771, 3.531,
          772, 3.086, 773, 5.909, 774, 5.909, 775, 3.531, 776, 5.058, 777,
          5.909, 778, 5.058, 779, 3.531, 780, 5.058, 781, 5.058, 782, 3.531,
          783, 3.531, 784, 3.086, 785, 3.086, 786, 3.531, 787, 3.531, 788,
          2.573,
        ],
      ],
      ['title/classes/File.html', [5, 0.08, 29, 0.198]],
      [
        'body/classes/File.html',
        [
          3, 0.189, 4, 0.189, 5, 0.154, 8, 0.011, 28, 0.189, 29, 0.314, 33,
          0.011, 34, 0.011, 541, 1.521, 789, 5.707,
        ],
      ],
      ['title/controllers/FilesController.html', [0, 1.238, 790, 3.006]],
      [
        'body/controllers/FilesController.html',
        [
          0, 0.728, 2, 0.728, 3, 0.07, 4, 0.07, 5, 0.162, 7, 0.25, 8, 0.013, 9,
          1.26, 12, 0.381, 26, 2.905, 28, 0.07, 29, 0.116, 32, 0.92, 33, 0.005,
          34, 0.005, 96, 1.726, 101, 1.681, 109, 0.241, 110, 1.04, 112, 0.597,
          114, 1.681, 115, 0.483, 122, 1.205, 132, 1.097, 138, 1.37, 139, 0.628,
          140, 0.694, 141, 1.285, 143, 1.109, 170, 2.18, 174, 1.98, 180, 3.015,
          183, 1.155, 184, 1.026, 188, 1.32, 195, 1.26, 196, 1.026, 204, 1.918,
          217, 1.326, 238, 3.214, 240, 2.026, 241, 1.461, 242, 2.447, 247,
          1.711, 332, 2.119, 335, 4.49, 336, 4.49, 338, 3.891, 340, 2.764, 366,
          3.331, 378, 1.918, 379, 1.918, 408, 2.778, 414, 1.547, 415, 1.547,
          452, 2.447, 461, 1.066, 513, 2.074, 546, 1.788, 615, 2.179, 616,
          2.179, 617, 2.297, 759, 1.767, 790, 2.778, 791, 2.119, 792, 6.824,
          793, 3.812, 794, 3.812, 795, 4.71, 796, 2.425, 797, 6.868, 798, 3.812,
          799, 2.425, 800, 5.804, 801, 3.331, 802, 2.425, 803, 2.425, 804,
          6.248, 805, 5.339, 806, 4.666, 807, 5.804, 808, 4.222, 809, 3.331,
          810, 3.812, 811, 3.331, 812, 3.812, 813, 5.339, 814, 5.339, 815,
          3.891, 816, 2.425, 817, 2.425, 818, 3.812, 819, 2.425, 820, 2.425,
          821, 3.812, 822, 2.425, 823, 2.425, 824, 2.425, 825, 2.425, 826,
          5.339, 827, 3.812, 828, 3.812, 829, 5.339, 830, 5.339, 831, 3.812,
          832, 2.425, 833, 5.339, 834, 5.804, 835, 2.425, 836, 3.005, 837,
          2.119, 838, 2.425, 839, 3.812, 840, 2.425, 841, 1.767, 842, 1.767,
          843, 3.331, 844, 1.767, 845, 2.425, 846, 2.425, 847, 2.425, 848,
          2.425, 849, 4.71, 850, 4.71, 851, 2.425, 852, 2.425, 853, 3.812, 854,
          1.767, 855, 1.547, 856, 1.918, 857, 4.116, 858, 2.425, 859, 2.425,
          860, 2.425, 861, 1.918, 862, 2.425, 863, 2.425, 864, 2.425, 865,
          3.812, 866, 5.385, 867, 5.339, 868, 3.812, 869, 2.425, 870, 2.119,
          871, 3.331, 872, 4.71, 873, 2.425, 874, 5.072, 875, 2.425, 876, 2.119,
          877, 2.425, 878, 2.425, 879, 2.425, 880, 2.425, 881, 2.425, 882,
          2.425, 883, 2.425, 884, 3.812, 885, 2.425, 886, 2.425, 887, 3.331,
          888, 2.425, 889, 2.425, 890, 2.425, 891, 3.812, 892, 3.812, 893,
          3.812, 894, 3.812, 895, 3.812, 896, 2.425, 897, 2.425, 898, 2.425,
          899, 2.425, 900, 2.425, 901, 2.425, 902, 2.425, 903, 2.425, 904,
          2.425,
        ],
      ],
      ['title/modules/FilesModule.html', [35, 1.056, 50, 2.801]],
      [
        'body/modules/FilesModule.html',
        [
          2, 2.042, 3, 0.159, 4, 0.159, 5, 0.107, 7, 0.307, 8, 0.012, 12, 0.865,
          28, 0.159, 29, 0.264, 33, 0.01, 34, 0.01, 35, 1.89, 37, 2.328, 38,
          2.243, 39, 2.515, 40, 2.515, 41, 2.328, 42, 3.376, 43, 2.515, 50,
          5.483, 58, 3.11, 59, 2.418, 60, 2.515, 62, 2.62, 188, 2.993, 790,
          5.38, 836, 5.15, 837, 4.806, 841, 4.008, 905, 4.806, 906, 4.806, 907,
          5.5, 908, 5.5, 909, 5.5, 910, 4.955, 911, 5.5, 912, 5.5, 913, 5.5,
        ],
      ],
      ['title/injectables/FilesService.html', [106, 0.819, 836, 2.631]],
      [
        'body/injectables/FilesService.html',
        [
          3, 0.133, 4, 0.133, 5, 0.146, 7, 0.263, 8, 0.012, 12, 0.724, 28,
          0.133, 29, 0.221, 33, 0.009, 34, 0.009, 101, 2.047, 106, 1.205, 107,
          1.687, 109, 0.458, 110, 1.656, 112, 0.95, 114, 2.143, 115, 0.95, 138,
          2.099, 139, 0.781, 140, 0.813, 141, 1.969, 170, 1.427, 348, 2.776,
          426, 1.709, 427, 3.055, 428, 2.569, 429, 2.569, 440, 2.569, 443,
          2.552, 444, 2.569, 447, 3.871, 456, 1.948, 458, 2.024, 490, 2.957,
          632, 5.096, 792, 4.022, 836, 3.871, 914, 4.022, 915, 6.069, 916,
          4.603, 917, 4.603, 918, 4.603, 919, 4.603, 920, 5.726, 921, 4.603,
          922, 5.304, 923, 7.504, 924, 4.603, 925, 4.603, 926, 4.603,
        ],
      ],
      ['title/classes/History.html', [29, 0.198, 927, 2.485]],
      [
        'body/classes/History.html',
        [
          3, 0.139, 4, 0.139, 5, 0.093, 7, 0.295, 8, 0.012, 28, 0.139, 29,
          0.365, 33, 0.009, 34, 0.009, 73, 1.081, 109, 0.476, 112, 0.877, 115,
          0.877, 132, 1.612, 140, 0.878, 142, 1.116, 247, 1.996, 277, 1.595,
          312, 2.282, 326, 1.349, 373, 2.106, 416, 2.739, 426, 1.349, 501,
          1.756, 538, 2.908, 541, 1.116, 574, 3.441, 579, 2.488, 580, 3.754,
          586, 3.768, 590, 2.282, 591, 2.381, 592, 2.381, 593, 2.886, 602,
          2.488, 603, 2.488, 604, 2.488, 612, 3.561, 661, 2.607, 663, 3.056,
          666, 3.768, 669, 4.186, 671, 4.186, 855, 3.056, 927, 4.78, 928, 5.343,
          929, 3.958, 930, 4.791, 931, 4.791, 932, 2.488, 933, 2.488, 934,
          3.096, 935, 3.253, 936, 3.788, 937, 3.056, 938, 2.106, 939, 3.788,
        ],
      ],
      ['title/interfaces/IUser.html', [145, 1.461, 940, 2.631]],
      [
        'body/interfaces/IUser.html',
        [
          3, 0.15, 4, 0.15, 5, 0.101, 8, 0.012, 28, 0.15, 33, 0.009, 34, 0.009,
          35, 1.333, 109, 0.517, 115, 1.083, 139, 0.875, 140, 0.947, 141, 2.063,
          142, 1.761, 145, 2.327, 174, 4.136, 277, 1.682, 326, 2.277, 330,
          4.115, 333, 2.87, 337, 2.271, 655, 3.534, 940, 3.32, 941, 4.115, 942,
          4.548,
        ],
      ],
      ['title/classes/Job.html', [29, 0.198, 943, 2.05]],
      [
        'body/classes/Job.html',
        [
          3, 0.099, 4, 0.099, 5, 0.067, 7, 0.192, 8, 0.012, 28, 0.168, 29,
          0.165, 33, 0.007, 34, 0.007, 65, 0.968, 73, 1.119, 105, 1.177, 109,
          0.342, 112, 1.037, 115, 1.02, 132, 1.906, 139, 0.689, 140, 0.948, 142,
          1.356, 174, 3.31, 217, 0.968, 277, 1.27, 326, 1.795, 337, 1.748, 363,
          3.168, 416, 3.379, 483, 2.023, 490, 2.336, 504, 2.56, 538, 2.134, 539,
          2.56, 541, 0.801, 545, 3.507, 546, 2.209, 547, 3.507, 548, 2.335, 549,
          4.603, 552, 5.12, 554, 3.84, 555, 4.477, 560, 3.31, 566, 2.072, 567,
          2.836, 568, 2.072, 570, 2.599, 589, 3.168, 596, 4.242, 597, 3.953,
          598, 4.242, 599, 4.242, 601, 4.242, 606, 4.242, 607, 3.327, 943,
          2.466, 944, 2.506, 945, 3.439, 946, 3.439, 947, 3.439, 948, 3.439,
          949, 3.439, 950, 3.439, 951, 3.439, 952, 3.439, 953, 3.439, 954,
          3.439, 955, 3.439, 956, 3.439, 957, 3.439, 958, 3.439, 959, 3.439,
          960, 3.439, 961, 3.439, 962, 3.439, 963, 2.506, 964, 2.335, 965,
          3.005,
        ],
      ],
      ['title/controllers/JobsController.html', [0, 1.238, 966, 3.006]],
      [
        'body/controllers/JobsController.html',
        [
          0, 1.005, 2, 1.005, 3, 0.097, 4, 0.097, 5, 0.065, 7, 0.286, 8, 0.012,
          9, 2.527, 11, 2.78, 12, 0.526, 26, 3.119, 28, 0.097, 29, 0.161, 32,
          1.27, 33, 0.007, 34, 0.007, 71, 1.27, 92, 2.9, 101, 1.903, 109, 0.333,
          110, 1.327, 112, 0.883, 114, 1.903, 115, 1.063, 122, 1.663, 132,
          1.624, 138, 2.028, 139, 0.754, 140, 0.786, 141, 1.903, 145, 2.705,
          147, 2.272, 157, 4.176, 170, 1.509, 178, 2.78, 183, 1.594, 184, 1.416,
          186, 1.912, 187, 2.134, 189, 1.416, 195, 1.738, 196, 1.416, 348,
          2.621, 426, 1.37, 427, 2.426, 428, 2.059, 429, 2.059, 433, 1.471, 434,
          3.243, 435, 2.924, 437, 2.931, 439, 2.767, 440, 1.416, 443, 2.442,
          444, 1.416, 445, 2.016, 447, 2.134, 449, 2.016, 451, 2.016, 452,
          1.738, 453, 2.426, 456, 1.416, 458, 1.471, 461, 1.471, 462, 2.134,
          464, 3.656, 465, 3.103, 466, 3.103, 468, 2.016, 469, 2.016, 471,
          2.272, 473, 2.016, 587, 4.202, 614, 1.738, 763, 3.545, 943, 3.665,
          966, 3.545, 967, 2.924, 968, 5.842, 969, 5.009, 970, 2.924, 971,
          2.134, 972, 3.346, 973, 3.346, 974, 2.924, 975, 3.346, 976, 4.864,
          977, 3.346, 978, 3.346, 979, 3.346, 980, 2.134, 981, 3.346, 982,
          5.008, 983, 2.438, 984, 3.346, 985, 3.656, 986, 2.924, 987, 3.846,
          988, 3.346, 989, 3.346, 990, 2.272, 991, 3.346, 992, 3.346, 993,
          3.346, 994, 3.346, 995, 2.438, 996, 3.346, 997, 2.272, 998, 3.346,
          999, 2.272, 1000, 3.346,
        ],
      ],
      ['title/modules/JobsModule.html', [35, 1.056, 51, 2.801]],
      [
        'body/modules/JobsModule.html',
        [
          2, 2.039, 3, 0.159, 4, 0.159, 5, 0.106, 7, 0.307, 8, 0.012, 12, 0.863,
          28, 0.159, 29, 0.263, 33, 0.01, 34, 0.01, 35, 1.888, 37, 2.322, 38,
          2.237, 39, 2.509, 40, 2.509, 41, 2.322, 42, 3.373, 43, 2.509, 51,
          5.48, 58, 3.105, 59, 2.412, 60, 2.509, 62, 2.613, 64, 2.85, 65, 1.545,
          139, 0.593, 481, 2.985, 483, 2.237, 943, 2.726, 964, 4.611, 966,
          5.374, 985, 5.147, 986, 4.794, 1001, 4.794, 1002, 4.794, 1003, 5.486,
          1004, 5.486, 1005, 4.794, 1006, 4.338,
        ],
      ],
      ['title/injectables/JobsService.html', [106, 0.819, 985, 2.631]],
      [
        'body/injectables/JobsService.html',
        [
          3, 0.075, 4, 0.075, 5, 0.05, 7, 0.278, 8, 0.013, 12, 0.408, 28, 0.075,
          29, 0.125, 30, 1.58, 31, 1.141, 33, 0.006, 34, 0.006, 65, 0.731, 70,
          1.289, 71, 2.274, 72, 1.289, 73, 1.11, 92, 2.984, 96, 2.876, 101,
          1.863, 106, 0.798, 107, 0.951, 109, 0.258, 110, 1.096, 112, 0.837,
          114, 1.729, 115, 0.971, 138, 1.922, 139, 0.758, 140, 0.745, 141,
          1.803, 142, 1.145, 143, 2.898, 145, 2.537, 147, 2.113, 170, 0.805,
          189, 1.098, 217, 2.113, 219, 2.891, 242, 1.348, 251, 1.762, 326,
          1.861, 334, 1.762, 337, 1.207, 339, 1.762, 341, 2.052, 348, 1.838,
          381, 2.676, 409, 2.729, 414, 1.655, 415, 1.655, 422, 2.297, 426,
          1.132, 427, 1.701, 428, 1.701, 429, 1.701, 433, 1.767, 434, 2.786,
          439, 2.906, 440, 1.701, 443, 1.834, 444, 1.701, 453, 1.098, 456,
          1.098, 458, 1.141, 486, 3.014, 490, 2.714, 496, 1.412, 497, 1.563,
          498, 1.412, 499, 1.483, 504, 1.141, 505, 2.963, 506, 2.297, 507,
          2.421, 508, 2.421, 509, 2.421, 510, 2.421, 511, 2.421, 512, 2.421,
          513, 2.186, 514, 3.337, 515, 3.337, 517, 3.337, 518, 2.421, 519,
          3.337, 521, 2.563, 522, 2.421, 523, 2.421, 524, 2.421, 525, 2.421,
          526, 2.421, 527, 2.421, 528, 2.421, 529, 2.421, 530, 2.421, 531,
          2.421, 532, 2.421, 538, 0.951, 539, 1.141, 546, 1.525, 587, 3.818,
          589, 2.186, 596, 2.928, 597, 2.729, 598, 2.928, 599, 2.928, 601,
          2.928, 606, 2.928, 607, 2.297, 721, 2.052, 741, 1.655, 943, 2.444,
          969, 4.298, 970, 3.511, 974, 2.267, 982, 4.638, 985, 2.563, 987,
          3.178, 1005, 2.267, 1007, 2.267, 1008, 2.594, 1009, 2.594, 1010,
          3.511, 1011, 2.594, 1012, 2.594, 1013, 2.594, 1014, 2.594, 1015,
          2.594, 1016, 2.928, 1017, 2.594, 1018, 2.267, 1019, 4.018, 1020,
          2.594, 1021, 4.018, 1022, 4.018, 1023, 1.762, 1024, 3.511, 1025, 1.89,
          1026, 1.89, 1027, 1.563, 1028, 2.267, 1029, 2.052, 1030, 2.267, 1031,
          2.267, 1032, 2.267, 1033, 1.762, 1034, 2.563, 1035, 2.594, 1036,
          2.563, 1037, 4.018, 1038, 2.594,
        ],
      ],
      ['title/injectables/JwtAuthGuard.html', [24, 3.006, 106, 0.819]],
      [
        'body/injectables/JwtAuthGuard.html',
        [
          3, 0.207, 4, 0.115, 5, 0.077, 7, 0.277, 8, 0.013, 11, 3.89, 12, 0.627,
          17, 3.152, 18, 2.401, 24, 4.013, 28, 0.115, 29, 0.191, 30, 1.567, 33,
          0.008, 34, 0.008, 101, 1.721, 105, 1.886, 106, 1.093, 107, 1.461, 109,
          0.396, 110, 1.502, 112, 0.799, 114, 1.502, 115, 0.505, 138, 1.835,
          139, 0.683, 140, 0.711, 141, 1.721, 147, 2.012, 170, 1.708, 184,
          1.687, 188, 2.169, 217, 2.08, 223, 4.99, 238, 2.886, 330, 2.169, 373,
          2.774, 374, 3.152, 375, 3.152, 461, 1.752, 590, 2.623, 722, 2.623,
          938, 2.421, 1039, 5.948, 1040, 3.152, 1041, 5.507, 1042, 5.507, 1043,
          5.507, 1044, 3.483, 1045, 5.841, 1046, 3.986, 1047, 5.507, 1048,
          5.517, 1049, 3.986, 1050, 4.622, 1051, 5.507, 1052, 3.986, 1053,
          6.806, 1054, 3.986, 1055, 4.812, 1056, 2.904, 1057, 3.152, 1058,
          4.355, 1059, 2.904, 1060, 4.812, 1061, 3.986, 1062, 4.355, 1063,
          5.507, 1064, 3.986, 1065, 3.986, 1066, 5.507, 1067, 3.986, 1068,
          3.483, 1069, 3.483, 1070, 3.986, 1071, 5.507, 1072, 3.986, 1073,
          3.483, 1074, 3.152, 1075, 5.507, 1076, 3.986, 1077, 5.507, 1078,
          3.986, 1079, 3.986, 1080, 4.285, 1081, 3.986, 1082, 3.986, 1083,
          3.986, 1084, 3.986, 1085, 3.986, 1086, 3.986, 1087, 3.483, 1088,
          3.986, 1089, 3.986,
        ],
      ],
      ['title/injectables/JwtStrategy.html', [106, 0.819, 256, 2.801]],
      [
        'body/injectables/JwtStrategy.html',
        [
          3, 0.133, 4, 0.133, 5, 0.09, 7, 0.299, 8, 0.013, 12, 0.725, 15, 4.646,
          16, 2.636, 18, 2.779, 28, 0.133, 29, 0.221, 30, 2.39, 31, 2.672, 33,
          0.009, 34, 0.009, 96, 2.491, 101, 1.258, 106, 1.206, 107, 1.69, 109,
          0.459, 110, 1.658, 112, 0.77, 114, 1.258, 115, 0.77, 138, 1.767, 139,
          0.812, 140, 0.685, 141, 1.658, 142, 1.415, 143, 2.78, 145, 2.559, 189,
          1.952, 190, 4.278, 191, 3.647, 217, 1.914, 218, 3.647, 219, 1.952,
          256, 4.127, 271, 4.03, 317, 2.942, 324, 3.361, 326, 1.914, 330, 3.307,
          331, 4.03, 333, 2.58, 337, 1.825, 342, 5.311, 393, 3.132, 855, 3.877,
          938, 2.672, 995, 4.429, 1059, 3.361, 1090, 4.03, 1091, 5.311, 1092,
          4.612, 1093, 4.612, 1094, 6.078, 1095, 4.612, 1096, 4.612, 1097, 4.03,
          1098, 3.647, 1099, 4.03, 1100, 4.612, 1101, 4.612, 1102, 4.612, 1103,
          4.612, 1104, 4.612, 1105, 4.612, 1106, 4.612,
        ],
      ],
      ['title/injectables/LocalAuthGuard.html', [19, 2.801, 106, 0.819]],
      [
        'body/injectables/LocalAuthGuard.html',
        [
          3, 0.18, 4, 0.18, 5, 0.121, 7, 0.284, 8, 0.012, 12, 0.978, 17, 4.919,
          18, 3.748, 19, 4.975, 28, 0.18, 29, 0.299, 33, 0.011, 34, 0.011, 106,
          1.454, 107, 2.28, 938, 3.221, 1040, 4.919, 1107, 5.436, 1108, 7.326,
        ],
      ],
      ['title/injectables/LocalStrategy.html', [106, 0.819, 257, 2.801]],
      [
        'body/injectables/LocalStrategy.html',
        [
          3, 0.147, 4, 0.147, 5, 0.099, 7, 0.291, 8, 0.012, 12, 0.8, 18, 3.064,
          22, 4.525, 28, 0.147, 29, 0.244, 30, 2, 33, 0.009, 34, 0.009, 96,
          2.611, 101, 1.387, 106, 1.285, 107, 1.864, 109, 0.506, 110, 1.766,
          112, 0.82, 114, 1.387, 115, 1.003, 136, 3.726, 138, 1.883, 139, 0.7,
          140, 0.729, 141, 1.766, 147, 2.006, 170, 1.577, 181, 4.022, 182,
          4.022, 217, 1.432, 219, 2.152, 238, 2.326, 257, 4.397, 298, 3.064,
          299, 5.12, 317, 3.244, 373, 2.236, 374, 4.022, 375, 4.022, 461, 2.236,
          855, 4.13, 938, 2.847, 995, 3.706, 1055, 4.444, 1059, 3.706, 1091,
          5.658, 1097, 4.444, 1099, 4.444, 1109, 4.444, 1110, 5.086, 1111,
          5.086, 1112, 6.475, 1113, 5.086, 1114, 5.086, 1115, 5.086,
        ],
      ],
      ['title/controllers/MailController.html', [0, 1.238, 1116, 3.006]],
      [
        'body/controllers/MailController.html',
        [
          0, 1.239, 2, 1.239, 3, 0.119, 4, 0.119, 5, 0.08, 7, 0.313, 8, 0.013,
          12, 0.649, 26, 3.069, 28, 0.119, 29, 0.198, 30, 1.622, 31, 3.037, 32,
          1.566, 33, 0.008, 34, 0.008, 65, 1.162, 70, 2.05, 71, 1.566, 72, 2.05,
          73, 0.931, 85, 3.263, 96, 2.355, 101, 1.125, 109, 0.41, 110, 1.538,
          112, 0.523, 114, 1.125, 122, 2.05, 132, 0.961, 139, 0.446, 142, 1.313,
          183, 1.965, 184, 1.746, 195, 2.143, 196, 1.746, 217, 2.036, 219,
          2.719, 287, 3.871, 337, 1.239, 486, 3.496, 496, 2.245, 589, 3.069,
          597, 2.802, 759, 5.033, 943, 2.05, 963, 3.006, 968, 5.615, 1010,
          3.605, 1018, 3.605, 1050, 2.802, 1116, 4.109, 1117, 3.605, 1118, 5.64,
          1119, 6.907, 1120, 4.126, 1121, 4.126, 1122, 4.126, 1123, 3.605, 1124,
          2.486, 1125, 5.615, 1126, 2.802, 1127, 3.006, 1128, 2.358, 1129,
          2.802, 1130, 3.605, 1131, 2.802, 1132, 4.126, 1133, 4.126, 1134,
          4.126, 1135, 4.126, 1136, 3.605, 1137, 3.605, 1138, 4.126, 1139,
          4.126, 1140, 4.126, 1141, 4.126, 1142, 4.126, 1143, 4.126, 1144,
          4.126, 1145, 5.615, 1146, 4.126, 1147, 4.126, 1148, 5.64, 1149, 4.126,
          1150, 4.126, 1151, 4.126, 1152, 4.126, 1153, 4.126, 1154, 4.126, 1155,
          4.126, 1156, 4.126, 1157, 4.126, 1158, 3.605, 1159, 4.126, 1160,
          3.263, 1161, 3.605, 1162, 3.605, 1163, 4.126, 1164, 4.126, 1165,
          4.126, 1166, 4.126, 1167, 3.263, 1168, 4.126,
        ],
      ],
      ['title/modules/MailModule.html', [35, 1.056, 52, 2.631]],
      [
        'body/modules/MailModule.html',
        [
          2, 1.76, 3, 0.126, 4, 0.126, 5, 0.085, 7, 0.318, 8, 0.013, 12, 0.687,
          15, 4.26, 16, 2.497, 28, 0.126, 29, 0.21, 33, 0.008, 34, 0.008, 35,
          1.694, 37, 1.849, 38, 1.781, 39, 1.998, 40, 1.998, 41, 1.849, 42,
          3.026, 43, 3.026, 52, 4.947, 58, 2.681, 59, 1.921, 60, 1.998, 62,
          2.081, 64, 2.269, 65, 1.23, 95, 3.454, 96, 1.601, 102, 3.454, 105,
          2.265, 123, 3.817, 139, 0.634, 147, 1.23, 170, 1.355, 287, 4.939, 296,
          2.786, 393, 3.981, 481, 2.377, 483, 2.39, 861, 3.454, 943, 2.171, 964,
          3.981, 1006, 3.454, 1116, 4.821, 1123, 3.817, 1124, 2.632, 1126,
          3.981, 1127, 3.183, 1128, 2.497, 1130, 3.817, 1131, 2.967, 1167,
          3.454, 1169, 3.817, 1170, 3.817, 1171, 3.817, 1172, 4.368, 1173,
          4.368, 1174, 4.368, 1175, 2.967, 1176, 5.862, 1177, 4.368, 1178,
          5.862, 1179, 4.368, 1180, 3.981, 1181, 4.368, 1182, 4.368, 1183,
          3.817, 1184, 4.368, 1185, 4.368, 1186, 4.368, 1187, 4.368, 1188,
          4.368, 1189, 4.368, 1190, 4.368, 1191, 4.368, 1192, 4.368, 1193,
          4.368, 1194, 4.368, 1195, 3.817,
        ],
      ],
      ['title/injectables/MailService.html', [106, 0.819, 287, 2.485]],
      [
        'body/injectables/MailService.html',
        [
          3, 0.147, 4, 0.147, 5, 0.099, 7, 0.252, 8, 0.012, 12, 0.802, 28,
          0.147, 29, 0.245, 30, 2.004, 32, 1.935, 33, 0.009, 34, 0.009, 96,
          2.614, 106, 1.287, 107, 1.868, 109, 0.507, 110, 1.769, 112, 0.821,
          114, 1.39, 115, 1.003, 135, 5.196, 136, 2.533, 138, 1.885, 139, 0.701,
          140, 0.731, 141, 1.769, 142, 1.51, 219, 2.157, 242, 2.648, 244, 4.031,
          245, 3.714, 287, 3.907, 313, 3.714, 402, 4.454, 409, 3.462, 410,
          4.454, 411, 3.714, 461, 2.241, 1050, 3.462, 1125, 6.921, 1126, 3.462,
          1127, 3.714, 1158, 4.454, 1160, 4.031, 1161, 4.454, 1162, 4.454, 1167,
          4.031, 1196, 4.454, 1197, 6.484, 1198, 5.097, 1199, 5.097, 1200,
          6.484, 1201, 5.097, 1202, 5.639, 1203, 5.097, 1204, 5.097, 1205,
          5.097, 1206, 4.454, 1207, 4.031, 1208, 4.454,
        ],
      ],
      ['title/injectables/MulterConfigService.html', [106, 0.819, 910, 3.006]],
      [
        'body/injectables/MulterConfigService.html',
        [
          3, 0.078, 4, 0.078, 5, 0.153, 7, 0.25, 8, 0.013, 12, 0.426, 28, 0.078,
          29, 0.13, 31, 3.289, 32, 1.917, 33, 0.006, 34, 0.006, 101, 1.545, 105,
          1.422, 106, 0.824, 107, 0.992, 109, 0.269, 110, 1.133, 112, 0.774,
          114, 1.831, 115, 0.947, 138, 1.208, 139, 0.449, 140, 0.638, 141,
          1.133, 157, 3.681, 184, 1.146, 188, 1.473, 203, 2.82, 204, 2.141, 217,
          1.816, 238, 1.238, 240, 1.028, 241, 1.631, 242, 2.624, 245, 1.973,
          277, 1.063, 303, 1.727, 334, 2.82, 338, 3.681, 339, 2.82, 340, 2.639,
          387, 3.026, 388, 3.026, 389, 3.629, 393, 2.82, 396, 3.629, 397, 2.366,
          408, 4.128, 409, 4.149, 411, 3.026, 413, 2.141, 414, 3.222, 415,
          1.727, 420, 3.629, 452, 2.157, 546, 1.576, 615, 3.685, 616, 2.374,
          691, 2.141, 746, 1.839, 785, 2.366, 804, 5.098, 806, 3.629, 809,
          3.629, 815, 3.026, 841, 1.973, 842, 1.973, 843, 2.366, 856, 3.284,
          857, 2.366, 861, 2.141, 866, 3.629, 870, 2.366, 871, 4.415, 874,
          2.366, 876, 2.366, 910, 3.026, 1025, 5.281, 1026, 3.026, 1073, 2.366,
          1175, 2.82, 1202, 3.284, 1207, 2.141, 1208, 2.366, 1209, 2.366, 1210,
          5.052, 1211, 5.665, 1212, 4.153, 1213, 5.665, 1214, 4.153, 1215,
          2.708, 1216, 5.665, 1217, 5.665, 1218, 4.415, 1219, 3.629, 1220,
          4.153, 1221, 6.11, 1222, 4.153, 1223, 2.708, 1224, 3.629, 1225, 6.926,
          1226, 3.629, 1227, 5.052, 1228, 6.447, 1229, 4.153, 1230, 3.629, 1231,
          2.708, 1232, 3.629, 1233, 4.48, 1234, 6.11, 1235, 4.153, 1236, 2.708,
          1237, 3.995, 1238, 4.153, 1239, 4.153, 1240, 5.308, 1241, 4.153, 1242,
          4.415, 1243, 3.629, 1244, 4.153, 1245, 2.708, 1246, 4.153, 1247,
          4.153, 1248, 2.708, 1249, 2.708, 1250, 2.708, 1251, 2.708, 1252,
          2.708, 1253, 2.708, 1254, 2.708, 1255, 2.708, 1256, 2.708, 1257,
          2.708, 1258, 2.708, 1259, 2.708, 1260, 2.708, 1261, 2.708, 1262,
          2.708, 1263, 2.708, 1264, 2.708, 1265, 2.708, 1266, 2.708, 1267,
          4.153, 1268, 2.708, 1269, 2.708, 1270, 2.708, 1271, 2.708, 1272,
          2.708, 1273, 2.708, 1274, 5.052, 1275, 4.153, 1276, 2.708, 1277,
          4.153, 1278, 4.153, 1279, 2.708, 1280, 2.708, 1281, 2.708, 1282,
          5.665, 1283, 2.141, 1284, 4.153, 1285, 2.708, 1286, 4.153, 1287,
          2.708, 1288, 2.708, 1289, 4.153, 1290, 2.708, 1291, 2.708, 1292,
          2.708, 1293, 2.366, 1294, 2.708, 1295, 2.708, 1296, 2.708, 1297,
          2.708, 1298, 2.141, 1299, 2.82, 1300, 2.708,
        ],
      ],
      ['title/classes/MulterExceptionFilter.html', [29, 0.198, 844, 3.006]],
      [
        'body/classes/MulterExceptionFilter.html',
        [
          3, 0.121, 4, 0.121, 5, 0.125, 7, 0.22, 8, 0.012, 11, 3.248, 12, 0.656,
          28, 0.121, 29, 0.2, 33, 0.008, 34, 0.008, 109, 0.415, 110, 1.55, 112,
          0.528, 114, 1.138, 138, 1.213, 139, 0.451, 140, 0.47, 141, 1.138, 151,
          4.7, 188, 2.27, 217, 1.6, 241, 3.424, 242, 3.604, 247, 1.337, 335,
          4.709, 336, 4.141, 340, 2.235, 378, 5.11, 379, 5.923, 408, 4.141, 452,
          2.952, 506, 3.248, 541, 0.972, 546, 2.157, 666, 3.516, 746, 3.859,
          804, 4.494, 811, 3.646, 815, 4.141, 844, 4.141, 1068, 4.966, 1183,
          6.063, 1206, 4.966, 1207, 4.494, 1218, 4.966, 1219, 4.966, 1230,
          3.646, 1237, 5.487, 1242, 6.912, 1243, 4.966, 1283, 4.494, 1298,
          5.487, 1299, 5.087, 1301, 3.646, 1302, 6.939, 1303, 5.683, 1304,
          4.966, 1305, 4.966, 1306, 6.939, 1307, 6.939, 1308, 6.463, 1309,
          6.463, 1310, 6.463, 1311, 6.463, 1312, 6.463, 1313, 6.463, 1314,
          7.491, 1315, 4.172, 1316, 5.683, 1317, 5.683, 1318, 5.683, 1319,
          4.172, 1320, 3.646, 1321, 4.172, 1322, 4.172, 1323, 4.172, 1324,
          3.299, 1325, 4.172, 1326, 4.172, 1327, 4.172, 1328, 4.172,
        ],
      ],
      ['title/classes/Permission.html', [29, 0.198, 722, 1.965]],
      [
        'body/classes/Permission.html',
        [
          3, 0.116, 4, 0.116, 5, 0.078, 7, 0.265, 8, 0.012, 28, 0.183, 29,
          0.193, 33, 0.008, 34, 0.008, 35, 1.622, 65, 1.13, 73, 1.249, 105,
          1.375, 109, 0.399, 112, 1.016, 115, 1.016, 132, 1.867, 139, 0.685,
          140, 0.94, 142, 1.475, 174, 3.29, 217, 1.13, 277, 1.417, 326, 1.784,
          337, 1.205, 363, 3.446, 416, 3.255, 483, 2.257, 504, 2.785, 538,
          2.321, 539, 2.785, 541, 0.935, 545, 3.816, 547, 3.816, 552, 5.059,
          554, 3.816, 555, 4.461, 560, 2.875, 566, 2.419, 567, 3.164, 568,
          2.419, 570, 2.583, 655, 4.301, 656, 4.615, 722, 2.636, 723, 2.726,
          739, 2.726, 929, 3.62, 943, 1.995, 1131, 2.726, 1329, 2.925, 1330,
          4.014, 1331, 4.014, 1332, 4.014, 1333, 4.014, 1334, 4.014, 1335,
          4.014, 1336, 4.014, 1337, 4.014, 1338, 4.014, 1339, 4.014, 1340,
          4.014, 1341, 3.174, 1342, 3.508,
        ],
      ],
      ['title/controllers/PermissionsController.html', [0, 1.238, 1343, 3.006]],
      [
        'body/controllers/PermissionsController.html',
        [
          0, 1.113, 2, 1.113, 3, 0.107, 4, 0.107, 5, 0.072, 7, 0.288, 8, 0.012,
          9, 2.719, 12, 0.583, 28, 0.107, 29, 0.178, 32, 1.407, 33, 0.008, 34,
          0.008, 71, 1.407, 92, 2.593, 101, 1.897, 109, 0.369, 110, 1.428, 112,
          0.881, 114, 1.897, 115, 1.047, 122, 1.842, 132, 1.62, 138, 2.022, 139,
          0.752, 140, 0.784, 141, 1.897, 145, 2.767, 147, 2.306, 170, 1.624,
          178, 2.993, 183, 1.766, 184, 1.569, 189, 1.569, 195, 1.926, 196,
          1.569, 330, 3.303, 426, 1.474, 427, 2.569, 428, 2.216, 429, 2.216,
          433, 1.63, 434, 2.9, 437, 3.155, 439, 2.302, 440, 1.569, 443, 2.587,
          444, 1.569, 445, 2.234, 449, 2.234, 451, 2.234, 452, 1.926, 453,
          2.216, 456, 1.569, 458, 1.63, 461, 1.63, 462, 2.365, 468, 2.234, 469,
          2.234, 473, 2.234, 652, 4.605, 722, 3.61, 971, 2.365, 980, 2.365, 983,
          2.701, 1343, 3.815, 1344, 3.24, 1345, 4.14, 1346, 3.24, 1347, 3.707,
          1348, 2.518, 1349, 3.707, 1350, 2.701, 1351, 3.707, 1352, 3.707, 1353,
          2.932, 1354, 5.147, 1355, 3.707, 1356, 3.872, 1357, 3.24, 1358, 4.14,
          1359, 3.707, 1360, 3.707, 1361, 3.707, 1362, 3.707, 1363, 5.236, 1364,
          3.707, 1365, 3.707, 1366, 3.707, 1367, 3.707, 1368, 3.707, 1369,
          3.707, 1370, 3.707, 1371, 3.707, 1372, 3.707,
        ],
      ],
      ['title/modules/PermissionsModule.html', [35, 1.056, 53, 2.801]],
      [
        'body/modules/PermissionsModule.html',
        [
          2, 2.039, 3, 0.159, 4, 0.159, 5, 0.106, 7, 0.307, 8, 0.012, 12, 0.863,
          28, 0.159, 29, 0.263, 33, 0.01, 34, 0.01, 35, 1.888, 37, 2.322, 38,
          2.237, 39, 2.509, 40, 2.509, 41, 2.322, 42, 3.373, 43, 2.509, 53,
          5.48, 58, 3.105, 59, 2.412, 60, 2.509, 62, 2.613, 64, 2.85, 65, 1.545,
          139, 0.593, 481, 2.985, 483, 2.237, 722, 2.613, 723, 4.611, 728,
          4.338, 1343, 5.374, 1356, 5.147, 1357, 4.794, 1373, 4.794, 1374,
          4.794, 1375, 5.486, 1376, 5.486, 1377, 4.794,
        ],
      ],
      ['title/injectables/PermissionsService.html', [106, 0.819, 1356, 2.631]],
      [
        'body/injectables/PermissionsService.html',
        [
          3, 0.085, 4, 0.085, 5, 0.057, 7, 0.287, 8, 0.013, 12, 0.46, 28, 0.085,
          29, 0.14, 30, 1.732, 31, 1.286, 33, 0.006, 34, 0.006, 35, 1.509, 65,
          0.824, 70, 1.453, 71, 2.01, 72, 1.453, 73, 1.195, 92, 2.711, 96,
          2.873, 101, 1.724, 106, 0.874, 107, 1.072, 109, 0.291, 110, 1.201,
          112, 0.841, 114, 1.724, 115, 0.964, 138, 1.931, 139, 0.8, 140, 0.748,
          141, 1.812, 142, 1.233, 143, 2.891, 145, 2.619, 147, 2.044, 170,
          1.642, 180, 1.519, 189, 1.238, 217, 2.044, 219, 2.917, 238, 2.422,
          317, 1.865, 326, 1.998, 348, 2.014, 381, 2.882, 422, 1.672, 426, 1.24,
          427, 1.864, 428, 1.864, 429, 1.864, 433, 1.936, 434, 2.329, 439,
          2.329, 440, 1.864, 443, 1.952, 444, 1.864, 453, 1.238, 456, 1.238,
          458, 1.286, 486, 3.207, 490, 2.435, 496, 1.591, 497, 1.762, 498,
          1.591, 499, 1.672, 504, 1.286, 505, 3.191, 506, 1.672, 507, 1.762,
          508, 1.762, 509, 1.762, 510, 1.762, 511, 1.762, 512, 1.762, 513,
          1.591, 514, 2.653, 515, 2.653, 517, 2.653, 518, 1.762, 519, 2.653,
          522, 1.762, 523, 1.762, 524, 1.762, 525, 1.762, 526, 1.762, 527,
          1.762, 528, 1.762, 529, 1.762, 530, 1.762, 531, 1.762, 532, 1.762,
          533, 2.131, 534, 2.131, 538, 1.072, 539, 1.286, 544, 2.313, 652,
          4.237, 655, 4.293, 656, 4.606, 722, 2.523, 733, 3.848, 739, 1.986,
          748, 2.556, 1016, 3.209, 1023, 1.986, 1033, 1.986, 1034, 1.865, 1036,
          2.809, 1080, 2.99, 1346, 3.848, 1354, 4.817, 1356, 2.809, 1358, 3.482,
          1377, 2.556, 1378, 2.556, 1379, 2.925, 1380, 2.925, 1381, 2.925, 1382,
          2.925, 1383, 2.925, 1384, 2.925, 1385, 2.925, 1386, 2.925, 1387,
          2.925, 1388, 2.925, 1389, 2.556, 1390, 2.925, 1391, 2.925, 1392,
          2.313, 1393, 2.313, 1394, 2.313, 1395, 2.925, 1396, 2.925, 1397,
          2.925, 1398, 2.925, 1399, 2.925, 1400, 2.925, 1401, 2.925, 1402,
          2.313, 1403, 2.925, 1404, 4.403, 1405, 2.925,
        ],
      ],
      ['title/classes/RegisterUserDto.html', [29, 0.198, 168, 2.244]],
      [
        'body/classes/RegisterUserDto.html',
        [
          3, 0.094, 4, 0.094, 5, 0.063, 7, 0.241, 8, 0.013, 28, 0.163, 29,
          0.332, 32, 1.814, 33, 0.007, 34, 0.007, 73, 1.079, 109, 0.325, 112,
          0.876, 115, 1.029, 132, 1.611, 136, 3.437, 139, 0.793, 140, 0.825,
          142, 1.769, 168, 2.601, 185, 1.969, 186, 4.084, 196, 1.383, 240,
          3.135, 247, 2.591, 277, 1.224, 296, 3.606, 298, 2.881, 312, 1.556,
          326, 0.92, 333, 2.146, 337, 1.868, 340, 3.211, 443, 1.082, 490, 2.072,
          501, 1.198, 541, 0.761, 543, 3.711, 546, 1.814, 570, 1.95, 574, 3.44,
          579, 1.697, 583, 3.05, 584, 3.05, 585, 3.407, 586, 2.601, 588, 3.89,
          590, 1.556, 591, 1.624, 592, 1.624, 608, 2.084, 611, 4.12, 612, 3.557,
          613, 2.601, 614, 1.697, 615, 3.232, 616, 3.232, 617, 2.881, 618,
          4.084, 619, 4.084, 620, 1.868, 621, 3.484, 622, 2.219, 623, 2.381,
          626, 3.439, 703, 2.855, 1406, 3.267, 1407, 3.267, 1408, 3.267, 1409,
          3.267, 1410, 3.267, 1411, 3.267,
        ],
      ],
      ['title/interfaces/Response.html', [151, 2.485, 940, 2.631]],
      [
        'body/interfaces/Response.html',
        [
          3, 0.148, 4, 0.148, 5, 0.1, 7, 0.301, 8, 0.013, 12, 0.807, 28, 0.188,
          29, 0.246, 33, 0.009, 34, 0.009, 101, 1.4, 106, 1.293, 109, 0.51, 115,
          0.906, 140, 0.806, 151, 3.924, 184, 2.172, 247, 2.488, 277, 1.667,
          461, 2.257, 490, 2.622, 746, 3.486, 788, 5.782, 940, 3.274, 941,
          4.059, 1045, 5.657, 1048, 4.746, 1050, 3.486, 1056, 3.74, 1062, 4.059,
          1124, 3.092, 1324, 6.14, 1412, 4.059, 1413, 5.691, 1414, 5.691, 1415,
          5.691, 1416, 4.059, 1417, 4.485, 1418, 3.74, 1419, 3.74, 1420, 4.485,
          1421, 4.485, 1422, 4.485, 1423, 4.485, 1424, 4.485, 1425, 4.485,
        ],
      ],
      ['title/classes/Resume.html', [29, 0.198, 1027, 2.485]],
      [
        'body/classes/Resume.html',
        [
          3, 0.091, 4, 0.091, 5, 0.061, 7, 0.237, 8, 0.013, 28, 0.16, 29, 0.152,
          33, 0.007, 34, 0.007, 65, 0.889, 73, 1.051, 105, 2.58, 109, 0.314,
          112, 0.998, 115, 1.013, 132, 1.835, 140, 0.952, 142, 1.779, 174,
          3.179, 217, 0.889, 277, 1.193, 326, 2.043, 337, 0.948, 363, 3.015,
          413, 2.496, 416, 3.19, 482, 2.758, 483, 1.901, 504, 2.437, 538, 2.393,
          539, 2.437, 541, 0.735, 545, 3.339, 547, 3.339, 552, 4.973, 554,
          4.117, 560, 2.421, 566, 1.902, 567, 2.664, 568, 1.902, 569, 5.398,
          570, 3.261, 664, 4.038, 665, 4.038, 666, 3.552, 667, 4.038, 668,
          3.535, 808, 2.496, 927, 3.339, 929, 3.732, 943, 1.568, 1006, 2.496,
          1027, 2.808, 1131, 2.143, 1240, 2.496, 1341, 2.496, 1426, 2.3, 1427,
          5.737, 1428, 4.839, 1429, 3.156, 1430, 3.156, 1431, 3.156, 1432,
          3.156, 1433, 3.156, 1434, 3.156, 1435, 3.156, 1436, 3.156, 1437,
          3.156, 1438, 3.156, 1439, 3.156, 1440, 3.156, 1441, 3.156, 1442,
          3.156, 1443, 2.3, 1444, 3.156, 1445, 2.3, 1446, 2.758,
        ],
      ],
      ['title/controllers/ResumesController.html', [0, 1.238, 1447, 3.006]],
      [
        'body/controllers/ResumesController.html',
        [
          0, 1.049, 2, 1.049, 3, 0.101, 4, 0.101, 5, 0.068, 7, 0.275, 8, 0.012,
          9, 2.606, 11, 2.868, 12, 0.549, 28, 0.101, 29, 0.168, 32, 1.325, 33,
          0.007, 34, 0.007, 71, 1.325, 92, 2.524, 101, 1.931, 109, 0.347, 110,
          1.369, 112, 0.896, 114, 1.931, 115, 1.051, 122, 1.736, 132, 1.648,
          138, 2.058, 139, 0.766, 140, 0.797, 141, 1.931, 145, 2.818, 146,
          3.052, 147, 2.336, 157, 4.279, 170, 1.556, 178, 1.996, 183, 1.664,
          184, 1.478, 189, 1.478, 195, 1.814, 196, 1.478, 426, 1.413, 427,
          2.485, 428, 2.124, 429, 2.124, 433, 1.536, 434, 2.822, 437, 3.023,
          439, 2.206, 440, 1.478, 443, 2.554, 444, 1.478, 445, 2.104, 449,
          2.104, 451, 2.104, 452, 1.814, 453, 2.124, 456, 1.478, 461, 1.536,
          462, 2.228, 464, 3.201, 465, 2.228, 466, 2.228, 468, 2.104, 469,
          2.104, 471, 2.372, 473, 2.104, 661, 3.195, 666, 3.851, 675, 4.095,
          935, 2.372, 971, 2.228, 980, 2.228, 983, 2.545, 990, 2.372, 995,
          2.545, 997, 2.372, 999, 2.372, 1027, 4.646, 1345, 4.644, 1348, 2.372,
          1350, 2.545, 1353, 2.762, 1447, 3.656, 1448, 3.052, 1449, 5.873, 1450,
          5.018, 1451, 3.493, 1452, 3.493, 1453, 3.493, 1454, 3.493, 1455,
          3.493, 1456, 5.018, 1457, 3.493, 1458, 3.493, 1459, 3.493, 1460,
          3.493, 1461, 3.746, 1462, 3.052, 1463, 3.493, 1464, 3.493, 1465,
          3.493, 1466, 3.493, 1467, 3.493, 1468, 3.493, 1469, 3.493, 1470,
          3.493, 1471, 3.493, 1472, 3.493,
        ],
      ],
      ['title/modules/ResumesModule.html', [35, 1.056, 54, 2.801]],
      [
        'body/modules/ResumesModule.html',
        [
          2, 2.036, 3, 0.158, 4, 0.158, 5, 0.106, 7, 0.307, 8, 0.012, 12, 0.861,
          28, 0.158, 29, 0.263, 33, 0.01, 34, 0.01, 35, 1.886, 37, 2.316, 38,
          2.232, 39, 2.503, 40, 2.503, 41, 2.316, 42, 3.369, 43, 2.503, 54,
          5.476, 58, 3.101, 59, 2.406, 60, 2.503, 62, 2.607, 64, 2.843, 65,
          1.541, 139, 0.592, 481, 2.978, 483, 2.232, 1027, 3.297, 1445, 4.94,
          1447, 5.368, 1461, 5.144, 1462, 4.782, 1473, 4.782, 1474, 4.782, 1475,
          5.473, 1476, 5.473, 1477, 4.782, 1478, 5.473,
        ],
      ],
      ['title/injectables/ResumesService.html', [106, 0.819, 1461, 2.631]],
      [
        'body/injectables/ResumesService.html',
        [
          3, 0.075, 4, 0.075, 5, 0.051, 7, 0.278, 8, 0.013, 12, 0.409, 28,
          0.075, 29, 0.193, 30, 1.584, 31, 1.145, 33, 0.006, 34, 0.006, 65,
          0.733, 70, 1.294, 71, 1.871, 72, 1.294, 73, 1.112, 92, 2.603, 96,
          2.878, 101, 1.731, 106, 0.8, 107, 0.954, 109, 0.259, 110, 1.099, 112,
          0.838, 114, 1.731, 115, 0.971, 138, 1.924, 139, 0.759, 140, 0.746,
          141, 1.805, 142, 1.541, 143, 2.902, 145, 2.659, 147, 2.16, 170, 1.861,
          180, 1.352, 189, 1.102, 217, 1.926, 219, 2.801, 238, 1.843, 242,
          1.352, 251, 1.768, 326, 2.087, 334, 1.768, 339, 1.768, 341, 2.059,
          348, 1.843, 363, 2.192, 381, 3.265, 409, 2.736, 414, 1.661, 415,
          1.661, 416, 1.772, 422, 1.488, 426, 1.135, 427, 1.705, 428, 1.705,
          429, 1.705, 433, 1.772, 434, 2.167, 439, 2.167, 440, 1.705, 443,
          1.838, 444, 1.705, 453, 1.102, 456, 1.102, 458, 1.145, 486, 3.019,
          490, 2.326, 496, 1.417, 497, 1.569, 498, 1.417, 499, 1.488, 500,
          2.275, 501, 0.954, 504, 1.145, 505, 3.343, 506, 1.488, 507, 2.428,
          508, 1.569, 509, 1.569, 510, 1.569, 511, 1.569, 512, 1.569, 513,
          2.682, 514, 2.428, 515, 2.428, 517, 2.428, 518, 1.569, 519, 2.428,
          521, 1.661, 522, 1.569, 523, 1.569, 524, 1.569, 525, 1.569, 526,
          1.569, 527, 1.569, 528, 1.569, 529, 1.569, 530, 1.569, 531, 1.569,
          532, 1.569, 533, 1.897, 534, 1.897, 538, 1.807, 539, 1.145, 661,
          1.417, 664, 3.592, 665, 3.592, 666, 3.721, 667, 2.936, 668, 2.57, 675,
          4.048, 854, 2.936, 927, 2.428, 929, 2.303, 935, 2.736, 937, 1.661,
          1016, 2.936, 1023, 1.768, 1024, 3.521, 1025, 1.897, 1026, 1.897, 1027,
          3.343, 1028, 2.275, 1029, 2.059, 1030, 2.275, 1031, 2.275, 1032,
          2.275, 1033, 1.768, 1034, 1.661, 1036, 2.57, 1175, 2.736, 1402, 2.059,
          1443, 1.897, 1461, 2.57, 1477, 2.275, 1479, 2.275, 1480, 4.029, 1481,
          2.604, 1482, 2.604, 1483, 4.029, 1484, 4.029, 1485, 2.604, 1486,
          2.604, 1487, 4.029, 1488, 2.604, 1489, 2.604, 1490, 2.604, 1491,
          2.604, 1492, 2.604, 1493, 2.604, 1494, 2.604, 1495, 4.029, 1496,
          2.604, 1497, 2.604, 1498, 2.604, 1499, 4.029, 1500, 2.604, 1501,
          2.604, 1502, 2.275, 1503, 2.275, 1504, 4.029, 1505, 2.604, 1506,
          2.604,
        ],
      ],
      ['title/classes/Role.html', [29, 0.198, 333, 1.565]],
      [
        'body/classes/Role.html',
        [
          3, 0.113, 4, 0.113, 5, 0.076, 7, 0.276, 8, 0.013, 28, 0.181, 29,
          0.188, 33, 0.008, 34, 0.008, 65, 1.105, 73, 1.229, 105, 1.343, 109,
          0.39, 112, 1.011, 115, 0.955, 132, 1.859, 139, 0.677, 140, 0.941, 142,
          1.457, 174, 3.25, 217, 1.105, 277, 1.395, 326, 1.762, 330, 3.405, 333,
          2.067, 337, 1.178, 363, 3.405, 416, 3.232, 483, 2.221, 504, 2.751,
          538, 2.293, 539, 2.751, 541, 0.913, 545, 3.77, 546, 2.375, 547, 3.77,
          552, 5.03, 554, 4.073, 555, 4.429, 560, 3.511, 566, 2.363, 567, 3.113,
          568, 2.363, 570, 2.756, 607, 3.576, 722, 2.98, 724, 3.102, 725, 2.502,
          728, 3.102, 740, 2.502, 929, 3.576, 943, 1.949, 1131, 2.664, 1341,
          3.102, 1427, 4.307, 1428, 4.307, 1507, 2.858, 1508, 3.923, 1509,
          3.923, 1510, 3.923, 1511, 3.923, 1512, 3.923, 1513, 3.923, 1514,
          3.923, 1515, 3.923, 1516, 3.923, 1517, 3.923, 1518, 3.923, 1519,
          3.428,
        ],
      ],
      ['title/controllers/RolesController.html', [0, 1.238, 1520, 3.006]],
      [
        'body/controllers/RolesController.html',
        [
          0, 1.115, 2, 1.115, 3, 0.107, 4, 0.107, 5, 0.072, 7, 0.288, 8, 0.012,
          9, 2.723, 12, 0.584, 28, 0.107, 29, 0.178, 32, 1.409, 33, 0.008, 34,
          0.008, 71, 1.409, 92, 2.595, 101, 1.899, 109, 0.369, 110, 1.43, 112,
          0.882, 114, 1.899, 115, 1.047, 122, 1.845, 132, 1.621, 138, 2.024,
          139, 0.753, 140, 0.784, 141, 1.899, 145, 2.768, 147, 2.307, 170,
          1.626, 178, 2.996, 183, 1.769, 184, 1.572, 189, 1.572, 190, 3.306,
          195, 1.929, 196, 1.572, 333, 2.741, 426, 1.476, 427, 2.571, 428,
          2.218, 429, 2.218, 433, 1.633, 434, 2.902, 437, 3.158, 439, 2.305,
          440, 1.572, 443, 2.511, 444, 1.572, 445, 2.237, 449, 2.237, 451,
          2.237, 452, 1.929, 453, 2.218, 456, 1.572, 458, 1.633, 461, 1.633,
          462, 2.369, 464, 3.343, 465, 2.369, 466, 2.369, 468, 2.237, 469,
          2.237, 471, 2.522, 473, 2.237, 676, 4.608, 722, 2.497, 971, 2.369,
          980, 2.369, 983, 2.706, 990, 2.522, 997, 2.522, 999, 2.522, 1345,
          4.804, 1348, 2.522, 1350, 2.706, 1353, 2.936, 1520, 3.82, 1521, 3.245,
          1522, 5.309, 1523, 3.245, 1524, 3.714, 1525, 3.714, 1526, 3.714, 1527,
          3.714, 1528, 5.149, 1529, 3.714, 1530, 3.245, 1531, 4.145, 1532,
          3.714, 1533, 3.714, 1534, 3.714, 1535, 3.714, 1536, 3.714, 1537,
          3.714, 1538, 3.714,
        ],
      ],
      ['title/modules/RolesModule.html', [35, 1.056, 55, 2.631]],
      [
        'body/modules/RolesModule.html',
        [
          2, 2.005, 3, 0.154, 4, 0.154, 5, 0.104, 7, 0.305, 8, 0.012, 12, 0.84,
          28, 0.154, 29, 0.257, 33, 0.01, 34, 0.01, 35, 1.865, 37, 2.261, 38,
          2.178, 39, 2.443, 40, 2.443, 41, 2.261, 42, 3.332, 43, 3.332, 55,
          5.187, 58, 3.054, 59, 2.349, 60, 2.443, 62, 2.544, 64, 2.774, 65,
          1.504, 139, 0.578, 190, 4.591, 333, 2.027, 481, 2.907, 483, 2.178,
          725, 4.26, 729, 3.892, 1520, 5.309, 1530, 4.668, 1539, 4.668, 1540,
          4.668, 1541, 4.668, 1542, 5.342, 1543, 5.342, 1544, 4.668,
        ],
      ],
      ['title/injectables/RolesService.html', [106, 0.819, 190, 2.244]],
      [
        'body/injectables/RolesService.html',
        [
          3, 0.079, 4, 0.079, 5, 0.053, 7, 0.282, 8, 0.013, 12, 0.43, 28, 0.079,
          29, 0.131, 30, 1.645, 31, 1.202, 33, 0.006, 34, 0.006, 35, 0.7, 65,
          0.77, 70, 1.359, 71, 1.929, 72, 1.359, 73, 1.147, 92, 2.649, 96,
          2.838, 101, 1.674, 106, 0.831, 107, 1.002, 109, 0.272, 110, 1.141,
          112, 0.82, 114, 1.674, 115, 0.949, 138, 1.882, 139, 0.821, 140, 0.729,
          141, 1.765, 142, 1.184, 143, 2.806, 145, 2.574, 147, 2.005, 170,
          1.903, 180, 2.173, 189, 1.157, 190, 2.277, 217, 2.081, 219, 3.014,
          238, 2.806, 326, 2.005, 330, 3.339, 333, 2.161, 348, 1.914, 381,
          2.766, 422, 1.563, 426, 1.178, 427, 1.771, 428, 1.771, 429, 1.771,
          433, 1.84, 434, 2.235, 439, 2.235, 440, 1.771, 443, 1.886, 444, 1.771,
          453, 1.157, 456, 1.157, 458, 1.202, 486, 3.098, 490, 2.372, 496,
          1.488, 497, 1.647, 498, 1.488, 499, 1.563, 504, 1.202, 505, 3.062,
          506, 1.563, 507, 1.647, 508, 1.647, 509, 1.647, 510, 1.647, 511,
          1.647, 512, 1.647, 513, 3.522, 514, 2.521, 515, 2.521, 517, 2.521,
          518, 1.647, 519, 2.521, 521, 1.744, 522, 1.647, 523, 1.647, 524,
          1.647, 525, 1.647, 526, 1.647, 527, 1.647, 528, 1.647, 529, 1.647,
          530, 1.647, 531, 1.647, 532, 1.647, 533, 1.992, 534, 1.992, 538,
          1.002, 539, 1.202, 544, 2.162, 546, 2.161, 607, 3.255, 655, 1.857,
          656, 1.992, 676, 4.128, 722, 1.303, 734, 3.309, 740, 1.744, 742,
          3.049, 749, 2.162, 763, 1.992, 770, 3.309, 854, 1.992, 1016, 3.049,
          1023, 1.857, 1033, 1.857, 1034, 1.744, 1036, 2.669, 1080, 3.867, 1175,
          1.857, 1389, 3.656, 1392, 3.309, 1393, 3.309, 1394, 3.309, 1402,
          2.162, 1503, 2.389, 1523, 3.656, 1528, 4.718, 1531, 3.309, 1544,
          2.389, 1545, 2.389, 1546, 2.734, 1547, 2.734, 1548, 2.734, 1549,
          2.734, 1550, 2.734, 1551, 2.734, 1552, 2.734, 1553, 2.389, 1554,
          2.734, 1555, 2.734, 1556, 2.734, 1557, 2.734, 1558, 2.734, 1559,
          2.734, 1560, 2.734, 1561, 2.734, 1562, 2.734, 1563, 2.734, 1564,
          4.184, 1565, 2.734, 1566, 2.734, 1567, 2.734, 1568, 2.734, 1569,
          2.734, 1570, 2.734,
        ],
      ],
      ['title/classes/Subscriber.html', [29, 0.198, 1128, 2.358]],
      [
        'body/classes/Subscriber.html',
        [
          3, 0.12, 4, 0.12, 5, 0.081, 7, 0.22, 8, 0.012, 28, 0.186, 29, 0.2, 33,
          0.008, 34, 0.008, 65, 1.171, 73, 1.279, 105, 2.208, 109, 0.413, 112,
          1.012, 115, 1.001, 132, 1.861, 139, 0.698, 140, 0.94, 142, 1.742, 174,
          3.35, 217, 1.171, 277, 1.451, 326, 1.816, 363, 3.51, 416, 3.29, 483,
          2.311, 504, 2.836, 538, 2.364, 539, 2.836, 541, 0.968, 545, 3.886,
          547, 3.886, 550, 3.287, 552, 5.029, 554, 3.886, 555, 4.508, 560,
          2.944, 566, 2.504, 567, 3.24, 568, 2.504, 569, 3.029, 570, 2.63, 589,
          3.51, 929, 3.687, 1128, 3.24, 1129, 2.823, 1180, 2.823, 1571, 3.029,
          1572, 4.157, 1573, 4.157, 1574, 4.157, 1575, 4.157, 1576, 4.157, 1577,
          4.157, 1578, 4.157, 1579, 4.157, 1580, 4.157, 1581, 4.157, 1582,
          3.632,
        ],
      ],
      ['title/controllers/SubscribersController.html', [0, 1.238, 1583, 3.006]],
      [
        'body/controllers/SubscribersController.html',
        [
          0, 1.065, 2, 1.065, 3, 0.103, 4, 0.103, 5, 0.069, 7, 0.284, 8, 0.012,
          9, 2.636, 12, 0.558, 28, 0.103, 29, 0.17, 32, 1.347, 33, 0.007, 34,
          0.007, 71, 1.347, 92, 2.543, 101, 1.941, 109, 0.353, 110, 1.384, 112,
          0.901, 114, 1.941, 115, 1.025, 122, 1.763, 132, 1.657, 138, 2.069,
          139, 0.77, 140, 0.802, 141, 1.941, 145, 2.826, 147, 2.314, 170, 1.574,
          178, 3.386, 183, 1.69, 184, 1.502, 189, 1.502, 195, 1.843, 196, 1.502,
          348, 2.709, 426, 1.668, 427, 2.507, 428, 2.148, 429, 2.148, 433, 1.56,
          434, 2.843, 437, 3.058, 439, 2.231, 440, 1.502, 443, 2.357, 444,
          1.502, 445, 2.138, 449, 2.138, 451, 2.138, 452, 1.843, 453, 2.148,
          456, 1.502, 458, 1.56, 461, 1.56, 464, 3.237, 465, 2.263, 466, 2.263,
          468, 2.138, 469, 2.138, 473, 2.138, 589, 1.931, 688, 4.539, 971,
          2.263, 980, 2.263, 990, 2.41, 997, 2.41, 999, 2.41, 1128, 4.283, 1145,
          5.177, 1348, 2.41, 1350, 2.585, 1583, 3.698, 1584, 3.1, 1585, 5.075,
          1586, 3.1, 1587, 3.548, 1588, 3.548, 1589, 3.548, 1590, 3.548, 1591,
          3.548, 1592, 5.075, 1593, 3.548, 1594, 3.548, 1595, 3.548, 1596, 3.1,
          1597, 4.833, 1598, 3.548, 1599, 3.548, 1600, 3.779, 1601, 3.1, 1602,
          4.013, 1603, 4.685, 1604, 3.548, 1605, 3.548, 1606, 3.548, 1607,
          3.548, 1608, 3.548, 1609, 3.548, 1610, 3.548, 1611, 3.548, 1612,
          3.548, 1613, 3.548, 1614, 3.548,
        ],
      ],
      ['title/modules/SubscribersModule.html', [35, 1.056, 56, 2.801]],
      [
        'body/modules/SubscribersModule.html',
        [
          2, 2.02, 3, 0.156, 4, 0.156, 5, 0.105, 7, 0.312, 8, 0.012, 12, 0.85,
          28, 0.156, 29, 0.26, 33, 0.01, 34, 0.01, 35, 1.876, 37, 2.288, 38,
          2.205, 39, 2.473, 40, 2.473, 41, 2.288, 42, 3.35, 43, 2.473, 56, 5.46,
          58, 3.077, 59, 2.377, 60, 2.473, 62, 2.575, 64, 2.808, 65, 1.522, 139,
          0.585, 481, 2.942, 483, 2.205, 1124, 3.257, 1128, 3.09, 1180, 4.57,
          1195, 4.724, 1583, 5.338, 1600, 5.128, 1601, 4.724, 1615, 4.724, 1616,
          4.724, 1617, 5.406, 1618, 5.406, 1619, 4.724,
        ],
      ],
      ['title/injectables/SubscribersService.html', [106, 0.819, 1600, 2.631]],
      [
        'body/injectables/SubscribersService.html',
        [
          3, 0.082, 4, 0.082, 5, 0.055, 7, 0.285, 8, 0.013, 12, 0.446, 28,
          0.082, 29, 0.136, 30, 1.693, 31, 1.248, 33, 0.006, 34, 0.006, 65,
          0.799, 70, 1.411, 71, 1.974, 72, 1.411, 73, 1.173, 92, 2.583, 96,
          2.918, 101, 1.791, 105, 0.972, 106, 0.855, 107, 1.04, 109, 0.282, 110,
          1.174, 112, 0.864, 114, 1.791, 115, 0.912, 138, 1.984, 139, 0.779,
          140, 0.769, 141, 1.861, 142, 1.709, 143, 3.004, 145, 2.709, 147, 2.1,
          170, 1.613, 180, 1.475, 189, 1.201, 217, 2.1, 219, 2.975, 238, 2.379,
          326, 1.922, 348, 1.969, 381, 2.83, 387, 2.069, 388, 2.069, 422, 1.623,
          426, 1.212, 427, 1.822, 428, 1.822, 429, 1.822, 433, 1.893, 434,
          2.287, 439, 2.287, 440, 1.822, 443, 2.066, 444, 1.822, 453, 1.201,
          456, 1.201, 458, 1.248, 486, 3.159, 490, 2.407, 496, 1.545, 497, 1.71,
          498, 1.545, 499, 1.623, 504, 1.248, 505, 3.498, 506, 1.623, 507, 1.71,
          508, 1.71, 509, 1.71, 510, 1.71, 511, 1.71, 512, 1.71, 513, 2.343,
          514, 2.594, 515, 2.594, 517, 2.594, 518, 1.71, 519, 2.594, 521, 1.811,
          522, 1.71, 523, 1.71, 524, 1.71, 525, 1.71, 526, 1.71, 527, 1.71, 528,
          1.71, 529, 1.71, 530, 1.71, 531, 1.71, 532, 2.594, 538, 1.04, 539,
          1.248, 589, 2.83, 688, 4.189, 1023, 1.928, 1029, 2.245, 1033, 1.928,
          1034, 2.746, 1036, 2.746, 1080, 2.924, 1124, 1.71, 1128, 1.623, 1129,
          1.928, 1136, 2.481, 1137, 3.762, 1586, 3.762, 1596, 3.762, 1597, 4.46,
          1600, 2.746, 1602, 3.405, 1619, 2.481, 1620, 2.481, 1621, 4.306, 1622,
          2.839, 1623, 2.839, 1624, 2.839, 1625, 2.839, 1626, 2.839, 1627,
          4.306, 1628, 2.839, 1629, 2.839, 1630, 2.839, 1631, 5.201, 1632,
          2.839, 1633, 2.839, 1634, 2.839, 1635, 2.839, 1636, 2.839, 1637,
          2.839, 1638, 2.839, 1639, 2.839, 1640, 2.839, 1641, 2.839, 1642,
          4.306, 1643, 4.306, 1644, 2.839, 1645, 2.839,
        ],
      ],
      [
        'title/injectables/TransformInterceptor.html',
        [106, 0.819, 1419, 3.006],
      ],
      [
        'body/injectables/TransformInterceptor.html',
        [
          3, 0.144, 4, 0.144, 5, 0.097, 7, 0.299, 8, 0.012, 12, 0.784, 28,
          0.185, 29, 0.239, 30, 1.96, 33, 0.009, 34, 0.009, 101, 1.359, 106,
          1.269, 107, 1.826, 109, 0.495, 110, 1.743, 112, 0.809, 114, 1.359,
          115, 0.631, 138, 1.858, 139, 0.691, 140, 0.72, 141, 1.743, 151, 3.003,
          184, 2.109, 247, 2.048, 461, 2.191, 490, 1.826, 746, 3.384, 788,
          5.141, 940, 3.179, 1044, 4.355, 1045, 6.226, 1048, 5.423, 1050, 4.34,
          1056, 3.631, 1062, 3.941, 1124, 3.003, 1324, 5.054, 1412, 3.941, 1413,
          5.585, 1414, 6.504, 1415, 6.166, 1416, 3.941, 1417, 4.355, 1418,
          3.631, 1419, 4.657, 1420, 6.166, 1421, 6.166, 1422, 4.355, 1423,
          4.355, 1424, 4.355, 1425, 4.355, 1646, 4.984, 1647, 4.984, 1648,
          4.984,
        ],
      ],
      ['title/classes/UpdateCompanyDto.html', [29, 0.198, 448, 2.801]],
      [
        'body/classes/UpdateCompanyDto.html',
        [
          3, 0.18, 4, 0.18, 5, 0.121, 7, 0.284, 8, 0.012, 28, 0.18, 29, 0.299,
          33, 0.011, 34, 0.011, 426, 1.752, 431, 3.968, 448, 4.975, 457, 4.919,
          541, 1.449, 625, 4.919, 932, 3.231, 933, 3.231, 934, 3.091, 938,
          3.221, 1649, 5.436, 1650, 7.326,
        ],
      ],
      ['title/classes/UpdateFileDto.html', [29, 0.198, 920, 3.006]],
      [
        'body/classes/UpdateFileDto.html',
        [
          3, 0.18, 4, 0.18, 5, 0.121, 7, 0.284, 8, 0.012, 28, 0.18, 29, 0.299,
          33, 0.011, 34, 0.011, 426, 1.752, 541, 1.449, 632, 4.225, 634, 4.919,
          920, 5.338, 922, 5.436, 932, 3.231, 933, 3.231, 934, 3.091, 938,
          3.221, 1651, 5.436, 1652, 7.326,
        ],
      ],
      ['title/classes/UpdateJobDto.html', [29, 0.198, 982, 2.801]],
      [
        'body/classes/UpdateJobDto.html',
        [
          3, 0.18, 4, 0.18, 5, 0.121, 7, 0.284, 8, 0.012, 28, 0.18, 29, 0.299,
          33, 0.011, 34, 0.011, 426, 1.752, 541, 1.449, 573, 4.533, 587, 3.748,
          932, 3.231, 933, 3.231, 934, 3.091, 938, 3.221, 982, 4.975, 987,
          4.919, 1653, 5.436, 1654, 7.326,
        ],
      ],
      ['title/classes/UpdatePermissionDto.html', [29, 0.198, 1354, 2.801]],
      [
        'body/classes/UpdatePermissionDto.html',
        [
          3, 0.18, 4, 0.18, 5, 0.121, 7, 0.284, 8, 0.012, 28, 0.18, 29, 0.299,
          33, 0.011, 34, 0.011, 426, 1.752, 541, 1.449, 652, 3.968, 654, 4.919,
          932, 3.231, 933, 3.231, 934, 3.091, 938, 3.221, 1354, 4.975, 1358,
          4.919, 1655, 5.436, 1656, 7.326,
        ],
      ],
      ['title/classes/UpdateResumeDto.html', [29, 0.198, 937, 2.631]],
      [
        'body/classes/UpdateResumeDto.html',
        [
          3, 0.141, 4, 0.141, 5, 0.095, 7, 0.297, 8, 0.012, 28, 0.141, 29,
          0.367, 33, 0.009, 34, 0.009, 73, 1.102, 109, 0.486, 112, 0.619, 115,
          0.799, 132, 1.138, 140, 0.832, 142, 1.138, 247, 2.022, 277, 1.616,
          312, 3.006, 326, 1.376, 373, 2.774, 416, 2.148, 426, 1.376, 501, 1.79,
          538, 2.707, 541, 1.138, 574, 3.373, 579, 2.537, 580, 3.802, 586,
          3.803, 590, 3.006, 591, 3.136, 592, 3.136, 593, 2.943, 602, 3.277,
          603, 3.277, 604, 2.537, 612, 3.607, 626, 2.537, 661, 2.658, 663,
          3.116, 666, 2.658, 698, 4.269, 855, 3.116, 927, 4.993, 928, 4.598,
          929, 2.792, 932, 2.537, 933, 2.537, 934, 3.136, 935, 3.318, 936,
          3.863, 937, 4.025, 938, 2.774, 939, 4.989, 1657, 4.885, 1658, 4.885,
        ],
      ],
      ['title/classes/UpdateRoleDto.html', [29, 0.198, 1528, 2.801]],
      [
        'body/classes/UpdateRoleDto.html',
        [
          3, 0.18, 4, 0.18, 5, 0.121, 7, 0.284, 8, 0.012, 28, 0.18, 29, 0.299,
          33, 0.011, 34, 0.011, 426, 1.752, 541, 1.449, 676, 3.968, 678, 4.919,
          932, 3.231, 933, 3.231, 934, 3.091, 938, 3.221, 1528, 4.975, 1531,
          4.919, 1659, 5.436, 1660, 7.326,
        ],
      ],
      ['title/classes/UpdateSubscriberDto.html', [29, 0.198, 1597, 2.801]],
      [
        'body/classes/UpdateSubscriberDto.html',
        [
          3, 0.18, 4, 0.18, 5, 0.121, 7, 0.284, 8, 0.012, 28, 0.18, 29, 0.299,
          33, 0.011, 34, 0.011, 426, 1.752, 541, 1.449, 688, 3.968, 690, 4.919,
          932, 3.231, 933, 3.231, 934, 3.091, 938, 3.221, 1597, 4.975, 1602,
          4.919, 1661, 5.436, 1662, 7.326,
        ],
      ],
      ['title/classes/UpdateUserDto.html', [29, 0.198, 1663, 2.801]],
      [
        'body/classes/UpdateUserDto.html',
        [
          3, 0.129, 4, 0.129, 5, 0.086, 7, 0.259, 8, 0.012, 28, 0.129, 29,
          0.285, 33, 0.009, 34, 0.009, 109, 0.443, 112, 0.94, 115, 1.003, 132,
          1.729, 139, 0.803, 140, 0.836, 141, 2.209, 142, 1.778, 187, 2.842,
          217, 1.673, 240, 2.817, 277, 1.521, 426, 1.255, 490, 2.177, 501,
          1.633, 541, 1.038, 543, 3.856, 608, 2.842, 614, 2.314, 618, 4.243,
          619, 4.243, 706, 3.894, 932, 3.471, 933, 2.314, 934, 2.214, 938,
          2.612, 1026, 3.247, 1240, 3.523, 1293, 3.894, 1663, 4.034, 1664,
          6.673, 1665, 5.94, 1666, 8.166, 1667, 4.456, 1668, 4.456, 1669, 4.456,
          1670, 4.456, 1671, 4.456, 1672, 6.487, 1673, 6.487, 1674, 7.424, 1675,
          4.456, 1676, 4.456,
        ],
      ],
      ['title/classes/UpdatedBy.html', [29, 0.198, 538, 1.512]],
      [
        'body/classes/UpdatedBy.html',
        [
          3, 0.142, 4, 0.142, 5, 0.095, 7, 0.297, 8, 0.012, 28, 0.142, 29,
          0.368, 33, 0.009, 34, 0.009, 73, 1.107, 109, 0.488, 112, 0.801, 115,
          0.887, 132, 1.473, 140, 0.863, 142, 1.631, 247, 2.028, 277, 1.62, 312,
          2.337, 326, 1.972, 373, 2.157, 416, 2.157, 426, 1.382, 501, 1.798,
          538, 2.807, 541, 1.143, 574, 3.421, 579, 2.549, 580, 3.813, 586,
          3.811, 590, 2.337, 591, 2.438, 592, 2.438, 593, 2.956, 602, 2.549,
          603, 2.549, 604, 2.549, 612, 3.617, 661, 2.67, 663, 3.13, 666, 2.67,
          674, 4.288, 855, 3.13, 927, 4.725, 928, 5.104, 929, 2.805, 932, 2.549,
          933, 2.549, 934, 3.144, 935, 3.332, 936, 5.004, 937, 3.13, 938, 2.157,
          939, 3.88, 1677, 4.907, 1678, 4.907,
        ],
      ],
      ['title/classes/User.html', [29, 0.198, 147, 1.162]],
      [
        'body/classes/User.html',
        [
          3, 0.097, 4, 0.097, 5, 0.065, 7, 0.223, 8, 0.012, 28, 0.166, 29,
          0.161, 33, 0.007, 34, 0.007, 65, 0.944, 73, 1.099, 105, 2.29, 109,
          0.333, 112, 1.033, 115, 1.028, 132, 1.899, 135, 3.659, 136, 2.851,
          139, 0.621, 140, 0.945, 142, 1.625, 147, 1.371, 174, 2.98, 217, 0.944,
          225, 4.18, 277, 1.247, 326, 1.615, 333, 2.39, 337, 2.008, 363, 3.121,
          416, 3.244, 483, 1.986, 490, 1.785, 504, 2.522, 538, 2.102, 539,
          2.522, 541, 0.78, 543, 2.98, 545, 3.456, 547, 3.456, 549, 4.536, 550,
          3.851, 552, 5.086, 554, 4.03, 555, 4.205, 560, 2.529, 566, 2.019, 567,
          2.783, 568, 2.019, 569, 3.548, 570, 3.067, 618, 3.279, 619, 3.279,
          720, 2.276, 726, 2.276, 729, 2.442, 741, 2.137, 1427, 4.536, 1428,
          4.979, 1679, 2.442, 1680, 5.737, 1681, 3.351, 1682, 3.351, 1683,
          3.351, 1684, 3.351, 1685, 3.351, 1686, 3.351, 1687, 3.351, 1688,
          3.351, 1689, 3.351, 1690, 3.351, 1691, 3.351, 1692, 3.351, 1693,
          3.351, 1694, 3.351, 1695, 3.351, 1696, 3.351, 1697, 3.351, 1698,
          3.351, 1699, 2.928,
        ],
      ],
      ['title/classes/UserLoginDto.html', [29, 0.198, 185, 2.485]],
      [
        'body/classes/UserLoginDto.html',
        [
          3, 0.105, 4, 0.105, 5, 0.071, 7, 0.254, 8, 0.012, 28, 0.174, 29,
          0.345, 32, 2.724, 33, 0.007, 34, 0.007, 73, 1.166, 109, 0.362, 112,
          0.655, 115, 1.029, 132, 1.204, 136, 3.668, 139, 0.747, 140, 0.737,
          142, 1.671, 168, 1.981, 185, 3.114, 186, 3.435, 196, 1.541, 240,
          3.083, 247, 2.618, 277, 1.323, 296, 3.297, 298, 4.163, 312, 1.734,
          326, 1.025, 333, 2.281, 337, 1.964, 340, 3.152, 443, 1.206, 490,
          1.894, 501, 1.334, 541, 0.848, 543, 3.398, 546, 2.483, 570, 2.108,
          574, 3.489, 579, 1.891, 583, 3.297, 584, 3.297, 585, 3.621, 586,
          2.812, 588, 3.818, 590, 1.734, 591, 1.809, 592, 1.809, 608, 2.322,
          611, 4.379, 612, 3.435, 613, 2.812, 614, 1.891, 615, 2.954, 616,
          2.954, 617, 3.114, 618, 3.739, 619, 3.739, 620, 2.081, 621, 3.766,
          622, 3.51, 623, 3.766, 1700, 5.169, 1701, 3.641, 1702, 3.641,
        ],
      ],
      ['title/controllers/UsersController.html', [0, 1.238, 1703, 3.006]],
      [
        'body/controllers/UsersController.html',
        [
          0, 0.92, 2, 0.92, 3, 0.089, 4, 0.089, 5, 0.059, 7, 0.272, 8, 0.012, 9,
          2.369, 12, 0.482, 26, 2.482, 28, 0.089, 29, 0.147, 32, 1.163, 33,
          0.007, 34, 0.007, 71, 1.163, 92, 2.372, 96, 2.817, 101, 1.844, 109,
          0.305, 110, 1.244, 112, 0.856, 114, 1.844, 115, 1.025, 122, 1.523,
          132, 1.574, 136, 2.266, 138, 1.965, 139, 0.731, 140, 0.762, 141,
          1.844, 143, 2.759, 145, 2.751, 147, 2.354, 170, 1.871, 178, 4.002,
          180, 1.592, 183, 1.46, 184, 1.297, 187, 2.909, 195, 1.592, 196, 1.297,
          197, 2.829, 217, 1.534, 219, 2.305, 235, 4.396, 238, 2.086, 241,
          1.847, 242, 2.369, 326, 1.284, 335, 2.234, 336, 2.234, 348, 2.491,
          360, 2.424, 362, 2.679, 363, 1.668, 364, 2.679, 381, 1.668, 414,
          1.955, 415, 1.955, 426, 1.284, 427, 2.305, 428, 1.93, 429, 1.93, 433,
          1.348, 434, 2.653, 437, 2.748, 439, 2.005, 440, 1.297, 443, 2.382,
          444, 1.297, 445, 1.847, 447, 1.955, 449, 1.847, 451, 1.847, 452,
          1.592, 453, 1.93, 456, 1.297, 458, 1.348, 461, 1.348, 462, 1.955, 464,
          2.909, 465, 1.955, 466, 1.955, 468, 1.847, 469, 1.847, 471, 2.082,
          473, 1.847, 614, 3.133, 615, 1.752, 616, 1.752, 617, 2.748, 668,
          1.955, 887, 2.679, 971, 1.955, 980, 1.955, 990, 2.082, 997, 3.097,
          999, 2.082, 1202, 2.424, 1224, 2.679, 1299, 2.082, 1348, 2.082, 1663,
          4.885, 1672, 2.679, 1673, 2.679, 1703, 3.323, 1704, 2.679, 1705,
          3.065, 1706, 3.986, 1707, 3.065, 1708, 4.561, 1709, 3.065, 1710,
          3.065, 1711, 3.065, 1712, 4.561, 1713, 3.065, 1714, 3.065, 1715,
          3.065, 1716, 3.065, 1717, 3.065, 1718, 3.065, 1719, 2.679, 1720,
          2.679, 1721, 3.065, 1722, 3.065, 1723, 3.065, 1724, 3.065, 1725,
          3.065, 1726, 4.76, 1727, 3.065, 1728, 3.065, 1729, 3.065, 1730, 2.679,
          1731, 2.679, 1732, 2.679, 1733, 2.679, 1734, 3.065, 1735, 3.065, 1736,
          3.986, 1737, 3.065, 1738, 4.561, 1739, 3.065, 1740, 3.065,
        ],
      ],
      ['title/modules/UsersModule.html', [35, 1.056, 57, 2.631]],
      [
        'body/modules/UsersModule.html',
        [
          2, 1.961, 3, 0.149, 4, 0.149, 5, 0.1, 7, 0.308, 8, 0.012, 12, 0.811,
          28, 0.149, 29, 0.248, 33, 0.009, 34, 0.009, 35, 1.835, 37, 2.182, 38,
          2.103, 39, 2.358, 40, 2.358, 41, 2.182, 42, 3.279, 43, 3.279, 57,
          5.147, 58, 2.987, 59, 2.267, 60, 2.358, 62, 2.456, 64, 2.678, 65,
          1.452, 139, 0.707, 147, 1.452, 197, 4.362, 333, 1.957, 481, 2.806,
          483, 2.663, 720, 4.436, 725, 4.166, 726, 3.502, 727, 4.506, 729,
          3.757, 1703, 5.224, 1719, 4.506, 1741, 4.506, 1742, 5.156, 1743,
          4.506, 1744, 5.156, 1745, 5.156, 1746, 4.506,
        ],
      ],
      ['title/injectables/UsersService.html', [106, 0.819, 197, 2.142]],
      [
        'body/injectables/UsersService.html',
        [
          3, 0.048, 4, 0.048, 5, 0.032, 7, 0.267, 8, 0.013, 12, 0.259, 28,
          0.048, 29, 0.079, 30, 1.092, 31, 1.221, 33, 0.004, 34, 0.004, 65,
          0.463, 70, 0.817, 71, 1.368, 72, 0.817, 73, 0.955, 92, 2.148, 96,
          2.869, 101, 1.929, 105, 0.951, 106, 0.551, 107, 0.603, 109, 0.164,
          110, 0.758, 112, 0.884, 114, 1.776, 115, 1.035, 116, 1.437, 135,
          3.017, 136, 3.071, 138, 1.933, 139, 0.796, 140, 0.749, 141, 1.814,
          142, 1.752, 143, 2.498, 145, 2.188, 147, 2.073, 168, 2.304, 170,
          1.694, 180, 2.199, 184, 0.696, 187, 1.771, 197, 1.442, 203, 2.447,
          217, 2.035, 219, 3.088, 225, 3.085, 235, 3.739, 238, 2.347, 240,
          1.607, 241, 0.991, 242, 0.854, 247, 0.527, 248, 2.85, 249, 3.348, 250,
          1.301, 251, 1.117, 277, 0.711, 281, 2.427, 284, 2.427, 291, 2.427,
          298, 1.673, 299, 4.058, 300, 2.427, 303, 2.299, 310, 1.437, 311,
          2.196, 323, 2.427, 324, 1.199, 326, 1.74, 333, 2.178, 334, 1.117, 337,
          0.834, 338, 1.199, 339, 1.117, 340, 0.647, 348, 1.27, 360, 2.196, 370,
          1.437, 376, 2.427, 377, 2.427, 381, 1.961, 387, 1.199, 388, 1.199,
          393, 1.117, 403, 1.437, 406, 1.437, 411, 1.199, 412, 2.427, 418,
          1.437, 419, 1.437, 421, 2.427, 422, 2.06, 426, 0.782, 427, 1.175, 428,
          1.792, 429, 1.175, 433, 1.221, 434, 1.585, 439, 1.585, 440, 1.175,
          443, 1.809, 444, 1.175, 447, 1.771, 453, 0.696, 456, 0.696, 458,
          0.723, 486, 2.972, 490, 1.881, 496, 0.895, 497, 0.991, 498, 0.895,
          499, 0.94, 504, 0.723, 505, 2.171, 506, 0.94, 507, 0.991, 508, 0.991,
          509, 0.991, 510, 0.991, 511, 0.991, 512, 0.991, 513, 2.574, 514,
          1.673, 515, 1.673, 517, 1.673, 518, 0.991, 519, 1.673, 521, 1.049,
          522, 0.991, 523, 0.991, 524, 0.991, 525, 0.991, 526, 1.673, 527,
          0.991, 528, 0.991, 529, 0.991, 530, 0.991, 531, 0.991, 532, 1.673,
          538, 0.603, 539, 0.723, 543, 2.199, 614, 2.665, 615, 1.587, 616, 0.94,
          617, 0.991, 618, 2.42, 619, 2.42, 668, 2.299, 691, 2.196, 726, 1.117,
          732, 1.437, 734, 2.85, 737, 2.427, 740, 1.049, 741, 1.049, 744, 2.024,
          749, 1.301, 770, 1.301, 772, 2.427, 784, 1.437, 801, 1.437, 808,
          1.301, 815, 1.199, 854, 3.447, 856, 1.301, 934, 0.817, 1025, 1.199,
          1034, 1.771, 1036, 1.771, 1074, 2.196, 1080, 2.875, 1087, 1.437, 1175,
          2.447, 1226, 1.437, 1233, 1.301, 1237, 1.301, 1283, 1.301, 1298,
          1.301, 1299, 1.117, 1304, 1.437, 1305, 1.437, 1392, 2.196, 1393,
          2.196, 1394, 2.196, 1502, 3.149, 1553, 1.437, 1663, 3.898, 1706,
          3.149, 1720, 1.437, 1726, 3.149, 1730, 1.437, 1731, 3.149, 1732,
          1.437, 1733, 1.437, 1736, 2.427, 1746, 1.437, 1747, 1.437, 1748,
          3.604, 1749, 3.604, 1750, 3.604, 1751, 2.777, 1752, 2.777, 1753,
          2.777, 1754, 2.777, 1755, 1.645, 1756, 1.645, 1757, 1.645, 1758,
          2.777, 1759, 1.645, 1760, 1.645, 1761, 2.777, 1762, 1.645, 1763,
          1.645, 1764, 2.777, 1765, 1.645, 1766, 2.777, 1767, 5.132, 1768,
          1.645, 1769, 1.645, 1770, 1.645, 1771, 1.645, 1772, 2.777, 1773,
          1.645, 1774, 1.645, 1775, 1.645, 1776, 1.645, 1777, 1.645, 1778,
          1.645, 1779, 1.645, 1780, 1.645, 1781, 1.645, 1782, 1.645, 1783,
          1.645, 1784, 2.777, 1785, 1.645, 1786, 1.645, 1787, 2.427, 1788,
          2.777, 1789, 4.731, 1790, 2.777, 1791, 2.777, 1792, 4.234, 1793,
          1.645, 1794, 2.777, 1795, 1.645, 1796, 3.604, 1797, 1.645, 1798,
          1.645, 1799, 1.645, 1800, 1.645, 1801, 1.645, 1802, 4.234, 1803,
          1.645, 1804, 1.645, 1805, 1.645, 1806, 2.777, 1807, 1.645, 1808,
          1.645, 1809, 1.645, 1810, 1.645, 1811, 1.645, 1812, 1.645, 1813,
          1.645, 1814, 2.777, 1815, 1.645, 1816, 1.645, 1817, 1.645, 1818,
          1.645, 1819, 1.645, 1820, 1.645, 1821, 2.777, 1822, 1.645, 1823,
          1.645,
        ],
      ],
      ['title/coverage.html', [1824, 4.459]],
      [
        'body/coverage.html',
        [
          0, 2.191, 1, 1.781, 5, 0.074, 6, 2.135, 8, 0.012, 13, 1.559, 19, 1.66,
          22, 1.397, 24, 1.781, 26, 1.33, 29, 0.395, 33, 0.006, 34, 0.006, 41,
          1.034, 106, 1.542, 108, 2.135, 120, 1.781, 121, 2.135, 140, 0.754,
          145, 0.865, 147, 1.08, 151, 1.472, 168, 1.33, 170, 0.758, 183, 1.164,
          185, 1.472, 186, 3.065, 190, 1.33, 197, 1.269, 256, 1.66, 257, 1.66,
          276, 2.135, 287, 1.472, 333, 0.927, 337, 1.421, 423, 1.781, 424,
          2.135, 431, 1.559, 448, 1.66, 454, 1.559, 479, 1.781, 484, 2.135, 495,
          1.781, 538, 0.896, 542, 3.449, 572, 3.033, 573, 3.449, 587, 1.472,
          608, 3.716, 614, 1.269, 624, 2.135, 625, 3.033, 632, 1.66, 633, 2.135,
          634, 3.033, 652, 1.559, 653, 2.135, 654, 3.033, 661, 1.33, 662, 3.033,
          663, 3.716, 675, 1.559, 676, 1.559, 677, 2.135, 678, 3.033, 688,
          1.559, 689, 2.135, 690, 3.033, 710, 1.781, 711, 2.135, 713, 1.559,
          720, 1.66, 722, 1.164, 723, 1.66, 725, 1.559, 730, 2.135, 739, 1.66,
          740, 1.559, 741, 1.559, 742, 1.781, 743, 1.932, 744, 1.781, 759,
          6.299, 789, 2.135, 790, 1.781, 791, 2.135, 836, 1.559, 842, 1.781,
          844, 1.781, 910, 1.781, 914, 2.135, 920, 1.781, 927, 1.472, 928,
          3.449, 937, 1.559, 940, 2.446, 942, 2.135, 943, 1.214, 944, 3.449,
          963, 1.781, 964, 1.66, 966, 1.781, 967, 2.135, 982, 1.66, 985, 1.559,
          1007, 2.135, 1027, 1.472, 1039, 2.135, 1040, 3.033, 1057, 1.932, 1058,
          1.932, 1090, 2.135, 1107, 2.135, 1109, 2.135, 1116, 1.781, 1117,
          2.135, 1128, 1.397, 1129, 1.66, 1180, 1.66, 1196, 2.135, 1209, 2.135,
          1301, 2.135, 1329, 3.449, 1343, 1.781, 1344, 2.135, 1354, 1.66, 1356,
          1.559, 1378, 2.135, 1412, 3.033, 1418, 1.781, 1419, 1.781, 1426,
          3.449, 1443, 1.781, 1445, 1.781, 1447, 1.781, 1448, 2.135, 1461,
          1.559, 1479, 2.135, 1507, 3.449, 1520, 1.781, 1521, 2.135, 1528, 1.66,
          1545, 2.135, 1571, 3.449, 1583, 1.781, 1584, 2.135, 1597, 1.66, 1600,
          1.559, 1603, 1.932, 1620, 2.135, 1649, 2.135, 1651, 2.135, 1653,
          2.135, 1655, 2.135, 1659, 2.135, 1661, 2.135, 1663, 1.66, 1664, 2.135,
          1679, 3.449, 1703, 1.781, 1704, 2.135, 1747, 2.135, 1824, 1.932, 1825,
          2.135, 1826, 2.444, 1827, 2.444, 1828, 8.313, 1829, 4.734, 1830,
          5.362, 1831, 2.444, 1832, 6.182, 1833, 6.694, 1834, 5.826, 1835,
          7.044, 1836, 4.734, 1837, 5.362, 1838, 7.766, 1839, 6.465, 1840,
          4.137, 1841, 5.85, 1842, 2.444, 1843, 2.444, 1844, 2.444, 1845, 2.444,
          1846, 2.444, 1847, 2.444, 1848, 3.835, 1849, 2.135, 1850, 2.444, 1851,
          2.444, 1852, 2.444, 1853, 2.444, 1854, 2.444, 1855, 2.444, 1856,
          2.444,
        ],
      ],
      ['title/dependencies.html', [38, 2.024, 1857, 3.006]],
      [
        'body/dependencies.html',
        [
          8, 0.013, 12, 0.798, 16, 2.9, 18, 3.057, 29, 0.31, 33, 0.009, 34,
          0.009, 38, 2.069, 65, 1.429, 70, 2.522, 71, 1.926, 72, 2.522, 73,
          1.459, 85, 4.012, 87, 4.012, 135, 3.237, 182, 4.012, 188, 3.518, 196,
          2.147, 263, 4.012, 265, 4.012, 309, 4.434, 311, 4.012, 317, 4.539,
          453, 2.147, 498, 2.761, 499, 2.9, 501, 1.86, 579, 2.636, 841, 3.697,
          1056, 3.697, 1098, 4.012, 1124, 3.057, 1126, 3.446, 1127, 3.697, 1858,
          5.074, 1859, 7.493, 1860, 5.074, 1861, 5.074, 1862, 5.074, 1863,
          5.074, 1864, 5.074, 1865, 5.074, 1866, 5.074, 1867, 5.074, 1868,
          5.074, 1869, 5.074, 1870, 5.074, 1871, 5.074, 1872, 4.434, 1873,
          4.434, 1874, 5.074, 1875, 4.434, 1876, 5.074, 1877, 6.465, 1878,
          5.074, 1879, 6.465, 1880, 5.074, 1881, 5.074, 1882, 5.074, 1883,
          6.465, 1884, 5.074, 1885, 4.434, 1886, 5.074, 1887, 5.074, 1888,
          5.074, 1889, 5.074, 1890, 4.434, 1891, 5.074, 1892, 5.074,
        ],
      ],
      ['title/miscellaneous/functions.html', [1893, 2.194, 1894, 4.337]],
      [
        'body/miscellaneous/functions.html',
        [
          8, 0.011, 33, 0.011, 34, 0.011, 41, 3.37, 109, 0.653, 1849, 5.741,
          1893, 4.19, 1894, 5.741, 1895, 6.569,
        ],
      ],
      ['title/index.html', [109, 0.342, 1896, 3.44, 1897, 3.44]],
      [
        'body/index.html',
        [
          5, 0.084, 8, 0.011, 11, 2.487, 33, 0.008, 34, 0.008, 38, 1.774, 73,
          0.982, 92, 1.711, 139, 0.632, 142, 1.013, 147, 1.646, 214, 3.802, 317,
          2.775, 345, 3.802, 398, 3.802, 425, 3.802, 426, 1.225, 498, 4.127,
          620, 2.487, 767, 3.802, 768, 5.77, 1069, 3.802, 1074, 3.441, 1098,
          4.623, 1126, 3.97, 1232, 3.802, 1233, 4.623, 1299, 2.955, 1522, 3.802,
          1787, 3.802, 1824, 3.441, 1825, 6.436, 1872, 3.802, 1873, 3.802, 1875,
          3.802, 1890, 5.77, 1898, 5.847, 1899, 4.351, 1900, 5.847, 1901, 4.351,
          1902, 7.06, 1903, 4.351, 1904, 4.351, 1905, 5.847, 1906, 4.351, 1907,
          4.351, 1908, 5.847, 1909, 4.351, 1910, 4.351, 1911, 4.351, 1912,
          4.351, 1913, 5.847, 1914, 4.351, 1915, 4.351, 1916, 4.351, 1917,
          4.351, 1918, 4.351, 1919, 4.351, 1920, 4.351, 1921, 4.351, 1922,
          4.351, 1923, 4.351, 1924, 5.847, 1925, 4.351, 1926, 4.351, 1927,
          4.351, 1928, 4.351, 1929, 4.351, 1930, 5.847, 1931, 8.063, 1932,
          4.351, 1933, 5.847, 1934, 4.351, 1935, 4.351, 1936, 4.351, 1937,
          4.351, 1938, 4.351, 1939, 8.391, 1940, 4.351, 1941, 5.847, 1942,
          4.351, 1943, 5.847, 1944, 4.351, 1945, 4.351, 1946, 4.351, 1947, 7.06,
          1948, 4.351, 1949, 4.351, 1950, 4.351, 1951, 4.351, 1952, 4.351, 1953,
          4.351, 1954, 4.351, 1955, 4.351, 1956, 5.847, 1957, 4.351, 1958,
          4.351, 1959, 4.351, 1960, 4.351, 1961, 4.351, 1962, 4.351, 1963,
          4.351, 1964, 4.351, 1965, 5.847, 1966, 4.351, 1967, 5.847, 1968,
          4.351, 1969, 4.351, 1970, 5.847, 1971, 4.351, 1972, 4.351, 1973,
          6.603, 1974, 4.351, 1975, 4.351, 1976, 4.351,
        ],
      ],
      ['title/modules.html', [37, 2.386]],
      [
        'body/modules.html',
        [
          8, 0.01, 33, 0.01, 34, 0.01, 36, 4.14, 37, 2.405, 47, 3.859, 48,
          3.859, 49, 3.859, 50, 3.859, 51, 3.859, 52, 3.624, 53, 3.859, 54,
          3.859, 55, 3.624, 56, 3.859, 57, 3.624, 1160, 6.725, 1977, 8.505,
          1978, 8.505, 1979, 8.505,
        ],
      ],
      ['title/overview.html', [1980, 4.927]],
      [
        'body/overview.html',
        [
          2, 1.168, 8, 0.012, 13, 3.972, 22, 4.299, 33, 0.008, 34, 0.008, 35,
          0.996, 36, 6.184, 37, 1.646, 38, 1.586, 39, 1.778, 40, 1.778, 41,
          1.646, 42, 1.778, 43, 1.778, 44, 3.398, 45, 3.398, 46, 3.398, 47,
          5.598, 48, 4.808, 49, 5.107, 50, 4.808, 51, 4.808, 52, 4.797, 53,
          4.808, 54, 4.808, 55, 4.797, 56, 4.808, 57, 4.797, 58, 2.476, 59,
          1.71, 60, 1.778, 107, 1.425, 190, 4.092, 197, 3.984, 252, 3.398, 253,
          3.398, 255, 3.398, 256, 4.229, 257, 4.229, 287, 4.531, 313, 2.833,
          454, 3.972, 475, 3.398, 476, 3.398, 541, 0.905, 713, 3.972, 716,
          3.398, 717, 3.398, 836, 3.972, 905, 3.398, 906, 3.398, 941, 3.075,
          985, 3.972, 1001, 3.398, 1002, 3.398, 1169, 3.398, 1170, 3.398, 1171,
          3.398, 1356, 3.972, 1373, 3.398, 1374, 3.398, 1461, 3.972, 1473,
          3.398, 1474, 3.398, 1539, 3.398, 1540, 3.398, 1541, 3.398, 1600,
          3.972, 1615, 3.398, 1616, 3.398, 1741, 3.398, 1743, 3.398, 1980,
          3.398, 1981, 5.414, 1982, 3.888, 1983, 3.888,
        ],
      ],
      ['title/properties.html', [277, 1.271, 1857, 3.006]],
      [
        'body/properties.html',
        [
          8, 0.012, 33, 0.011, 34, 0.011, 277, 1.667, 546, 2.471, 1885, 5.69,
          1984, 6.512, 1985, 6.512, 1986, 6.512, 1987, 6.512,
        ],
      ],
      ['title/miscellaneous/typealiases.html', [1893, 2.194, 1988, 4.963]],
      [
        'body/miscellaneous/typealiases.html',
        [
          8, 0.01, 33, 0.01, 34, 0.01, 109, 0.598, 140, 0.678, 495, 5.235, 542,
          4.386, 567, 4.765, 739, 4.879, 740, 4.582, 741, 4.582, 944, 4.386,
          963, 5.235, 1129, 4.879, 1329, 4.386, 1426, 4.386, 1443, 5.235, 1507,
          4.386, 1571, 4.386, 1679, 4.386, 1893, 3.84, 1989, 6.02, 1990, 5.26,
          1991, 5.26, 1992, 5.26, 1993, 5.26, 1994, 5.26, 1995, 5.26, 1996,
          5.26,
        ],
      ],
      ['title/miscellaneous/variables.html', [1893, 2.194, 1997, 4.337]],
      [
        'body/miscellaneous/variables.html',
        [
          8, 0.012, 11, 2.407, 26, 3.112, 33, 0.008, 34, 0.008, 101, 1.149, 105,
          1.958, 109, 0.419, 115, 0.951, 140, 0.846, 143, 1.926, 147, 1.829,
          170, 1.306, 183, 2.724, 203, 5.696, 217, 1.186, 247, 1.833, 303, 5.35,
          479, 4.167, 542, 3.069, 571, 3.68, 720, 3.884, 723, 3.884, 725, 3.648,
          742, 4.167, 743, 4.522, 744, 4.167, 763, 3.069, 788, 3.069, 842,
          4.167, 944, 3.069, 964, 3.884, 965, 3.68, 1048, 3.069, 1057, 4.522,
          1058, 4.522, 1059, 3.069, 1060, 3.68, 1180, 3.884, 1320, 3.68, 1329,
          3.069, 1342, 3.68, 1416, 3.33, 1418, 4.167, 1426, 3.069, 1445, 4.167,
          1446, 3.68, 1507, 3.069, 1519, 3.68, 1571, 3.069, 1582, 3.68, 1603,
          4.522, 1679, 3.069, 1699, 3.68, 1840, 3.68, 1841, 3.68, 1893, 2.686,
          1990, 3.68, 1991, 3.68, 1992, 3.68, 1993, 3.68, 1994, 3.68, 1995,
          3.68, 1996, 3.68, 1997, 3.68, 1998, 6.494, 1999, 7.818, 2000, 4.212,
          2001, 4.212, 2002, 4.212, 2003, 4.212, 2004, 4.212, 2005, 4.212, 2006,
          4.212, 2007, 4.212, 2008, 4.212, 2009, 4.212, 2010, 4.212, 2011,
          4.212, 2012, 4.212, 2013, 4.212, 2014, 4.212, 2015, 4.212, 2016,
          4.212, 2017, 4.212, 2018, 4.212, 2019, 4.212,
        ],
      ],
    ],
    invertedIndex: [
      [
        '',
        {
          _index: 8,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'modules/CompaniesModule.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateFileDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/DatabasesController.html': {},
            'modules/DatabasesModule.html': {},
            'injectables/DatabasesService.html': {},
            'classes/File.html': {},
            'controllers/FilesController.html': {},
            'modules/FilesModule.html': {},
            'injectables/FilesService.html': {},
            'classes/History.html': {},
            'interfaces/IUser.html': {},
            'classes/Job.html': {},
            'controllers/JobsController.html': {},
            'modules/JobsModule.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'classes/Permission.html': {},
            'controllers/PermissionsController.html': {},
            'modules/PermissionsModule.html': {},
            'injectables/PermissionsService.html': {},
            'classes/RegisterUserDto.html': {},
            'interfaces/Response.html': {},
            'classes/Resume.html': {},
            'controllers/ResumesController.html': {},
            'modules/ResumesModule.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'controllers/RolesController.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'controllers/SubscribersController.html': {},
            'modules/SubscribersModule.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'classes/UpdateCompanyDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateJobDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateSubscriberDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
            'properties.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        '0',
        {
          _index: 759,
          title: {},
          body: {
            'injectables/DatabasesService.html': {},
            'controllers/FilesController.html': {},
            'controllers/MailController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        '0.00',
        {
          _index: 1143,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        '0.14.1',
        { _index: 1871, title: {}, body: { 'dependencies.html': {} } },
      ],
      ['0.5.1', { _index: 1870, title: {}, body: { 'dependencies.html': {} } }],
      ['0.7.0', { _index: 1884, title: {}, body: { 'dependencies.html': {} } }],
      ['0/1', { _index: 1828, title: {}, body: { 'coverage.html': {} } }],
      ['0/10', { _index: 1831, title: {}, body: { 'coverage.html': {} } }],
      ['0/11', { _index: 1852, title: {}, body: { 'coverage.html': {} } }],
      ['0/12', { _index: 1837, title: {}, body: { 'coverage.html': {} } }],
      ['0/15', { _index: 1851, title: {}, body: { 'coverage.html': {} } }],
      ['0/17', { _index: 1854, title: {}, body: { 'coverage.html': {} } }],
      ['0/19', { _index: 1848, title: {}, body: { 'coverage.html': {} } }],
      ['0/2', { _index: 1829, title: {}, body: { 'coverage.html': {} } }],
      ['0/3', { _index: 1833, title: {}, body: { 'coverage.html': {} } }],
      ['0/4', { _index: 1832, title: {}, body: { 'coverage.html': {} } }],
      ['0/5', { _index: 1836, title: {}, body: { 'coverage.html': {} } }],
      ['0/6', { _index: 1834, title: {}, body: { 'coverage.html': {} } }],
      ['0/7', { _index: 1835, title: {}, body: { 'coverage.html': {} } }],
      ['0/8', { _index: 1830, title: {}, body: { 'coverage.html': {} } }],
      ['0/9', { _index: 1853, title: {}, body: { 'coverage.html': {} } }],
      [
        '1',
        {
          _index: 513,
          title: { 'classes/Company-1.html': {} },
          body: {
            'injectables/CompaniesService.html': {},
            'controllers/FilesController.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        '1.0.0',
        {
          _index: 1885,
          title: {},
          body: { 'dependencies.html': {}, 'properties.html': {} },
        },
      ],
      [
        '1.0.17',
        { _index: 1887, title: {}, body: { 'dependencies.html': {} } },
      ],
      ['1.4.7', { _index: 1874, title: {}, body: { 'dependencies.html': {} } }],
      [
        '10',
        {
          _index: 422,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        '10.0.3',
        { _index: 1863, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        '10.1.0',
        { _index: 1862, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        '10.2.0',
        { _index: 1861, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        '10.4.15',
        { _index: 1859, title: {}, body: { 'dependencies.html': {} } },
      ],
      ['100', { _index: 1846, title: {}, body: { 'coverage.html': {} } }],
      [
        '1000',
        {
          _index: 275,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
          },
        },
      ],
      [
        '1024',
        {
          _index: 866,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'injectables/MulterConfigService.html': {},
          },
        },
      ],
      ['12', { _index: 1981, title: {}, body: { 'overview.html': {} } }],
      [
        '123456',
        {
          _index: 623,
          title: {},
          body: {
            'classes/Company-2.html': {},
            'classes/CreateUserDto.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UserLoginDto.html': {},
          },
        },
      ],
      ['16', { _index: 1922, title: {}, body: { 'index.html': {} } }],
      ['18', { _index: 1982, title: {}, body: { 'overview.html': {} } }],
      [
        '1mb',
        {
          _index: 893,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        '2',
        {
          _index: 313,
          title: { 'classes/Company-2.html': {} },
          body: {
            'injectables/AuthService.html': {},
            'injectables/MailService.html': {},
            'overview.html': {},
          },
        },
      ],
      ['2.0.2', { _index: 1858, title: {}, body: { 'dependencies.html': {} } }],
      ['2.1.3', { _index: 1882, title: {}, body: { 'dependencies.html': {} } }],
      ['2.4.3', { _index: 1869, title: {}, body: { 'dependencies.html': {} } }],
      ['2/2', { _index: 1847, title: {}, body: { 'coverage.html': {} } }],
      ['20', { _index: 93, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['27017:27017', { _index: 1968, title: {}, body: { 'index.html': {} } }],
      ['3.3.0', { _index: 1860, title: {}, body: { 'dependencies.html': {} } }],
      ['3/4', { _index: 1843, title: {}, body: { 'coverage.html': {} } }],
      ['32', { _index: 1983, title: {}, body: { 'overview.html': {} } }],
      ['4.0.1', { _index: 1883, title: {}, body: { 'dependencies.html': {} } }],
      ['4.1.2', { _index: 1864, title: {}, body: { 'dependencies.html': {} } }],
      [
        '4.15.3',
        { _index: 1879, title: {}, body: { 'dependencies.html': {} } },
      ],
      ['4/6', { _index: 1845, title: {}, body: { 'coverage.html': {} } }],
      [
        '422',
        {
          _index: 1309,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        '5',
        {
          _index: 204,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/FilesController.html': {},
            'injectables/MulterConfigService.html': {},
          },
        },
      ],
      ['5.0.1', { _index: 1892, title: {}, body: { 'dependencies.html': {} } }],
      ['5.4.0', { _index: 1868, title: {}, body: { 'dependencies.html': {} } }],
      ['5432:5432', { _index: 1972, title: {}, body: { 'index.html': {} } }],
      [
        '5mb',
        {
          _index: 870,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'injectables/MulterConfigService.html': {},
          },
        },
      ],
      ['6.3.0', { _index: 1867, title: {}, body: { 'dependencies.html': {} } }],
      [
        '60',
        {
          _index: 91,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
          },
        },
      ],
      ['66', { _index: 1844, title: {}, body: { 'coverage.html': {} } }],
      [
        '69',
        {
          _index: 775,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      ['7.0.0', { _index: 1889, title: {}, body: { 'dependencies.html': {} } }],
      ['7.8.1', { _index: 1886, title: {}, body: { 'dependencies.html': {} } }],
      ['7.8.3', { _index: 1881, title: {}, body: { 'dependencies.html': {} } }],
      ['75', { _index: 1842, title: {}, body: { 'coverage.html': {} } }],
      ['8.0.0', { _index: 1876, title: {}, body: { 'dependencies.html': {} } }],
      ['8.1.1', { _index: 1865, title: {}, body: { 'dependencies.html': {} } }],
      [
        '9',
        {
          _index: 1261,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        '90',
        {
          _index: 780,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        '_',
        {
          _index: 1263,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        '_]/g',
        {
          _index: 1262,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        '_id',
        {
          _index: 326,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/History.html': {},
            'interfaces/IUser.html': {},
            'classes/Job.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtStrategy.html': {},
            'classes/Permission.html': {},
            'injectables/PermissionsService.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/Resume.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'injectables/SubscribersService.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        '_id.tostring',
        {
          _index: 369,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'absolutepath',
        {
          _index: 1253,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'access_token',
        {
          _index: 358,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'action',
        {
          _index: 923,
          title: {},
          body: { 'injectables/FilesService.html': {} },
        },
      ],
      [
        'adapter',
        { _index: 1191, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      [
        'add',
        {
          _index: 1787,
          title: {},
          body: { 'injectables/UsersService.html': {}, 'index.html': {} },
        },
      ],
      [
        'address',
        {
          _index: 543,
          title: {},
          body: {
            'classes/Company.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DatabasesService.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'adds',
        {
          _index: 924,
          title: {},
          body: { 'injectables/FilesService.html': {} },
        },
      ],
      [
        'admin',
        {
          _index: 763,
          title: {},
          body: {
            'injectables/DatabasesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/RolesService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'admin@gmail.com',
        {
          _index: 772,
          title: {},
          body: {
            'injectables/DatabasesService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'admin_role',
        {
          _index: 742,
          title: {},
          body: {
            'injectables/DatabasesService.html': {},
            'injectables/RolesService.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'adminrole',
        {
          _index: 769,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'adminrole?._id',
        {
          _index: 778,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'again',
        {
          _index: 883,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'age',
        {
          _index: 618,
          title: {},
          body: {
            'classes/Company-2.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DatabasesService.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['alias', { _index: 1839, title: {}, body: { 'coverage.html': {} } }],
      [
        'aliases',
        {
          _index: 1989,
          title: {},
          body: { 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'allowed',
        {
          _index: 862,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'allowed_mime_types',
        {
          _index: 842,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'injectables/MulterConfigService.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'allowed_mime_types.get(file.mimetype',
        {
          _index: 878,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'allowed_mime_types.has(file.mimetype',
        {
          _index: 857,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'injectables/MulterConfigService.html': {},
          },
        },
      ],
      [
        'allowed_mime_types.values',
        {
          _index: 860,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'alphabets',
        {
          _index: 392,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'already',
        {
          _index: 786,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        "any')@responsemessage('upload",
        {
          _index: 799,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'anyfilesinterceptor',
        {
          _index: 838,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'api',
        {
          _index: 498,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
            'dependencies.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'apibody',
        {
          _index: 194,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'apipath',
        {
          _index: 655,
          title: {},
          body: {
            'classes/CreatePermissionDto.html': {},
            'interfaces/IUser.html': {},
            'classes/Permission.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/RolesService.html': {},
          },
        },
      ],
      [
        'apipath=${apipath',
        {
          _index: 1390,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        'apipath=${name',
        {
          _index: 1554,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'apiproperty',
        {
          _index: 611,
          title: {},
          body: {
            'classes/Company-2.html': {},
            'classes/CreateUserDto.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UserLoginDto.html': {},
          },
        },
      ],
      [
        'apitags',
        {
          _index: 195,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/CompaniesController.html': {},
            'controllers/FilesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/MailController.html': {},
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        "apitags('auth",
        {
          _index: 199,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "apitags('companies",
        {
          _index: 459,
          title: {},
          body: { 'controllers/CompaniesController.html': {} },
        },
      ],
      [
        "apitags('files",
        {
          _index: 846,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        "apitags('jobs",
        {
          _index: 988,
          title: {},
          body: { 'controllers/JobsController.html': {} },
        },
      ],
      [
        "apitags('mail",
        {
          _index: 1134,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        "apitags('permissions",
        {
          _index: 1359,
          title: {},
          body: { 'controllers/PermissionsController.html': {} },
        },
      ],
      [
        "apitags('resumes",
        {
          _index: 1463,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        "apitags('roles",
        {
          _index: 1532,
          title: {},
          body: { 'controllers/RolesController.html': {} },
        },
      ],
      [
        "apitags('subscribers",
        {
          _index: 1604,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        "apitags('users",
        {
          _index: 1721,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'app',
        {
          _index: 1165,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'app.controller',
        { _index: 63, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'app.service',
        {
          _index: 14,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
          },
        },
      ],
      [
        'appcontroller',
        {
          _index: 1,
          title: { 'controllers/AppController.html': {} },
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'application/msword',
        {
          _index: 2003,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'application/pdf',
        {
          _index: 2001,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'application/vnd.openxmlformats',
        {
          _index: 2005,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'appmodule',
        {
          _index: 36,
          title: { 'modules/AppModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'appservice',
        {
          _index: 13,
          title: { 'injectables/AppService.html': {} },
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'aqp',
        {
          _index: 497,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'aqp(qs',
        {
          _index: 509,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'arguments',
        {
          _index: 1070,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'argumentshost',
        {
          _index: 1314,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        'array',
        {
          _index: 593,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/History.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
          },
        },
      ],
      [
        "array'})@isstring({each",
        {
          _index: 649,
          title: {},
          body: {
            'classes/CreateJobDto.html': {},
            'classes/CreateSubscriberDto.html': {},
          },
        },
      ],
      [
        "array'})@validatenested()@type(undefined",
        {
          _index: 1658,
          title: {},
          body: { 'classes/UpdateResumeDto.html': {} },
        },
      ],
      [
        'array.from',
        {
          _index: 859,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'assert',
        { _index: 1177, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      [
        'async',
        {
          _index: 96,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/DatabasesService.html': {},
            'controllers/FilesController.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'auth',
        {
          _index: 123,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'modules/MailModule.html': {},
          },
        },
      ],
      [
        'auth.controller',
        { _index: 266, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'auth.guard',
        {
          _index: 21,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
          },
        },
      ],
      [
        'auth.guard.ts',
        {
          _index: 1040,
          title: {},
          body: {
            'injectables/JwtAuthGuard.html': {},
            'injectables/LocalAuthGuard.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'auth.guard.ts:12',
        {
          _index: 1046,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'auth.guard.ts:17',
        {
          _index: 1049,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'auth.guard.ts:28',
        {
          _index: 1052,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'auth.service',
        {
          _index: 181,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/LocalStrategy.html': {},
          },
        },
      ],
      [
        'auth/auth.module',
        { _index: 68, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'auth/auth.service',
        {
          _index: 23,
          title: {},
          body: { 'controllers/AppController.html': {} },
        },
      ],
      [
        'auth/jwt',
        {
          _index: 25,
          title: {},
          body: { 'controllers/AppController.html': {} },
        },
      ],
      [
        'auth/local',
        {
          _index: 20,
          title: {},
          body: { 'controllers/AppController.html': {} },
        },
      ],
      [
        'authcontroller',
        {
          _index: 120,
          title: { 'controllers/AuthController.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'authentication',
        { _index: 1905, title: {}, body: { 'index.html': {} } },
      ],
      [
        'authguard',
        {
          _index: 17,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/LocalAuthGuard.html': {},
          },
        },
      ],
      [
        "authguard('jwt",
        {
          _index: 1041,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        "authguard('local",
        {
          _index: 1108,
          title: {},
          body: { 'injectables/LocalAuthGuard.html': {} },
        },
      ],
      [
        'authmodule',
        {
          _index: 47,
          title: { 'modules/AuthModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      ['author', { _index: 1987, title: {}, body: { 'properties.html': {} } }],
      [
        'authority',
        {
          _index: 765,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'authservice',
        {
          _index: 22,
          title: { 'injectables/AuthService.html': {} },
          body: {
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'injectables/LocalStrategy.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'avatar',
        {
          _index: 829,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'await',
        {
          _index: 219,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/DatabasesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/MailController.html': {},
            'injectables/MailService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'b',
        {
          _index: 1237,
          title: {},
          body: {
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['backend', { _index: 1900, title: {}, body: { 'index.html': {} } }],
      [
        'background',
        {
          _index: 830,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'badrequestexception',
        {
          _index: 180,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/CompaniesService.html': {},
            'controllers/FilesController.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'badrequestexception("not',
        {
          _index: 1403,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        "badrequestexception('email",
        {
          _index: 386,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        "badrequestexception('id",
        {
          _index: 1817,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        "badrequestexception('khong",
        {
          _index: 1568,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        "badrequestexception('không",
        {
          _index: 887,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        "badrequestexception('m",
        {
          _index: 239,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "badrequestexception('mật",
        {
          _index: 1823,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        "badrequestexception('not",
        {
          _index: 1503,
          title: {},
          body: {
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
          },
        },
      ],
      [
        "badrequestexception('oldpassword",
        {
          _index: 1727,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        "badrequestexception('otp",
        {
          _index: 417,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        "badrequestexception('subscriber",
        {
          _index: 1642,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'badrequestexception(`email',
        {
          _index: 1632,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'badrequestexception(`not',
        {
          _index: 533,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
          },
        },
      ],
      [
        'badrequestexception(`permission',
        {
          _index: 1388,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        'badrequestexception(`role',
        {
          _index: 1562,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'based',
        {
          _index: 1069,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {}, 'index.html': {} },
        },
      ],
      [
        'basename',
        {
          _index: 1286,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'bcrypt',
        {
          _index: 310,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'bcrypt.compare(oldpassword',
        {
          _index: 1822,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'bcrypt.hash(newpassword',
        {
          _index: 421,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'bcryptjs',
        {
          _index: 311,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UsersService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'bearer',
        {
          _index: 1072,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'biệt',
        {
          _index: 1238,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'body',
        {
          _index: 178,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/CompaniesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        "body('status",
        {
          _index: 1470,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        'boolean',
        {
          _index: 560,
          title: {},
          body: {
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/Job.html': {},
            'classes/Permission.html': {},
            'classes/Resume.html': {},
            'classes/Role.html': {},
            'classes/Subscriber.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'boolean(isinit',
        {
          _index: 752,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'bootstrap',
        {
          _index: 41,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CompaniesModule.html': {},
            'modules/DatabasesModule.html': {},
            'modules/FilesModule.html': {},
            'modules/JobsModule.html': {},
            'modules/MailModule.html': {},
            'modules/PermissionsModule.html': {},
            'modules/ResumesModule.html': {},
            'modules/RolesModule.html': {},
            'modules/SubscribersModule.html': {},
            'modules/UsersModule.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
            'overview.html': {},
          },
        },
      ],
      ['browse', { _index: 1979, title: {}, body: { 'modules.html': {} } }],
      ['browser', { _index: 1977, title: {}, body: { 'modules.html': {} } }],
      ['build', { _index: 1943, title: {}, body: { 'index.html': {} } }],
      ['built', { _index: 1901, title: {}, body: { 'index.html': {} } }],
      [
        'buộc',
        {
          _index: 1673,
          title: {},
          body: {
            'classes/UpdateUserDto.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'báo',
        {
          _index: 811,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'classes/MulterExceptionFilter.html': {},
          },
        },
      ],
      [
        'bạn',
        {
          _index: 410,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/MailService.html': {},
          },
        },
      ],
      [
        'bảo',
        {
          _index: 1224,
          title: {},
          body: {
            'injectables/MulterConfigService.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'bất',
        {
          _index: 805,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'bắt',
        {
          _index: 1672,
          title: {},
          body: {
            'classes/UpdateUserDto.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'c',
        {
          _index: 340,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/FilesController.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UserLoginDto.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'callhandler',
        {
          _index: 1414,
          title: {},
          body: {
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
          },
        },
      ],
      [
        'canactivate',
        {
          _index: 1042,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'canactivate(context',
        {
          _index: 1047,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'cap',
        {
          _index: 1088,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'catch',
        {
          _index: 378,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/FilesController.html': {},
            'classes/MulterExceptionFilter.html': {},
          },
        },
      ],
      [
        'catch(error',
        {
          _index: 1313,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        'cb',
        {
          _index: 1274,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'cb(null',
        {
          _index: 1282,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      ['cd', { _index: 1928, title: {}, body: { 'index.html': {} } }],
      [
        'ch',
        {
          _index: 1026,
          title: {},
          body: {
            'injectables/JobsService.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/ResumesService.html': {},
            'classes/UpdateUserDto.html': {},
          },
        },
      ],
      [
        'changepassword',
        {
          _index: 1706,
          title: {},
          body: {
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'changepassword(@user',
        {
          _index: 1725,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'changepassword(user',
        {
          _index: 1707,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'changepassword(userid',
        {
          _index: 1756,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'check',
        {
          _index: 1074,
          title: {},
          body: {
            'injectables/JwtAuthGuard.html': {},
            'injectables/UsersService.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'cho',
        {
          _index: 1219,
          title: {},
          body: {
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
          },
        },
      ],
      [
        'chuyển',
        {
          _index: 1732,
          title: {},
          body: {
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'chuẩn',
        {
          _index: 1327,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        'chưa',
        {
          _index: 1226,
          title: {},
          body: {
            'injectables/MulterConfigService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'chối',
        {
          _index: 1297,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'chứa',
        {
          _index: 1318,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        'class',
        {
          _index: 29,
          title: {
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateFileDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/File.html': {},
            'classes/History.html': {},
            'classes/Job.html': {},
            'classes/MulterExceptionFilter.html': {},
            'classes/Permission.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/Resume.html': {},
            'classes/Role.html': {},
            'classes/Subscriber.html': {},
            'classes/UpdateCompanyDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateJobDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateSubscriberDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
          },
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'modules/CompaniesModule.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateFileDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/DatabasesController.html': {},
            'modules/DatabasesModule.html': {},
            'injectables/DatabasesService.html': {},
            'classes/File.html': {},
            'controllers/FilesController.html': {},
            'modules/FilesModule.html': {},
            'injectables/FilesService.html': {},
            'classes/History.html': {},
            'classes/Job.html': {},
            'controllers/JobsController.html': {},
            'modules/JobsModule.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'classes/Permission.html': {},
            'controllers/PermissionsController.html': {},
            'modules/PermissionsModule.html': {},
            'injectables/PermissionsService.html': {},
            'classes/RegisterUserDto.html': {},
            'interfaces/Response.html': {},
            'classes/Resume.html': {},
            'controllers/ResumesController.html': {},
            'modules/ResumesModule.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'controllers/RolesController.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'controllers/SubscribersController.html': {},
            'modules/SubscribersModule.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'classes/UpdateCompanyDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateJobDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateSubscriberDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'classes',
        {
          _index: 541,
          title: {},
          body: {
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateFileDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/File.html': {},
            'classes/History.html': {},
            'classes/Job.html': {},
            'classes/MulterExceptionFilter.html': {},
            'classes/Permission.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/Resume.html': {},
            'classes/Role.html': {},
            'classes/Subscriber.html': {},
            'classes/UpdateCompanyDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateJobDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateSubscriberDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'overview.html': {},
          },
        },
      ],
      ['cli', { _index: 1878, title: {}, body: { 'dependencies.html': {} } }],
      ['clone', { _index: 1924, title: {}, body: { 'index.html': {} } }],
      [
        'cluster_appmodule',
        {
          _index: 44,
          title: {},
          body: { 'modules/AppModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_appmodule_imports',
        {
          _index: 46,
          title: {},
          body: { 'modules/AppModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_appmodule_providers',
        {
          _index: 45,
          title: {},
          body: { 'modules/AppModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_authmodule',
        {
          _index: 252,
          title: {},
          body: { 'modules/AuthModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_authmodule_exports',
        {
          _index: 255,
          title: {},
          body: { 'modules/AuthModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_authmodule_imports',
        { _index: 254, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'cluster_authmodule_providers',
        {
          _index: 253,
          title: {},
          body: { 'modules/AuthModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_companiesmodule',
        {
          _index: 475,
          title: {},
          body: { 'modules/CompaniesModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_companiesmodule_providers',
        {
          _index: 476,
          title: {},
          body: { 'modules/CompaniesModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_databasesmodule',
        {
          _index: 716,
          title: {},
          body: { 'modules/DatabasesModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_databasesmodule_providers',
        {
          _index: 717,
          title: {},
          body: { 'modules/DatabasesModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_filesmodule',
        {
          _index: 905,
          title: {},
          body: { 'modules/FilesModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_filesmodule_providers',
        {
          _index: 906,
          title: {},
          body: { 'modules/FilesModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_jobsmodule',
        {
          _index: 1001,
          title: {},
          body: { 'modules/JobsModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_jobsmodule_providers',
        {
          _index: 1002,
          title: {},
          body: { 'modules/JobsModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_mailmodule',
        {
          _index: 1169,
          title: {},
          body: { 'modules/MailModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_mailmodule_exports',
        {
          _index: 1171,
          title: {},
          body: { 'modules/MailModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_mailmodule_providers',
        {
          _index: 1170,
          title: {},
          body: { 'modules/MailModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_permissionsmodule',
        {
          _index: 1373,
          title: {},
          body: { 'modules/PermissionsModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_permissionsmodule_providers',
        {
          _index: 1374,
          title: {},
          body: { 'modules/PermissionsModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_resumesmodule',
        {
          _index: 1473,
          title: {},
          body: { 'modules/ResumesModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_resumesmodule_providers',
        {
          _index: 1474,
          title: {},
          body: { 'modules/ResumesModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_rolesmodule',
        {
          _index: 1539,
          title: {},
          body: { 'modules/RolesModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_rolesmodule_exports',
        {
          _index: 1541,
          title: {},
          body: { 'modules/RolesModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_rolesmodule_providers',
        {
          _index: 1540,
          title: {},
          body: { 'modules/RolesModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_subscribersmodule',
        {
          _index: 1615,
          title: {},
          body: { 'modules/SubscribersModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_subscribersmodule_providers',
        {
          _index: 1616,
          title: {},
          body: { 'modules/SubscribersModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_usersmodule',
        {
          _index: 1741,
          title: {},
          body: { 'modules/UsersModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_usersmodule_exports',
        {
          _index: 1743,
          title: {},
          body: { 'modules/UsersModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_usersmodule_providers',
        { _index: 1742, title: {}, body: { 'modules/UsersModule.html': {} } },
      ],
      [
        'co',
        {
          _index: 590,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/History.html': {},
            'injectables/JwtAuthGuard.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/UserLoginDto.html': {},
          },
        },
      ],
      [
        'code',
        { _index: 117, title: {}, body: { 'injectables/AppService.html': {} } },
      ],
      [
        'comfirm',
        {
          _index: 1166,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'companies',
        {
          _index: 425,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'companies.controller',
        {
          _index: 478,
          title: {},
          body: { 'modules/CompaniesModule.html': {} },
        },
      ],
      [
        'companies.service',
        {
          _index: 455,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'modules/CompaniesModule.html': {},
          },
        },
      ],
      [
        'companies/companies.module',
        { _index: 75, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'companiescontroller',
        {
          _index: 423,
          title: { 'controllers/CompaniesController.html': {} },
          body: {
            'controllers/CompaniesController.html': {},
            'modules/CompaniesModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'companiesmodule',
        {
          _index: 48,
          title: { 'modules/CompaniesModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/CompaniesModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'companiesservice',
        {
          _index: 454,
          title: { 'injectables/CompaniesService.html': {} },
          body: {
            'controllers/CompaniesController.html': {},
            'modules/CompaniesModule.html': {},
            'injectables/CompaniesService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'company',
        {
          _index: 337,
          title: {
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
          },
          body: {
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'modules/CompaniesModule.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateUserDto.html': {},
            'interfaces/IUser.html': {},
            'classes/Job.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/MailController.html': {},
            'classes/Permission.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/Resume.html': {},
            'classes/Role.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'company.dto',
        {
          _index: 457,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'classes/UpdateCompanyDto.html': {},
          },
        },
      ],
      [
        'company.dto.ts',
        {
          _index: 625,
          title: {},
          body: {
            'classes/CreateCompanyDto.html': {},
            'classes/UpdateCompanyDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'company.dto.ts:10',
        {
          _index: 629,
          title: {},
          body: { 'classes/CreateCompanyDto.html': {} },
        },
      ],
      [
        'company.dto.ts:13',
        {
          _index: 630,
          title: {},
          body: { 'classes/CreateCompanyDto.html': {} },
        },
      ],
      [
        'company.dto.ts:4',
        {
          _index: 631,
          title: {},
          body: { 'classes/CreateCompanyDto.html': {} },
        },
      ],
      [
        'company.dto.ts:7',
        {
          _index: 627,
          title: {},
          body: { 'classes/CreateCompanyDto.html': {} },
        },
      ],
      [
        'company.name',
        {
          _index: 482,
          title: {},
          body: {
            'modules/CompaniesModule.html': {},
            'classes/Resume.html': {},
          },
        },
      ],
      [
        'companydocument',
        {
          _index: 495,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'companyid',
        {
          _index: 664,
          title: {},
          body: {
            'classes/CreateResumeDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/Resume.html': {},
            'injectables/ResumesService.html': {},
          },
        },
      ],
      [
        'companymodel',
        {
          _index: 488,
          title: {},
          body: { 'injectables/CompaniesService.html': {} },
        },
      ],
      [
        'companyschema',
        {
          _index: 479,
          title: {},
          body: {
            'modules/CompaniesModule.html': {},
            'classes/Company.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'comparesync',
        {
          _index: 1782,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'comparesync(password',
        {
          _index: 1801,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      ['compass', { _index: 1923, title: {}, body: { 'index.html': {} } }],
      [
        'configmodule',
        {
          _index: 66,
          title: {},
          body: { 'modules/AppModule.html': {}, 'modules/AuthModule.html': {} },
        },
      ],
      [
        'configmodule.forroot',
        { _index: 103, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'configservice',
        {
          _index: 15,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'injectables/DatabasesService.html': {},
            'injectables/JwtStrategy.html': {},
            'modules/MailModule.html': {},
          },
        },
      ],
      [
        "configservice.get('email_auth_pass",
        { _index: 1187, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      [
        "configservice.get('email_auth_user",
        { _index: 1186, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      [
        "configservice.get('email_host",
        { _index: 1184, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      [
        "configservice.get('email_preview",
        { _index: 1194, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      [
        "configservice.get('jwt_access_token_secret",
        {
          _index: 271,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'injectables/JwtStrategy.html': {},
          },
        },
      ],
      [
        "configservice.get('mongo_url",
        { _index: 98, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'configuration',
        { _index: 1933, title: {}, body: { 'index.html': {} } },
      ],
      [
        'connection',
        { _index: 74, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'connection.plugin(softdeleteplugin',
        { _index: 100, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'connectionfactory',
        { _index: 99, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'console.log',
        {
          _index: 785,
          title: {},
          body: {
            'injectables/DatabasesService.html': {},
            'injectables/MulterConfigService.html': {},
          },
        },
      ],
      [
        "console.log('>>>call",
        {
          _index: 1140,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'const',
        {
          _index: 217,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'injectables/DatabasesService.html': {},
            'controllers/FilesController.html': {},
            'classes/Job.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/MailController.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'classes/Permission.html': {},
            'injectables/PermissionsService.html': {},
            'classes/Resume.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'injectables/SubscribersService.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'constructor',
        {
          _index: 30,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/DatabasesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/MailController.html': {},
            'injectables/MailService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'constructor(authservice',
        {
          _index: 1110,
          title: {},
          body: { 'injectables/LocalStrategy.html': {} },
        },
      ],
      [
        'constructor(companymodel',
        {
          _index: 485,
          title: {},
          body: { 'injectables/CompaniesService.html': {} },
        },
      ],
      [
        'constructor(configservice',
        {
          _index: 1092,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'constructor(jobmodel',
        {
          _index: 1008,
          title: {},
          body: { 'injectables/JobsService.html': {} },
        },
      ],
      [
        'constructor(mailerservice',
        {
          _index: 1198,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'constructor(permissionmodel',
        {
          _index: 1379,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        'constructor(private',
        {
          _index: 461,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'controllers/DatabasesController.html': {},
            'controllers/FilesController.html': {},
            'controllers/JobsController.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'injectables/MailService.html': {},
            'controllers/PermissionsController.html': {},
            'interfaces/Response.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/TransformInterceptor.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'constructor(reflector',
        {
          _index: 1044,
          title: {},
          body: {
            'injectables/JwtAuthGuard.html': {},
            'injectables/TransformInterceptor.html': {},
          },
        },
      ],
      [
        'constructor(resumemodel',
        {
          _index: 1481,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'constructor(rolemodel',
        {
          _index: 1546,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'constructor(subscribermodel',
        {
          _index: 1622,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'constructor(usermodel',
        {
          _index: 732,
          title: {},
          body: {
            'injectables/DatabasesService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'constructor(usersservice',
        {
          _index: 285,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      ['container', { _index: 1966, title: {}, body: { 'index.html': {} } }],
      [
        'context',
        {
          _index: 1050,
          title: {},
          body: {
            'injectables/JwtAuthGuard.html': {},
            'controllers/MailController.html': {},
            'injectables/MailService.html': {},
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
          },
        },
      ],
      [
        'context.getclass',
        {
          _index: 1063,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'context.gethandler',
        {
          _index: 1062,
          title: {},
          body: {
            'injectables/JwtAuthGuard.html': {},
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
          },
        },
      ],
      [
        'context.switchtohttp().getrequest',
        {
          _index: 1065,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'context.switchtohttp().getresponse().statuscode',
        {
          _index: 1424,
          title: {},
          body: {
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
          },
        },
      ],
      [
        'controller',
        {
          _index: 0,
          title: {
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'controllers/CompaniesController.html': {},
            'controllers/DatabasesController.html': {},
            'controllers/FilesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/MailController.html': {},
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
          body: {
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'controllers/CompaniesController.html': {},
            'controllers/DatabasesController.html': {},
            'controllers/FilesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/MailController.html': {},
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        "controller('auth",
        {
          _index: 200,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "controller('companies",
        {
          _index: 460,
          title: {},
          body: { 'controllers/CompaniesController.html': {} },
        },
      ],
      [
        "controller('databases",
        {
          _index: 715,
          title: {},
          body: { 'controllers/DatabasesController.html': {} },
        },
      ],
      [
        "controller('files",
        {
          _index: 847,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        "controller('jobs",
        {
          _index: 989,
          title: {},
          body: { 'controllers/JobsController.html': {} },
        },
      ],
      [
        "controller('mail",
        {
          _index: 1135,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        "controller('permissions",
        {
          _index: 1360,
          title: {},
          body: { 'controllers/PermissionsController.html': {} },
        },
      ],
      [
        "controller('resumes",
        {
          _index: 1464,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        "controller('roles",
        {
          _index: 1533,
          title: {},
          body: { 'controllers/RolesController.html': {} },
        },
      ],
      [
        "controller('subscribers",
        {
          _index: 1605,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        "controller('users",
        {
          _index: 1722,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'controllers',
        {
          _index: 2,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'controllers/CompaniesController.html': {},
            'modules/CompaniesModule.html': {},
            'controllers/DatabasesController.html': {},
            'modules/DatabasesModule.html': {},
            'controllers/FilesController.html': {},
            'modules/FilesModule.html': {},
            'controllers/JobsController.html': {},
            'modules/JobsModule.html': {},
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'controllers/PermissionsController.html': {},
            'modules/PermissionsModule.html': {},
            'controllers/ResumesController.html': {},
            'modules/ResumesModule.html': {},
            'controllers/RolesController.html': {},
            'modules/RolesModule.html': {},
            'controllers/SubscribersController.html': {},
            'modules/SubscribersModule.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'cookie',
        {
          _index: 1872,
          title: {},
          body: { 'dependencies.html': {}, 'index.html': {} },
        },
      ],
      [
        'cookies',
        {
          _index: 352,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      ['core', { _index: 1880, title: {}, body: { 'dependencies.html': {} } }],
      [
        'countpermission',
        {
          _index: 755,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'countrole',
        {
          _index: 757,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'countuser',
        {
          _index: 753,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'coverage',
        {
          _index: 1824,
          title: { 'coverage.html': {} },
          body: { 'coverage.html': {}, 'index.html': {} },
        },
      ],
      [
        'create',
        {
          _index: 426,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/DatabasesService.html': {},
            'injectables/FilesService.html': {},
            'classes/History.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'classes/UpdateCompanyDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateJobDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateSubscriberDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'create(@body',
        {
          _index: 462,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'create(createcompanydto',
        {
          _index: 430,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
          },
        },
      ],
      [
        'create(createfiledto',
        {
          _index: 915,
          title: {},
          body: { 'injectables/FilesService.html': {} },
        },
      ],
      [
        'create(createjobdto',
        {
          _index: 970,
          title: {},
          body: {
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
          },
        },
      ],
      [
        'create(createpermissiondto',
        {
          _index: 1346,
          title: {},
          body: {
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
          },
        },
      ],
      [
        'create(createresumedto',
        {
          _index: 1451,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        'create(createroledto',
        {
          _index: 1523,
          title: {},
          body: {
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
          },
        },
      ],
      [
        'create(createsubscriberdto',
        {
          _index: 1586,
          title: {},
          body: {
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
          },
        },
      ],
      [
        'create(createusercvdto',
        {
          _index: 1484,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'create(createuserdto',
        {
          _index: 1758,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'create(userdata',
        {
          _index: 1710,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'createat',
        {
          _index: 544,
          title: {},
          body: {
            'classes/Company.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/RolesService.html': {},
          },
        },
      ],
      [
        'createby',
        {
          _index: 1638,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'createcompanydto',
        {
          _index: 431,
          title: { 'classes/CreateCompanyDto.html': {} },
          body: {
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/UpdateCompanyDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['created', { _index: 1960, title: {}, body: { 'index.html': {} } }],
      [
        'createdat',
        {
          _index: 363,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/Job.html': {},
            'classes/Permission.html': {},
            'classes/Resume.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'classes/Subscriber.html': {},
            'classes/User.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'createdby',
        {
          _index: 504,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'classes/Job.html': {},
            'injectables/JobsService.html': {},
            'classes/Permission.html': {},
            'injectables/PermissionsService.html': {},
            'classes/Resume.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'injectables/SubscribersService.html': {},
            'classes/User.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'createfiledto',
        {
          _index: 632,
          title: { 'classes/CreateFileDto.html': {} },
          body: {
            'classes/CreateFileDto.html': {},
            'injectables/FilesService.html': {},
            'classes/UpdateFileDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createjobdto',
        {
          _index: 587,
          title: { 'classes/CreateJobDto.html': {} },
          body: {
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'classes/UpdateJobDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createmulteroptions',
        {
          _index: 1211,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'createparamdecorator',
        {
          _index: 2017,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'createpermissiondto',
        {
          _index: 652,
          title: { 'classes/CreatePermissionDto.html': {} },
          body: {
            'classes/CreatePermissionDto.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'classes/UpdatePermissionDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createrefreshtoken',
        {
          _index: 278,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'createresumedto',
        {
          _index: 661,
          title: { 'classes/CreateResumeDto.html': {} },
          body: {
            'classes/CreateResumeDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/History.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createroledto',
        {
          _index: 676,
          title: { 'classes/CreateRoleDto.html': {} },
          body: {
            'classes/CreateRoleDto.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'classes/UpdateRoleDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createsubscriberdto',
        {
          _index: 688,
          title: { 'classes/CreateSubscriberDto.html': {} },
          body: {
            'classes/CreateSubscriberDto.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'classes/UpdateSubscriberDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createusercvdto',
        {
          _index: 675,
          title: { 'classes/CreateUserCvDto.html': {} },
          body: {
            'classes/CreateResumeDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createuserdto',
        {
          _index: 614,
          title: { 'classes/CreateUserDto.html': {} },
          body: {
            'classes/Company-2.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/JobsController.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'cron',
        {
          _index: 1132,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        "cron('0",
        {
          _index: 1142,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'cron(cronexpression.every_30_seconds',
        {
          _index: 1138,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'cronexpression',
        {
          _index: 1133,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'ctx',
        {
          _index: 1320,
          title: {},
          body: {
            'classes/MulterExceptionFilter.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'ctx.getresponse',
        {
          _index: 1322,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        'ctx.switchtohttp().getrequest',
        {
          _index: 2018,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'current',
        {
          _index: 528,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'currentpage',
        {
          _index: 439,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'các',
        {
          _index: 815,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'cái',
        {
          _index: 1265,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'công',
        {
          _index: 251,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/JobsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'cấu',
        {
          _index: 1216,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'cần',
        {
          _index: 809,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'injectables/MulterConfigService.html': {},
          },
        },
      ],
      [
        'cập',
        {
          _index: 418,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'của',
        {
          _index: 409,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/JobsService.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/ResumesService.html': {},
          },
        },
      ],
      [
        'd',
        {
          _index: 1233,
          title: {},
          body: {
            'injectables/MulterConfigService.html': {},
            'injectables/UsersService.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'd:/mongodb_data:/data/db',
        { _index: 1969, title: {}, body: { 'index.html': {} } },
      ],
      [
        'da',
        {
          _index: 1392,
          title: {},
          body: {
            'injectables/PermissionsService.html': {},
            'injectables/RolesService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'dang',
        {
          _index: 592,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/History.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/UserLoginDto.html': {},
          },
        },
      ],
      [
        "dang'})@isnotempty({message",
        {
          _index: 692,
          title: {},
          body: { 'classes/CreateSubscriberDto.html': {} },
        },
      ],
      [
        'danh',
        {
          _index: 813,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'data',
        {
          _index: 788,
          title: {},
          body: {
            'injectables/DatabasesService.html': {},
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'database',
        {
          _index: 398,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'index.html': {} },
        },
      ],
      [
        'databases',
        {
          _index: 712,
          title: {},
          body: { 'controllers/DatabasesController.html': {} },
        },
      ],
      [
        'databases.controller',
        {
          _index: 719,
          title: {},
          body: { 'modules/DatabasesModule.html': {} },
        },
      ],
      [
        'databases.service',
        {
          _index: 714,
          title: {},
          body: {
            'controllers/DatabasesController.html': {},
            'modules/DatabasesModule.html': {},
          },
        },
      ],
      [
        'databases/databases.module',
        { _index: 81, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'databasescontroller',
        {
          _index: 710,
          title: { 'controllers/DatabasesController.html': {} },
          body: {
            'controllers/DatabasesController.html': {},
            'modules/DatabasesModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'databasesmodule',
        {
          _index: 49,
          title: { 'modules/DatabasesModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/DatabasesModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'databasesservice',
        {
          _index: 713,
          title: { 'injectables/DatabasesService.html': {} },
          body: {
            'controllers/DatabasesController.html': {},
            'modules/DatabasesModule.html': {},
            'injectables/DatabasesService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'date',
        {
          _index: 416,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
            'classes/History.html': {},
            'classes/Job.html': {},
            'classes/Permission.html': {},
            'classes/Resume.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'classes/Subscriber.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'date(date.now',
        {
          _index: 405,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'date(value',
        {
          _index: 605,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
          },
        },
      ],
      [
        'date.now()}${fileext',
        {
          _index: 1290,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      ['db', { _index: 1971, title: {}, body: { 'index.html': {} } }],
      [
        'de',
        {
          _index: 603,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/History.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
          },
        },
      ],
      [
        'declarations',
        {
          _index: 40,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CompaniesModule.html': {},
            'modules/DatabasesModule.html': {},
            'modules/FilesModule.html': {},
            'modules/JobsModule.html': {},
            'modules/MailModule.html': {},
            'modules/PermissionsModule.html': {},
            'modules/ResumesModule.html': {},
            'modules/RolesModule.html': {},
            'modules/SubscribersModule.html': {},
            'modules/UsersModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'decorator/customize',
        {
          _index: 27,
          title: {},
          body: { 'controllers/AppController.html': {} },
        },
      ],
      [
        'decorators',
        {
          _index: 132,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/CompaniesController.html': {},
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/FilesController.html': {},
            'classes/History.html': {},
            'classes/Job.html': {},
            'controllers/JobsController.html': {},
            'controllers/MailController.html': {},
            'classes/Permission.html': {},
            'controllers/PermissionsController.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/Resume.html': {},
            'controllers/ResumesController.html': {},
            'classes/Role.html': {},
            'controllers/RolesController.html': {},
            'classes/Subscriber.html': {},
            'controllers/SubscribersController.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'decription',
        {
          _index: 600,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
          },
        },
      ],
      [
        'default',
        {
          _index: 203,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/UsersService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'defaultlimit',
        {
          _index: 514,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'defined',
        {
          _index: 112,
          title: {},
          body: {
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DatabasesService.html': {},
            'controllers/FilesController.html': {},
            'injectables/FilesService.html': {},
            'classes/History.html': {},
            'classes/Job.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/MailController.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'classes/Permission.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/Resume.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'delete',
        {
          _index: 71,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/DatabasesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'controllers/MailController.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        "delete(':id",
        {
          _index: 445,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        "delete(':id')@responsemessage('delete",
        {
          _index: 980,
          title: {},
          body: {
            'controllers/JobsController.html': {},
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'deleteat',
        {
          _index: 545,
          title: {},
          body: {
            'classes/Company.html': {},
            'classes/Job.html': {},
            'classes/Permission.html': {},
            'classes/Resume.html': {},
            'classes/Role.html': {},
            'classes/Subscriber.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'deletedby',
        {
          _index: 539,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'classes/Job.html': {},
            'injectables/JobsService.html': {},
            'classes/Permission.html': {},
            'injectables/PermissionsService.html': {},
            'classes/Resume.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'injectables/SubscribersService.html': {},
            'classes/User.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'dependencies',
        {
          _index: 38,
          title: { 'dependencies.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CompaniesModule.html': {},
            'modules/DatabasesModule.html': {},
            'modules/FilesModule.html': {},
            'modules/JobsModule.html': {},
            'modules/MailModule.html': {},
            'modules/PermissionsModule.html': {},
            'modules/ResumesModule.html': {},
            'modules/RolesModule.html': {},
            'modules/SubscribersModule.html': {},
            'modules/UsersModule.html': {},
            'dependencies.html': {},
            'index.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'desciption',
        {
          _index: 628,
          title: {},
          body: { 'classes/CreateCompanyDto.html': {} },
        },
      ],
      [
        'description',
        {
          _index: 546,
          title: {},
          body: {
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DatabasesService.html': {},
            'controllers/FilesController.html': {},
            'classes/Job.html': {},
            'injectables/JobsService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/Role.html': {},
            'injectables/RolesService.html': {},
            'classes/UserLoginDto.html': {},
            'properties.html': {},
          },
        },
      ],
      [
        'destination',
        {
          _index: 1273,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      ['development', { _index: 1940, title: {}, body: { 'index.html': {} } }],
      [
        'digits',
        {
          _index: 391,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'dinh',
        {
          _index: 591,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/History.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/UserLoginDto.html': {},
          },
        },
      ],
      [
        'dir',
        { _index: 1188, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      ['directory', { _index: 1935, title: {}, body: { 'index.html': {} } }],
      [
        'diskstorage',
        {
          _index: 1247,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'doc',
        {
          _index: 2004,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      ['docker', { _index: 1965, title: {}, body: { 'index.html': {} } }],
      [
        'documentation',
        {
          _index: 1825,
          title: {},
          body: { 'coverage.html': {}, 'index.html': {} },
        },
      ],
      [
        'docx',
        {
          _index: 2007,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'dong',
        {
          _index: 781,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'dongdong@gmail.com',
        {
          _index: 782,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'dto/create',
        {
          _index: 456,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/FilesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'dto/update',
        {
          _index: 458,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/FilesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'dung',
        {
          _index: 691,
          title: {},
          body: {
            'classes/CreateSubscriberDto.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'duoc',
        {
          _index: 602,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/History.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
          },
        },
      ],
      [
        'dùng',
        {
          _index: 1731,
          title: {},
          body: {
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'dưới',
        {
          _index: 1269,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'dạng',
        {
          _index: 617,
          title: {},
          body: {
            'classes/Company-2.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/FilesController.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        "dạng'})@isnotempty({message",
        {
          _index: 703,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/RegisterUserDto.html': {},
          },
        },
      ],
      [
        'dấu',
        {
          _index: 1266,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'dẫn',
        {
          _index: 1228,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'dựa',
        {
          _index: 1271,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      ['e', { _index: 1973, title: {}, body: { 'index.html': {} } }],
      ['e2e', { _index: 1957, title: {}, body: { 'index.html': {} } }],
      [
        'each',
        {
          _index: 594,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
          },
        },
      ],
      [
        'email',
        {
          _index: 142,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'classes/Company-2.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DatabasesService.html': {},
            'classes/History.html': {},
            'interfaces/IUser.html': {},
            'classes/Job.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/MailController.html': {},
            'injectables/MailService.html': {},
            'classes/Permission.html': {},
            'injectables/PermissionsService.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/Resume.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'injectables/SubscribersService.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'injectables/UsersService.html': {},
            'index.html': {},
          },
        },
      ],
      [
        "email')@cron('0",
        {
          _index: 1121,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'enddate',
        {
          _index: 606,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
            'classes/Job.html': {},
            'injectables/JobsService.html': {},
          },
        },
      ],
      [
        'endpoint',
        {
          _index: 1089,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'ensureexists',
        {
          _index: 1212,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'ensureexists(targetdirectory',
        {
          _index: 1222,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'entity',
        {
          _index: 1311,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      ['env', { _index: 1934, title: {}, body: { 'index.html': {} } }],
      ['environment', { _index: 1932, title: {}, body: { 'index.html': {} } }],
      [
        'err',
        {
          _index: 1053,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'error',
        {
          _index: 379,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/FilesController.html': {},
            'classes/MulterExceptionFilter.html': {},
          },
        },
      ],
      [
        'error.message',
        {
          _index: 1326,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        'example',
        {
          _index: 621,
          title: {},
          body: {
            'classes/Company-2.html': {},
            'classes/CreateUserDto.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UserLoginDto.html': {},
          },
        },
      ],
      [
        'exception',
        {
          _index: 1068,
          title: {},
          body: {
            'injectables/JwtAuthGuard.html': {},
            'classes/MulterExceptionFilter.html': {},
          },
        },
      ],
      [
        'exceptionfilter',
        {
          _index: 1312,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        'exclude',
        {
          _index: 1800,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'exec',
        {
          _index: 526,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'executioncontext',
        {
          _index: 1048,
          title: {},
          body: {
            'injectables/JwtAuthGuard.html': {},
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'existssync',
        {
          _index: 1248,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'existssync(absolutepath',
        {
          _index: 1255,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'expiresin',
        {
          _index: 273,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
          },
        },
      ],
      [
        'export',
        {
          _index: 28,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'modules/CompaniesModule.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateFileDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/DatabasesController.html': {},
            'modules/DatabasesModule.html': {},
            'injectables/DatabasesService.html': {},
            'classes/File.html': {},
            'controllers/FilesController.html': {},
            'modules/FilesModule.html': {},
            'injectables/FilesService.html': {},
            'classes/History.html': {},
            'interfaces/IUser.html': {},
            'classes/Job.html': {},
            'controllers/JobsController.html': {},
            'modules/JobsModule.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'classes/Permission.html': {},
            'controllers/PermissionsController.html': {},
            'modules/PermissionsModule.html': {},
            'injectables/PermissionsService.html': {},
            'classes/RegisterUserDto.html': {},
            'interfaces/Response.html': {},
            'classes/Resume.html': {},
            'controllers/ResumesController.html': {},
            'modules/ResumesModule.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'controllers/RolesController.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'controllers/SubscribersController.html': {},
            'modules/SubscribersModule.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'classes/UpdateCompanyDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateJobDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateSubscriberDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'exports',
        {
          _index: 43,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CompaniesModule.html': {},
            'modules/DatabasesModule.html': {},
            'modules/FilesModule.html': {},
            'modules/JobsModule.html': {},
            'modules/MailModule.html': {},
            'modules/PermissionsModule.html': {},
            'modules/ResumesModule.html': {},
            'modules/RolesModule.html': {},
            'modules/SubscribersModule.html': {},
            'modules/UsersModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'express',
        {
          _index: 188,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'controllers/FilesController.html': {},
            'modules/FilesModule.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'express.multer.file',
        {
          _index: 797,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'extends',
        {
          _index: 938,
          title: {},
          body: {
            'classes/History.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/UpdateCompanyDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateJobDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateSubscriberDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
          },
        },
      ],
      [
        'extname',
        {
          _index: 1250,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'extname(file.originalname',
        {
          _index: 1285,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'extractjwt',
        {
          _index: 1096,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'extractjwt.fromauthheaderasbearertoken',
        {
          _index: 1101,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'failed',
        {
          _index: 882,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'false',
        {
          _index: 393,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/JwtStrategy.html': {},
            'modules/MailModule.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'female',
        {
          _index: 783,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'fetch',
        {
          _index: 370,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'field',
        {
          _index: 801,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'fieldname',
        {
          _index: 903,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'file',
        {
          _index: 5,
          title: { 'classes/File.html': {} },
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'modules/CompaniesModule.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateFileDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/DatabasesController.html': {},
            'modules/DatabasesModule.html': {},
            'injectables/DatabasesService.html': {},
            'classes/File.html': {},
            'controllers/FilesController.html': {},
            'modules/FilesModule.html': {},
            'injectables/FilesService.html': {},
            'classes/History.html': {},
            'interfaces/IUser.html': {},
            'classes/Job.html': {},
            'controllers/JobsController.html': {},
            'modules/JobsModule.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'classes/Permission.html': {},
            'controllers/PermissionsController.html': {},
            'modules/PermissionsModule.html': {},
            'injectables/PermissionsService.html': {},
            'classes/RegisterUserDto.html': {},
            'interfaces/Response.html': {},
            'classes/Resume.html': {},
            'controllers/ResumesController.html': {},
            'modules/ResumesModule.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'controllers/RolesController.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'controllers/SubscribersController.html': {},
            'modules/SubscribersModule.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'classes/UpdateCompanyDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateJobDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateSubscriberDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'index.html': {},
          },
        },
      ],
      [
        "file')@useinterceptors(undefined",
        {
          _index: 819,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'file.dto',
        {
          _index: 922,
          title: {},
          body: {
            'injectables/FilesService.html': {},
            'classes/UpdateFileDto.html': {},
          },
        },
      ],
      [
        'file.dto.ts',
        {
          _index: 634,
          title: {},
          body: {
            'classes/CreateFileDto.html': {},
            'classes/UpdateFileDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'file.fieldname',
        {
          _index: 904,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'file.filename',
        {
          _index: 872,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'file.mimetype',
        {
          _index: 876,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'injectables/MulterConfigService.html': {},
          },
        },
      ],
      [
        'file.originalname',
        {
          _index: 874,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'injectables/MulterConfigService.html': {},
          },
        },
      ],
      [
        'file.size',
        {
          _index: 867,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'file?.path',
        {
          _index: 879,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'fileext',
        {
          _index: 1284,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'filefieldsinterceptor',
        {
          _index: 839,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'filefilter',
        {
          _index: 1295,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'fileinterceptor',
        {
          _index: 840,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'filename',
        {
          _index: 871,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'injectables/MulterConfigService.html': {},
          },
        },
      ],
      [
        'filename.replace(/[^a',
        {
          _index: 1258,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'files',
        {
          _index: 792,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'injectables/FilesService.html': {},
          },
        },
      ],
      [
        "files')@useinterceptors(undefined",
        {
          _index: 824,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'files.avatar',
        {
          _index: 885,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'files.background',
        {
          _index: 886,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'files.controller',
        { _index: 908, title: {}, body: { 'modules/FilesModule.html': {} } },
      ],
      [
        'files.length',
        {
          _index: 901,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'files.map((file',
        {
          _index: 902,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'files.service',
        {
          _index: 837,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'modules/FilesModule.html': {},
          },
        },
      ],
      [
        'files/files.module',
        { _index: 77, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'filescontroller',
        {
          _index: 790,
          title: { 'controllers/FilesController.html': {} },
          body: {
            'controllers/FilesController.html': {},
            'modules/FilesModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'filesize',
        {
          _index: 1292,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'filesmodule',
        {
          _index: 50,
          title: { 'modules/FilesModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/FilesModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'filesservice',
        {
          _index: 836,
          title: { 'injectables/FilesService.html': {} },
          body: {
            'controllers/FilesController.html': {},
            'modules/FilesModule.html': {},
            'injectables/FilesService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'filetype',
        {
          _index: 877,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'filter',
        {
          _index: 506,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'filter.companyid',
        {
          _index: 1031,
          title: {},
          body: {
            'injectables/JobsService.html': {},
            'injectables/ResumesService.html': {},
          },
        },
      ],
      [
        'filter.current',
        {
          _index: 510,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'filter.pagesize',
        {
          _index: 511,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'finalname',
        {
          _index: 1289,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'find',
        {
          _index: 1501,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'find(filter',
        {
          _index: 521,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'findall',
        {
          _index: 427,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/FilesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'findall(currentpage',
        {
          _index: 433,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'findalladmin',
        {
          _index: 969,
          title: {},
          body: {
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
          },
        },
      ],
      [
        'findalladmin(currentpage',
        {
          _index: 974,
          title: {},
          body: {
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
          },
        },
      ],
      [
        'findbyemail',
        {
          _index: 1751,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'findbyemail(email',
        {
          _index: 1761,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'findbyusers',
        {
          _index: 1480,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'findbyusers(user',
        {
          _index: 1487,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'findone',
        {
          _index: 428,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/FilesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        "findone(@param('id",
        {
          _index: 469,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'findone(id',
        {
          _index: 440,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/FilesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'findonebyusername',
        {
          _index: 1752,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'findonebyusername(username',
        {
          _index: 1764,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'finduserbytoken',
        {
          _index: 1748,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'folder',
        {
          _index: 1275,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'folder_type',
        {
          _index: 1272,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'forbiddenexception',
        {
          _index: 1054,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        "forbiddenexception('ban",
        {
          _index: 1085,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'forgot',
        {
          _index: 1204,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'forgotpassword',
        {
          _index: 124,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "forgotpassword(@body('email",
        {
          _index: 232,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'forgotpassword(email',
        {
          _index: 131,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'found',
        {
          _index: 1034,
          title: {},
          body: {
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'foundrole',
        {
          _index: 1565,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'foundrole.name',
        {
          _index: 1567,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'founduser',
        {
          _index: 1736,
          title: {},
          body: {
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'founduser.email',
        {
          _index: 1812,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'founnd',
        {
          _index: 534,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
          },
        },
      ],
      ['framework', { _index: 1909, title: {}, body: { 'index.html': {} } }],
      [
        'fs',
        {
          _index: 843,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'injectables/MulterConfigService.html': {},
          },
        },
      ],
      [
        'fs.existssync(file.path',
        {
          _index: 880,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'fs.unlinksync(file.path',
        {
          _index: 881,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'full',
        {
          _index: 764,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      ['function', { _index: 1850, title: {}, body: { 'coverage.html': {} } }],
      [
        'functions',
        {
          _index: 1894,
          title: { 'miscellaneous/functions.html': {} },
          body: { 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'gan',
        {
          _index: 1104,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'gender',
        {
          _index: 619,
          title: {},
          body: {
            'classes/Company-2.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DatabasesService.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['generate', { _index: 1913, title: {}, body: { 'index.html': {} } }],
      [
        'generator',
        {
          _index: 309,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'gensaltsync',
        {
          _index: 1780,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'gensaltsync(10',
        {
          _index: 1785,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        "get('/account",
        {
          _index: 215,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "get('/refresh",
        {
          _index: 224,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "get(':id",
        {
          _index: 468,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        "get(':id')@public",
        {
          _index: 441,
          title: {},
          body: { 'controllers/CompaniesController.html': {} },
        },
      ],
      [
        "get(':id')@public()@responsemessage('fetch",
        {
          _index: 978,
          title: {},
          body: { 'controllers/JobsController.html': {} },
        },
      ],
      [
        "get(':id')@responsemessage('fetch",
        {
          _index: 1350,
          title: {},
          body: {
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
          },
        },
      ],
      [
        "get('admin",
        {
          _index: 993,
          title: {},
          body: { 'controllers/JobsController.html': {} },
        },
      ],
      [
        "get('admin')@responsemessage('fetch",
        {
          _index: 975,
          title: {},
          body: { 'controllers/JobsController.html': {} },
        },
      ],
      [
        "get()@public()@responsemessage('fetch",
        {
          _index: 435,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'controllers/JobsController.html': {},
          },
        },
      ],
      [
        "get()@public()@responsemessage('test",
        {
          _index: 1120,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        "get()@responsemessage('fetch",
        {
          _index: 1348,
          title: {},
          body: {
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'gethashpassword',
        {
          _index: 1749,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'gethello',
        { _index: 111, title: {}, body: { 'injectables/AppService.html': {} } },
      ],
      [
        'getresumesbyuser',
        {
          _index: 1450,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        'getresumesbyuser(@user',
        {
          _index: 1466,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        'getresumesbyuser(user',
        {
          _index: 1455,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        'getrootpath',
        {
          _index: 1213,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'getskills',
        {
          _index: 1621,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'getskills(user',
        {
          _index: 1627,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      ['getting', { _index: 1896, title: { 'index.html': {} }, body: {} }],
      [
        'getuserskills',
        {
          _index: 1585,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        'getuserskills(@user',
        {
          _index: 1609,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        'getuserskills(user',
        {
          _index: 1590,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        'gi',
        {
          _index: 1264,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'gia',
        { _index: 681, title: {}, body: { 'classes/CreateRoleDto.html': {} } },
      ],
      [
        'gian',
        {
          _index: 401,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      ['git', { _index: 1926, title: {}, body: { 'index.html': {} } }],
      [
        'giới',
        {
          _index: 1293,
          title: {},
          body: {
            'injectables/MulterConfigService.html': {},
            'classes/UpdateUserDto.html': {},
          },
        },
      ],
      [
        'gạch',
        {
          _index: 1267,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'gốc',
        {
          _index: 1234,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'gửi',
        {
          _index: 383,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'h',
        {
          _index: 1029,
          title: {},
          body: {
            'injectables/JobsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/SubscribersService.html': {},
          },
        },
      ],
      [
        'handlebarsadapter',
        { _index: 1178, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      [
        'handlegetaccount',
        {
          _index: 125,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'handlegetaccount(@user',
        {
          _index: 216,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'handlegetaccount(user',
        {
          _index: 144,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'handlelogin',
        {
          _index: 126,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'handlelogin(@req',
        {
          _index: 207,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'handlelogin(req',
        {
          _index: 150,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'handlelogout',
        {
          _index: 127,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'handlelogout(response',
        {
          _index: 158,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'handlerefreshtoken',
        {
          _index: 128,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'handlerefreshtoken(request',
        {
          _index: 162,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'handleregister',
        {
          _index: 129,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'handleregister(@body',
        {
          _index: 212,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'handleregister(registeruserdto',
        {
          _index: 167,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'handlerequest',
        {
          _index: 1043,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'handlerequest(err',
        {
          _index: 1051,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'handletestemail',
        {
          _index: 1119,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'hash',
        {
          _index: 1767,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'hashedpassword',
        {
          _index: 1814,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'hashpassword',
        {
          _index: 1792,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'hashsync',
        {
          _index: 1781,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'hashsync(password',
        {
          _index: 1786,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'header',
        {
          _index: 1073,
          title: {},
          body: {
            'injectables/JwtAuthGuard.html': {},
            'injectables/MulterConfigService.html': {},
          },
        },
      ],
      [
        'hello',
        { _index: 118, title: {}, body: { 'injectables/AppService.html': {} } },
      ],
      [
        'helmet',
        {
          _index: 1875,
          title: {},
          body: { 'dependencies.html': {}, 'index.html': {} },
        },
      ],
      [
        'history',
        {
          _index: 927,
          title: { 'classes/History.html': {} },
          body: {
            'classes/History.html': {},
            'classes/Resume.html': {},
            'injectables/ResumesService.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'hop',
        {
          _index: 374,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
          },
        },
      ],
      [
        'host',
        {
          _index: 1183,
          title: {},
          body: {
            'modules/MailModule.html': {},
            'classes/MulterExceptionFilter.html': {},
          },
        },
      ],
      [
        'host.switchtohttp',
        {
          _index: 1321,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        'hoặc',
        {
          _index: 243,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
          },
        },
      ],
      [
        'hr',
        {
          _index: 1024,
          title: {},
          body: {
            'injectables/JobsService.html': {},
            'injectables/ResumesService.html': {},
          },
        },
      ],
      [
        'http',
        {
          _index: 1308,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        'http://localhost:3000/api',
        { _index: 1963, title: {}, body: { 'index.html': {} } },
      ],
      [
        'httponly',
        {
          _index: 354,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'https://github.com/trungnguyen592/recruitment_web_be.git',
        { _index: 1927, title: {}, body: { 'index.html': {} } },
      ],
      [
        'httpstatus',
        {
          _index: 1319,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        'httpstatus.unprocessable_entity',
        {
          _index: 1325,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        'hydrateddocument',
        {
          _index: 567,
          title: {},
          body: {
            'classes/Company.html': {},
            'classes/Job.html': {},
            'classes/Permission.html': {},
            'classes/Resume.html': {},
            'classes/Role.html': {},
            'classes/Subscriber.html': {},
            'classes/User.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'hình',
        {
          _index: 1217,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'hạn',
        {
          _index: 245,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
          },
        },
      ],
      [
        'hết',
        {
          _index: 244,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/MailService.html': {},
          },
        },
      ],
      [
        'hợp',
        {
          _index: 241,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/FilesController.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'id',
        {
          _index: 443,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company-2.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/FilesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'classes/RegisterUserDto.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        "id'})@isarray({message",
        { _index: 686, title: {}, body: { 'classes/CreateRoleDto.html': {} } },
      ],
      [
        'id=${id',
        {
          _index: 535,
          title: {},
          body: { 'injectables/CompaniesService.html': {} },
        },
      ],
      [
        'identifier',
        { _index: 1826, title: {}, body: { 'coverage.html': {} } },
      ],
      [
        'ignoreexpiration',
        {
          _index: 1102,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'image/jpeg',
        {
          _index: 2008,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'image/png',
        {
          _index: 2010,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'implements',
        {
          _index: 746,
          title: {},
          body: {
            'injectables/DatabasesService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
          },
        },
      ],
      [
        'import',
        {
          _index: 7,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'modules/CompaniesModule.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/DatabasesController.html': {},
            'modules/DatabasesModule.html': {},
            'injectables/DatabasesService.html': {},
            'controllers/FilesController.html': {},
            'modules/FilesModule.html': {},
            'injectables/FilesService.html': {},
            'classes/History.html': {},
            'classes/Job.html': {},
            'controllers/JobsController.html': {},
            'modules/JobsModule.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'classes/Permission.html': {},
            'controllers/PermissionsController.html': {},
            'modules/PermissionsModule.html': {},
            'injectables/PermissionsService.html': {},
            'classes/RegisterUserDto.html': {},
            'interfaces/Response.html': {},
            'classes/Resume.html': {},
            'controllers/ResumesController.html': {},
            'modules/ResumesModule.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'controllers/RolesController.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'controllers/SubscribersController.html': {},
            'modules/SubscribersModule.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'classes/UpdateCompanyDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateJobDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateSubscriberDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'imports',
        {
          _index: 62,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CompaniesModule.html': {},
            'modules/DatabasesModule.html': {},
            'modules/FilesModule.html': {},
            'modules/JobsModule.html': {},
            'modules/MailModule.html': {},
            'modules/PermissionsModule.html': {},
            'modules/ResumesModule.html': {},
            'modules/RolesModule.html': {},
            'modules/SubscribersModule.html': {},
            'modules/UsersModule.html': {},
          },
        },
      ],
      [
        'index',
        {
          _index: 109,
          title: { 'index.html': {} },
          body: {
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DatabasesService.html': {},
            'controllers/FilesController.html': {},
            'injectables/FilesService.html': {},
            'classes/History.html': {},
            'interfaces/IUser.html': {},
            'classes/Job.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/MailController.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'classes/Permission.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'classes/RegisterUserDto.html': {},
            'interfaces/Response.html': {},
            'classes/Resume.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'info',
        {
          _index: 3,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'modules/CompaniesModule.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateFileDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/DatabasesController.html': {},
            'modules/DatabasesModule.html': {},
            'injectables/DatabasesService.html': {},
            'classes/File.html': {},
            'controllers/FilesController.html': {},
            'modules/FilesModule.html': {},
            'injectables/FilesService.html': {},
            'classes/History.html': {},
            'interfaces/IUser.html': {},
            'classes/Job.html': {},
            'controllers/JobsController.html': {},
            'modules/JobsModule.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'classes/Permission.html': {},
            'controllers/PermissionsController.html': {},
            'modules/PermissionsModule.html': {},
            'injectables/PermissionsService.html': {},
            'classes/RegisterUserDto.html': {},
            'interfaces/Response.html': {},
            'classes/Resume.html': {},
            'controllers/ResumesController.html': {},
            'modules/ResumesModule.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'controllers/RolesController.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'controllers/SubscribersController.html': {},
            'modules/SubscribersModule.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'classes/UpdateCompanyDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateJobDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateSubscriberDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'information',
        {
          _index: 214,
          title: {},
          body: { 'controllers/AuthController.html': {}, 'index.html': {} },
        },
      ],
      [
        "information')@get('/account",
        {
          _index: 148,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'init',
        {
          _index: 787,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'init_permissions',
        {
          _index: 743,
          title: {},
          body: {
            'injectables/DatabasesService.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'inject',
        {
          _index: 102,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/MailModule.html': {},
          },
        },
      ],
      [
        'injectable',
        {
          _index: 106,
          title: {
            'injectables/AppService.html': {},
            'injectables/AuthService.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/DatabasesService.html': {},
            'injectables/FilesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'injectables/UsersService.html': {},
          },
          body: {
            'injectables/AppService.html': {},
            'injectables/AuthService.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/DatabasesService.html': {},
            'injectables/FilesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/PermissionsService.html': {},
            'interfaces/Response.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'injectables',
        {
          _index: 107,
          title: {},
          body: {
            'injectables/AppService.html': {},
            'injectables/AuthService.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/DatabasesService.html': {},
            'injectables/FilesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'injectables/UsersService.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'injectmodel',
        {
          _index: 496,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/DatabasesService.html': {},
            'injectables/JobsService.html': {},
            'controllers/MailController.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'injectmodel(company.name',
        {
          _index: 502,
          title: {},
          body: { 'injectables/CompaniesService.html': {} },
        },
      ],
      [
        'injectmodel(job.name',
        {
          _index: 1018,
          title: {},
          body: {
            'injectables/JobsService.html': {},
            'controllers/MailController.html': {},
          },
        },
      ],
      [
        'injectmodel(permission.name',
        {
          _index: 748,
          title: {},
          body: {
            'injectables/DatabasesService.html': {},
            'injectables/PermissionsService.html': {},
          },
        },
      ],
      [
        'injectmodel(resume.name',
        {
          _index: 1492,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'injectmodel(role.name',
        {
          _index: 749,
          title: {},
          body: {
            'injectables/DatabasesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'injectmodel(subscriber.name',
        {
          _index: 1136,
          title: {},
          body: {
            'controllers/MailController.html': {},
            'injectables/SubscribersService.html': {},
          },
        },
      ],
      [
        'injectmodel(user.name',
        {
          _index: 747,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'injectmodel(userm.name',
        {
          _index: 1783,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      ['install', { _index: 1930, title: {}, body: { 'index.html': {} } }],
      ['installation', { _index: 1919, title: {}, body: { 'index.html': {} } }],
      ['integration', { _index: 1906, title: {}, body: { 'index.html': {} } }],
      [
        'intercept',
        {
          _index: 1420,
          title: {},
          body: {
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
          },
        },
      ],
      [
        'intercept(context',
        {
          _index: 1647,
          title: {},
          body: { 'injectables/TransformInterceptor.html': {} },
        },
      ],
      [
        'interface',
        {
          _index: 940,
          title: {
            'interfaces/IUser.html': {},
            'interfaces/Response.html': {},
          },
          body: {
            'interfaces/IUser.html': {},
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'interfaces',
        {
          _index: 941,
          title: {},
          body: {
            'interfaces/IUser.html': {},
            'interfaces/Response.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'invalid',
        {
          _index: 858,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'is_public_key',
        {
          _index: 1057,
          title: {},
          body: {
            'injectables/JwtAuthGuard.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'is_public_permission',
        {
          _index: 1058,
          title: {},
          body: {
            'injectables/JwtAuthGuard.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'isactive',
        {
          _index: 607,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateRoleDto.html': {},
            'injectables/DatabasesService.html': {},
            'classes/Job.html': {},
            'injectables/JobsService.html': {},
            'classes/Role.html': {},
            'injectables/RolesService.html': {},
          },
        },
      ],
      [
        'isarray',
        {
          _index: 580,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/History.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
          },
        },
      ],
      [
        'isboolean',
        {
          _index: 581,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
          },
        },
      ],
      ['isc', { _index: 1986, title: {}, body: { 'properties.html': {} } }],
      [
        'isdate',
        {
          _index: 582,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
          },
        },
      ],
      [
        'isdate({message',
        { _index: 639, title: {}, body: { 'classes/CreateJobDto.html': {} } },
      ],
      [
        'isdeleted',
        {
          _index: 547,
          title: {},
          body: {
            'classes/Company.html': {},
            'classes/Job.html': {},
            'classes/Permission.html': {},
            'classes/Resume.html': {},
            'classes/Role.html': {},
            'classes/Subscriber.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'isemail',
        {
          _index: 612,
          title: {},
          body: {
            'classes/Company-2.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/History.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/UserLoginDto.html': {},
          },
        },
      ],
      [
        'isempty',
        {
          _index: 500,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/ResumesService.html': {},
          },
        },
      ],
      [
        'isexist',
        {
          _index: 1080,
          title: {},
          body: {
            'injectables/JwtAuthGuard.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'isglobal',
        { _index: 104, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'isinit',
        {
          _index: 750,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'ismatch',
        {
          _index: 1821,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'ismongoid',
        {
          _index: 613,
          title: {},
          body: {
            'classes/Company-2.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UserLoginDto.html': {},
          },
        },
      ],
      [
        'isnotempty',
        {
          _index: 574,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/History.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/UserLoginDto.html': {},
          },
        },
      ],
      [
        'isnotempty()@isemail',
        { _index: 1677, title: {}, body: { 'classes/UpdatedBy.html': {} } },
      ],
      [
        'isnotempty({message',
        {
          _index: 626,
          title: {},
          body: {
            'classes/CreateCompanyDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UpdateResumeDto.html': {},
          },
        },
      ],
      [
        'isnotemptyobject',
        {
          _index: 583,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UserLoginDto.html': {},
          },
        },
      ],
      [
        'isnotemptyobject()@isobject()@validatenested()@type(undefined',
        {
          _index: 635,
          title: {},
          body: {
            'classes/CreateJobDto.html': {},
            'classes/CreateUserDto.html': {},
          },
        },
      ],
      [
        'isobject',
        {
          _index: 584,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UserLoginDto.html': {},
          },
        },
      ],
      [
        'isoptional',
        { _index: 1666, title: {}, body: { 'classes/UpdateUserDto.html': {} } },
      ],
      [
        'isotpvalid',
        {
          _index: 236,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'ispublic',
        {
          _index: 1060,
          title: {},
          body: {
            'injectables/JwtAuthGuard.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'ispublicpermission',
        {
          _index: 2012,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'iss',
        {
          _index: 344,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'isskippermission',
        {
          _index: 1066,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'isstring',
        {
          _index: 585,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UserLoginDto.html': {},
          },
        },
      ],
      [
        'isstring()@isnotempty()@apiproperty({example',
        { _index: 1700, title: {}, body: { 'classes/UserLoginDto.html': {} } },
      ],
      [
        'isvalid',
        {
          _index: 321,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'isvalidpassword',
        {
          _index: 1753,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'isvalidpassword(password',
        {
          _index: 1766,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'item.company.name',
        {
          _index: 1155,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'item.name',
        {
          _index: 1154,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'item.salary}`.replace(/\\b(?=(\\d{3})+(?!\\d))/g',
        {
          _index: 1156,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'item.skills',
        {
          _index: 1157,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'ito',
        {
          _index: 622,
          title: {},
          body: {
            'classes/Company-2.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DatabasesService.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UserLoginDto.html': {},
          },
        },
      ],
      [
        'ito@gmail.com',
        {
          _index: 779,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        "ito@gmail.com'].includes(founduser.email",
        {
          _index: 1808,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'iuser',
        {
          _index: 145,
          title: { 'interfaces/IUser.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'interfaces/IUser.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'job',
        {
          _index: 943,
          title: { 'classes/Job.html': {} },
          body: {
            'classes/Job.html': {},
            'controllers/JobsController.html': {},
            'modules/JobsModule.html': {},
            'injectables/JobsService.html': {},
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'classes/Permission.html': {},
            'classes/Resume.html': {},
            'classes/Role.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'job.dto',
        {
          _index: 987,
          title: {},
          body: {
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'classes/UpdateJobDto.html': {},
          },
        },
      ],
      [
        'job.dto.ts',
        {
          _index: 573,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
            'classes/UpdateJobDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'job.dto.ts:10',
        { _index: 577, title: {}, body: { 'classes/Company-1.html': {} } },
      ],
      [
        'job.dto.ts:13',
        { _index: 576, title: {}, body: { 'classes/Company-1.html': {} } },
      ],
      [
        'job.dto.ts:19',
        { _index: 645, title: {}, body: { 'classes/CreateJobDto.html': {} } },
      ],
      [
        'job.dto.ts:24',
        { _index: 650, title: {}, body: { 'classes/CreateJobDto.html': {} } },
      ],
      [
        'job.dto.ts:30',
        { _index: 636, title: {}, body: { 'classes/CreateJobDto.html': {} } },
      ],
      [
        'job.dto.ts:33',
        { _index: 644, title: {}, body: { 'classes/CreateJobDto.html': {} } },
      ],
      [
        'job.dto.ts:36',
        { _index: 647, title: {}, body: { 'classes/CreateJobDto.html': {} } },
      ],
      [
        'job.dto.ts:39',
        { _index: 646, title: {}, body: { 'classes/CreateJobDto.html': {} } },
      ],
      [
        'job.dto.ts:42',
        { _index: 643, title: {}, body: { 'classes/CreateJobDto.html': {} } },
      ],
      [
        'job.dto.ts:45',
        { _index: 637, title: {}, body: { 'classes/CreateJobDto.html': {} } },
      ],
      [
        'job.dto.ts:50',
        { _index: 651, title: {}, body: { 'classes/CreateJobDto.html': {} } },
      ],
      [
        'job.dto.ts:55',
        { _index: 640, title: {}, body: { 'classes/CreateJobDto.html': {} } },
      ],
      [
        'job.dto.ts:59',
        { _index: 642, title: {}, body: { 'classes/CreateJobDto.html': {} } },
      ],
      [
        'job.dto.ts:7',
        { _index: 575, title: {}, body: { 'classes/Company-1.html': {} } },
      ],
      [
        'job.name',
        {
          _index: 1006,
          title: {},
          body: {
            'modules/JobsModule.html': {},
            'modules/MailModule.html': {},
            'classes/Resume.html': {},
          },
        },
      ],
      [
        'jobdocument',
        {
          _index: 963,
          title: {},
          body: {
            'classes/Job.html': {},
            'controllers/MailController.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'jobid',
        {
          _index: 665,
          title: {},
          body: {
            'classes/CreateResumeDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/Resume.html': {},
            'injectables/ResumesService.html': {},
          },
        },
      ],
      [
        'jobmodel',
        {
          _index: 1010,
          title: {},
          body: {
            'injectables/JobsService.html': {},
            'controllers/MailController.html': {},
          },
        },
      ],
      [
        'jobs',
        {
          _index: 968,
          title: {},
          body: {
            'controllers/JobsController.html': {},
            'controllers/MailController.html': {},
          },
        },
      ],
      [
        'jobs.controller',
        { _index: 1004, title: {}, body: { 'modules/JobsModule.html': {} } },
      ],
      [
        'jobs.service',
        {
          _index: 986,
          title: {},
          body: {
            'controllers/JobsController.html': {},
            'modules/JobsModule.html': {},
          },
        },
      ],
      [
        'jobs/jobs.module',
        { _index: 76, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'jobschema',
        {
          _index: 964,
          title: {},
          body: {
            'classes/Job.html': {},
            'modules/JobsModule.html': {},
            'modules/MailModule.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'jobscontroller',
        {
          _index: 966,
          title: { 'controllers/JobsController.html': {} },
          body: {
            'controllers/JobsController.html': {},
            'modules/JobsModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'jobsmodule',
        {
          _index: 51,
          title: { 'modules/JobsModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/JobsModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'jobsservice',
        {
          _index: 985,
          title: { 'injectables/JobsService.html': {} },
          body: {
            'controllers/JobsController.html': {},
            'modules/JobsModule.html': {},
            'injectables/JobsService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'jobwithmatchingskills',
        {
          _index: 1150,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'jobwithmatchingskills.map((item',
        {
          _index: 1153,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'jobwithmatchingskills?.length',
        {
          _index: 1152,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'join',
        {
          _index: 861,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'modules/MailModule.html': {},
            'injectables/MulterConfigService.html': {},
          },
        },
      ],
      [
        'join(__dirname',
        { _index: 1189, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      [
        'join(this.getrootpath',
        {
          _index: 1279,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'jpg',
        {
          _index: 2009,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'jwt',
        {
          _index: 1098,
          title: {},
          body: {
            'injectables/JwtStrategy.html': {},
            'dependencies.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'jwt_secret=your_secret_key',
        { _index: 1937, title: {}, body: { 'index.html': {} } },
      ],
      [
        'jwtauthguard',
        {
          _index: 24,
          title: { 'injectables/JwtAuthGuard.html': {} },
          body: {
            'controllers/AppController.html': {},
            'injectables/JwtAuthGuard.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'jwtfromrequest',
        {
          _index: 1100,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'jwtmodule',
        { _index: 262, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'jwtmodule.registerasync',
        { _index: 269, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'jwtservice',
        {
          _index: 286,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'jwtstrategy',
        {
          _index: 256,
          title: { 'injectables/JwtStrategy.html': {} },
          body: {
            'modules/AuthModule.html': {},
            'injectables/JwtStrategy.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'k',
        {
          _index: 806,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'injectables/MulterConfigService.html': {},
          },
        },
      ],
      [
        'khac',
        {
          _index: 1791,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'khai',
        {
          _index: 810,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'khi',
        {
          _index: 1283,
          title: {},
          body: {
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'khong',
        {
          _index: 373,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/Company-1.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/History.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
          },
        },
      ],
      [
        'khoản',
        {
          _index: 1811,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'khác',
        {
          _index: 827,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'không',
        {
          _index: 240,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/FilesController.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserLoginDto.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'khẩu',
        {
          _index: 249,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'khỏi',
        {
          _index: 1239,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'kiểm',
        {
          _index: 414,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/FilesController.html': {},
            'injectables/JobsService.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/ResumesService.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'kích',
        {
          _index: 863,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'l',
        {
          _index: 242,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/FilesController.html': {},
            'injectables/JobsService.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'injectables/ResumesService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'la',
        {
          _index: 312,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/History.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/UserLoginDto.html': {},
          },
        },
      ],
      [
        'le',
        {
          _index: 375,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
          },
        },
      ],
      [
        'legend',
        {
          _index: 39,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CompaniesModule.html': {},
            'modules/DatabasesModule.html': {},
            'modules/FilesModule.html': {},
            'modules/JobsModule.html': {},
            'modules/MailModule.html': {},
            'modules/PermissionsModule.html': {},
            'modules/ResumesModule.html': {},
            'modules/RolesModule.html': {},
            'modules/SubscribersModule.html': {},
            'modules/UsersModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'less',
        {
          _index: 869,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'level',
        {
          _index: 599,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
            'classes/Job.html': {},
            'injectables/JobsService.html': {},
          },
        },
      ],
      ['license', { _index: 1985, title: {}, body: { 'properties.html': {} } }],
      [
        'limit',
        {
          _index: 92,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'limit(defaultlimit',
        {
          _index: 523,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'limits',
        {
          _index: 1291,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'list',
        {
          _index: 436,
          title: {},
          body: { 'controllers/CompaniesController.html': {} },
        },
      ],
      [
        'literal',
        {
          _index: 174,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'classes/Company.html': {},
            'controllers/FilesController.html': {},
            'interfaces/IUser.html': {},
            'classes/Job.html': {},
            'classes/Permission.html': {},
            'classes/Resume.html': {},
            'classes/Role.html': {},
            'classes/Subscriber.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'liên',
        {
          _index: 1304,
          title: {},
          body: {
            'classes/MulterExceptionFilter.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'liệu',
        {
          _index: 1797,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'local',
        {
          _index: 182,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/LocalStrategy.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'localauthguard',
        {
          _index: 19,
          title: { 'injectables/LocalAuthGuard.html': {} },
          body: {
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'injectables/LocalAuthGuard.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'localstrategy',
        {
          _index: 257,
          title: { 'injectables/LocalStrategy.html': {} },
          body: {
            'modules/AuthModule.html': {},
            'injectables/LocalStrategy.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'location',
        {
          _index: 596,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
            'classes/Job.html': {},
            'injectables/JobsService.html': {},
          },
        },
      ],
      [
        'logic',
        {
          _index: 1788,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'login',
        {
          _index: 155,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
          },
        },
      ],
      [
        'login(user',
        {
          _index: 289,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'logo',
        {
          _index: 548,
          title: {},
          body: {
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/Job.html': {},
          },
        },
      ],
      [
        'logout',
        {
          _index: 279,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'long',
        {
          _index: 377,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'loại',
        {
          _index: 856,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'lên',
        {
          _index: 889,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'lưu',
        {
          _index: 396,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/MulterConfigService.html': {},
          },
        },
      ],
      [
        'lượng',
        {
          _index: 1294,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'lại',
        {
          _index: 413,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/Resume.html': {},
          },
        },
      ],
      [
        'lấy',
        {
          _index: 334,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/JobsService.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'lọc',
        {
          _index: 1302,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        'lỗi',
        {
          _index: 1242,
          title: {},
          body: {
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
          },
        },
      ],
      [
        'm',
        {
          _index: 1202,
          title: {},
          body: {
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'mail',
        {
          _index: 1118,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'mail.controller',
        { _index: 1173, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      [
        'mail.service',
        {
          _index: 1123,
          title: {},
          body: {
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
          },
        },
      ],
      [
        'mail/mail.module',
        { _index: 83, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'mailcontroller',
        {
          _index: 1116,
          title: { 'controllers/MailController.html': {} },
          body: {
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['mailer', { _index: 1916, title: {}, body: { 'index.html': {} } }],
      [
        'mailermodule',
        { _index: 1174, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      [
        'mailermodule.forrootasync',
        { _index: 1181, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      [
        'mailerservice',
        {
          _index: 1125,
          title: {},
          body: {
            'controllers/MailController.html': {},
            'injectables/MailService.html': {},
          },
        },
      ],
      [
        'mailmodule',
        {
          _index: 52,
          title: { 'modules/MailModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/MailModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'mailservice',
        {
          _index: 287,
          title: { 'injectables/MailService.html': {} },
          body: {
            'injectables/AuthService.html': {},
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'male',
        {
          _index: 776,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      ['management', { _index: 1904, title: {}, body: { 'index.html': {} } }],
      [
        'map',
        {
          _index: 1416,
          title: {},
          body: {
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'map((data',
        {
          _index: 1423,
          title: {},
          body: {
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
          },
        },
      ],
      [
        'matching',
        {
          _index: 34,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'modules/CompaniesModule.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateFileDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/DatabasesController.html': {},
            'modules/DatabasesModule.html': {},
            'injectables/DatabasesService.html': {},
            'classes/File.html': {},
            'controllers/FilesController.html': {},
            'modules/FilesModule.html': {},
            'injectables/FilesService.html': {},
            'classes/History.html': {},
            'interfaces/IUser.html': {},
            'classes/Job.html': {},
            'controllers/JobsController.html': {},
            'modules/JobsModule.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'classes/Permission.html': {},
            'controllers/PermissionsController.html': {},
            'modules/PermissionsModule.html': {},
            'injectables/PermissionsService.html': {},
            'classes/RegisterUserDto.html': {},
            'interfaces/Response.html': {},
            'classes/Resume.html': {},
            'controllers/ResumesController.html': {},
            'modules/ResumesModule.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'controllers/RolesController.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'controllers/SubscribersController.html': {},
            'modules/SubscribersModule.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'classes/UpdateCompanyDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateJobDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateSubscriberDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
            'properties.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'math.ceil(totalitems',
        {
          _index: 518,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'maxage',
        {
          _index: 355,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'maxcount',
        {
          _index: 884,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'maxsize',
        {
          _index: 865,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'message',
        {
          _index: 247,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/FilesController.html': {},
            'classes/History.html': {},
            'classes/MulterExceptionFilter.html': {},
            'classes/RegisterUserDto.html': {},
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/UserLoginDto.html': {},
            'injectables/UsersService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'meta',
        {
          _index: 527,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'method',
        {
          _index: 656,
          title: {},
          body: {
            'classes/CreatePermissionDto.html': {},
            'classes/Permission.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/RolesService.html': {},
          },
        },
      ],
      [
        'method=${method',
        {
          _index: 1391,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        'methods',
        {
          _index: 110,
          title: {},
          body: {
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/DatabasesService.html': {},
            'controllers/FilesController.html': {},
            'injectables/FilesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/MailController.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['migration', { _index: 1947, title: {}, body: { 'index.html': {} } }],
      [
        'migration:generate',
        { _index: 1949, title: {}, body: { 'index.html': {} } },
      ],
      [
        'migration:revert',
        { _index: 1953, title: {}, body: { 'index.html': {} } },
      ],
      [
        'migration:run',
        { _index: 1951, title: {}, body: { 'index.html': {} } },
      ],
      [
        'milisecond',
        {
          _index: 357,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'mime',
        {
          _index: 1296,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'mimetype',
        {
          _index: 875,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'miscellaneous',
        {
          _index: 1893,
          title: {
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
          body: {
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['mjml', { _index: 1877, title: {}, body: { 'dependencies.html': {} } }],
      [
        'mkdirsync',
        {
          _index: 1249,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'mkdirsync(absolutepath',
        {
          _index: 1256,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      ['mode', { _index: 1941, title: {}, body: { 'index.html': {} } }],
      [
        'model',
        {
          _index: 116,
          title: {},
          body: {
            'injectables/AppService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'module',
        {
          _index: 35,
          title: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CompaniesModule.html': {},
            'modules/DatabasesModule.html': {},
            'modules/FilesModule.html': {},
            'modules/JobsModule.html': {},
            'modules/MailModule.html': {},
            'modules/PermissionsModule.html': {},
            'modules/ResumesModule.html': {},
            'modules/RolesModule.html': {},
            'modules/SubscribersModule.html': {},
            'modules/UsersModule.html': {},
          },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CompaniesModule.html': {},
            'classes/CreatePermissionDto.html': {},
            'modules/DatabasesModule.html': {},
            'modules/FilesModule.html': {},
            'interfaces/IUser.html': {},
            'modules/JobsModule.html': {},
            'modules/MailModule.html': {},
            'classes/Permission.html': {},
            'modules/PermissionsModule.html': {},
            'injectables/PermissionsService.html': {},
            'modules/ResumesModule.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'modules/SubscribersModule.html': {},
            'modules/UsersModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'modules',
        {
          _index: 37,
          title: { 'modules.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CompaniesModule.html': {},
            'modules/DatabasesModule.html': {},
            'modules/FilesModule.html': {},
            'modules/JobsModule.html': {},
            'modules/MailModule.html': {},
            'modules/PermissionsModule.html': {},
            'modules/ResumesModule.html': {},
            'modules/RolesModule.html': {},
            'modules/SubscribersModule.html': {},
            'modules/UsersModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'modules/mailer',
        {
          _index: 1127,
          title: {},
          body: {
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'modules/mailer/dist/adapters/handlebars.adapter',
        { _index: 1179, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      [
        'mongo',
        {
          _index: 620,
          title: {},
          body: {
            'classes/Company-2.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UserLoginDto.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'mongo_uri=mongodb://localhost:27017/recruitment',
        { _index: 1936, title: {}, body: { 'index.html': {} } },
      ],
      ['mongodb', { _index: 1902, title: {}, body: { 'index.html': {} } }],
      [
        'mongoose',
        {
          _index: 73,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/CompaniesModule.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DatabasesService.html': {},
            'classes/History.html': {},
            'classes/Job.html': {},
            'injectables/JobsService.html': {},
            'controllers/MailController.html': {},
            'classes/Permission.html': {},
            'injectables/PermissionsService.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/Resume.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'injectables/SubscribersService.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'injectables/UsersService.html': {},
            'dependencies.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'mongoose.schema.types.objectid',
        {
          _index: 570,
          title: {},
          body: {
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/Job.html': {},
            'classes/Permission.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/Resume.html': {},
            'classes/Role.html': {},
            'classes/Subscriber.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
          },
        },
      ],
      [
        'mongoose.types.objectid(user.company',
        {
          _index: 1032,
          title: {},
          body: {
            'injectables/JobsService.html': {},
            'injectables/ResumesService.html': {},
          },
        },
      ],
      [
        'mongoose.types.objectid.isvalid(_id',
        {
          _index: 1402,
          title: {},
          body: {
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
          },
        },
      ],
      [
        'mongoose.types.objectid.isvalid(id',
        {
          _index: 532,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'mongoosemodule',
        {
          _index: 64,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/CompaniesModule.html': {},
            'modules/DatabasesModule.html': {},
            'modules/JobsModule.html': {},
            'modules/MailModule.html': {},
            'modules/PermissionsModule.html': {},
            'modules/ResumesModule.html': {},
            'modules/RolesModule.html': {},
            'modules/SubscribersModule.html': {},
            'modules/UsersModule.html': {},
          },
        },
      ],
      [
        'mongoosemodule.forfeature',
        {
          _index: 481,
          title: {},
          body: {
            'modules/CompaniesModule.html': {},
            'modules/DatabasesModule.html': {},
            'modules/JobsModule.html': {},
            'modules/MailModule.html': {},
            'modules/PermissionsModule.html': {},
            'modules/ResumesModule.html': {},
            'modules/RolesModule.html': {},
            'modules/SubscribersModule.html': {},
            'modules/UsersModule.html': {},
          },
        },
      ],
      [
        'mongoosemodule.forrootasync',
        { _index: 94, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'ms',
        {
          _index: 265,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        "ms(configservice.get('jwt_access_expire",
        { _index: 274, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        "ms(this.configservice.get('jwt_refresh_expire",
        {
          _index: 356,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'multer',
        {
          _index: 1218,
          title: {},
          body: {
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
          },
        },
      ],
      [
        'multer.config',
        { _index: 911, title: {}, body: { 'modules/FilesModule.html': {} } },
      ],
      [
        'multer.filter',
        {
          _index: 845,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'multerconfigservice',
        {
          _index: 910,
          title: { 'injectables/MulterConfigService.html': {} },
          body: {
            'modules/FilesModule.html': {},
            'injectables/MulterConfigService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'multerexceptionfilter',
        {
          _index: 844,
          title: { 'classes/MulterExceptionFilter.html': {} },
          body: {
            'controllers/FilesController.html': {},
            'classes/MulterExceptionFilter.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'multermodule',
        { _index: 909, title: {}, body: { 'modules/FilesModule.html': {} } },
      ],
      [
        'multermodule.registerasync',
        { _index: 912, title: {}, body: { 'modules/FilesModule.html': {} } },
      ],
      [
        'multermoduleoptions',
        {
          _index: 1221,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'multeroptionsfactory',
        {
          _index: 1246,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'multiple',
        {
          _index: 800,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        "multiple')@responsemessage('upload",
        {
          _index: 823,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'mật',
        {
          _index: 248,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'một',
        {
          _index: 821,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'mới',
        {
          _index: 420,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/MulterConfigService.html': {},
          },
        },
      ],
      [
        'mục',
        {
          _index: 1225,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'n',
        {
          _index: 408,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/FilesController.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
          },
        },
      ],
      [
        'name',
        {
          _index: 139,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'modules/CompaniesModule.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserDto.html': {},
            'modules/DatabasesModule.html': {},
            'injectables/DatabasesService.html': {},
            'controllers/FilesController.html': {},
            'injectables/FilesService.html': {},
            'interfaces/IUser.html': {},
            'classes/Job.html': {},
            'controllers/JobsController.html': {},
            'modules/JobsModule.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'classes/Permission.html': {},
            'controllers/PermissionsController.html': {},
            'modules/PermissionsModule.html': {},
            'injectables/PermissionsService.html': {},
            'classes/RegisterUserDto.html': {},
            'controllers/ResumesController.html': {},
            'modules/ResumesModule.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'controllers/RolesController.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'controllers/SubscribersController.html': {},
            'modules/SubscribersModule.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'name=${name',
        {
          _index: 1563,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'name=migrationname',
        { _index: 1950, title: {}, body: { 'index.html': {} } },
      ],
      [
        'names',
        {
          _index: 898,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        "names')@useinterceptors(undefined",
        {
          _index: 802,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'nem',
        {
          _index: 318,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'nestinterceptor',
        {
          _index: 1413,
          title: {},
          body: {
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
          },
        },
      ],
      [
        'nestjs',
        {
          _index: 1126,
          title: {},
          body: {
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'dependencies.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'nestjs/common',
        {
          _index: 12,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'modules/CompaniesModule.html': {},
            'injectables/CompaniesService.html': {},
            'controllers/DatabasesController.html': {},
            'modules/DatabasesModule.html': {},
            'injectables/DatabasesService.html': {},
            'controllers/FilesController.html': {},
            'modules/FilesModule.html': {},
            'injectables/FilesService.html': {},
            'controllers/JobsController.html': {},
            'modules/JobsModule.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'controllers/PermissionsController.html': {},
            'modules/PermissionsModule.html': {},
            'injectables/PermissionsService.html': {},
            'interfaces/Response.html': {},
            'controllers/ResumesController.html': {},
            'modules/ResumesModule.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'modules/SubscribersModule.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/config',
        {
          _index: 16,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'injectables/DatabasesService.html': {},
            'injectables/JwtStrategy.html': {},
            'modules/MailModule.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/core',
        {
          _index: 1056,
          title: {},
          body: {
            'injectables/JwtAuthGuard.html': {},
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/jwt',
        {
          _index: 263,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/mapped',
        {
          _index: 933,
          title: {},
          body: {
            'classes/History.html': {},
            'classes/UpdateCompanyDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateJobDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateSubscriberDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
          },
        },
      ],
      [
        'nestjs/mongoose',
        {
          _index: 65,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/CompaniesModule.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'modules/DatabasesModule.html': {},
            'injectables/DatabasesService.html': {},
            'classes/Job.html': {},
            'modules/JobsModule.html': {},
            'injectables/JobsService.html': {},
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'classes/Permission.html': {},
            'modules/PermissionsModule.html': {},
            'injectables/PermissionsService.html': {},
            'classes/Resume.html': {},
            'modules/ResumesModule.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'modules/SubscribersModule.html': {},
            'injectables/SubscribersService.html': {},
            'classes/User.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/passport',
        {
          _index: 18,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AuthModule.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/platform',
        {
          _index: 841,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'modules/FilesModule.html': {},
            'injectables/MulterConfigService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/schedule',
        {
          _index: 85,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'controllers/MailController.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/swagger',
        {
          _index: 196,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/CompaniesController.html': {},
            'classes/Company-2.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/FilesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/MailController.html': {},
            'controllers/PermissionsController.html': {},
            'classes/RegisterUserDto.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/testing',
        { _index: 1866, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'nestjs/throttler',
        {
          _index: 87,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'new',
        {
          _index: 170,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
            'controllers/FilesController.html': {},
            'injectables/FilesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'modules/MailModule.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'newcv',
        {
          _index: 1493,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'newcv?._id',
        {
          _index: 1496,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'newcv?.createdat',
        {
          _index: 1497,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'newjob',
        {
          _index: 1019,
          title: {},
          body: { 'injectables/JobsService.html': {} },
        },
      ],
      [
        'newpassword',
        {
          _index: 235,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'newpermission',
        {
          _index: 1395,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        'newpermission?._id',
        {
          _index: 1397,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        'newpermission?.createdat',
        {
          _index: 1398,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        'newregister',
        {
          _index: 1806,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'newrole',
        {
          _index: 1555,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'newrole?._id',
        {
          _index: 1557,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'newrole?.createdat',
        {
          _index: 1558,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'newsubs',
        {
          _index: 1635,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'newsubs?._id',
        {
          _index: 1637,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'newsubs?.createdat',
        {
          _index: 1639,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'newuser',
        {
          _index: 360,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'newuser?._id',
        {
          _index: 362,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'newuser?.createdat',
        {
          _index: 364,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'next',
        {
          _index: 1421,
          title: {},
          body: {
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
          },
        },
      ],
      [
        'next.handle().pipe',
        {
          _index: 1422,
          title: {},
          body: {
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
          },
        },
      ],
      [
        'ng',
        {
          _index: 615,
          title: {},
          body: {
            'classes/Company-2.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/FilesController.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'ngang',
        {
          _index: 1268,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'ngoại',
        {
          _index: 1303,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        'người',
        {
          _index: 1730,
          title: {},
          body: {
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'nh',
        {
          _index: 616,
          title: {},
          body: {
            'classes/Company-2.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/FilesController.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'nhau',
        {
          _index: 828,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'nhiều',
        {
          _index: 826,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'nhận',
        {
          _index: 1203,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'nhập',
        { _index: 1674, title: {}, body: { 'classes/UpdateUserDto.html': {} } },
      ],
      [
        'nhật',
        {
          _index: 419,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'nice',
        {
          _index: 1164,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      ['node.js', { _index: 1921, title: {}, body: { 'index.html': {} } }],
      [
        'normal',
        {
          _index: 2000,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      ['nosql', { _index: 1911, title: {}, body: { 'index.html': {} } }],
      [
        'notfoundexception',
        {
          _index: 1778,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        "notfoundexception('người",
        {
          _index: 1820,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      ['npm', { _index: 1931, title: {}, body: { 'index.html': {} } }],
      [
        'null',
        {
          _index: 332,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/FilesController.html': {},
          },
        },
      ],
      [
        'number',
        {
          _index: 490,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/FilesService.html': {},
            'classes/Job.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'classes/RegisterUserDto.html': {},
            'interfaces/Response.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'nào',
        {
          _index: 807,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'này',
        {
          _index: 1206,
          title: {},
          body: {
            'injectables/MailService.html': {},
            'classes/MulterExceptionFilter.html': {},
          },
        },
      ],
      [
        'nếu',
        {
          _index: 339,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/JobsService.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'o',
        {
          _index: 1071,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'object',
        {
          _index: 555,
          title: {},
          body: {
            'classes/Company.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/Job.html': {},
            'classes/Permission.html': {},
            'classes/Role.html': {},
            'classes/Subscriber.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'objectid',
        {
          _index: 1815,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'objuser',
        {
          _index: 328,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'observable',
        {
          _index: 1415,
          title: {},
          body: {
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
          },
        },
      ],
      [
        'officedocument.wordprocessingml.document',
        {
          _index: 2006,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'offset',
        {
          _index: 512,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'ok',
        {
          _index: 382,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'oldpassword',
        {
          _index: 1726,
          title: {},
          body: {
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'onmoduleinit',
        {
          _index: 731,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'optional',
        {
          _index: 141,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/DatabasesService.html': {},
            'controllers/FilesController.html': {},
            'injectables/FilesService.html': {},
            'interfaces/IUser.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'classes/UpdateUserDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'options',
        { _index: 1192, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      [
        'originalname',
        {
          _index: 873,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      ['orm', { _index: 1912, title: {}, body: { 'index.html': {} } }],
      [
        'otp',
        {
          _index: 135,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/MailService.html': {},
            'classes/User.html': {},
            'injectables/UsersService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        "otp')@responsemessage('send",
        {
          _index: 134,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'otpcode',
        {
          _index: 301,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'otpexpires',
        { _index: 1680, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'otpgenerator',
        {
          _index: 308,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'otpgenerator.generate(6',
        {
          _index: 390,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'out',
        {
          _index: 60,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CompaniesModule.html': {},
            'modules/DatabasesModule.html': {},
            'modules/FilesModule.html': {},
            'modules/JobsModule.html': {},
            'modules/MailModule.html': {},
            'modules/PermissionsModule.html': {},
            'modules/ResumesModule.html': {},
            'modules/RolesModule.html': {},
            'modules/SubscribersModule.html': {},
            'modules/UsersModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'overview',
        {
          _index: 1980,
          title: { 'overview.html': {} },
          body: { 'overview.html': {} },
        },
      ],
      ['p', { _index: 1967, title: {}, body: { 'index.html': {} } }],
      [
        'package',
        {
          _index: 1857,
          title: { 'dependencies.html': {}, 'properties.html': {} },
          body: {},
        },
      ],
      [
        'pages',
        {
          _index: 530,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'pagesize',
        {
          _index: 529,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'paginate',
        {
          _index: 437,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'panel',
        {
          _index: 976,
          title: {},
          body: { 'controllers/JobsController.html': {} },
        },
      ],
      [
        'param',
        {
          _index: 452,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'controllers/FilesController.html': {},
            'controllers/JobsController.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        "param('id",
        {
          _index: 471,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'parameters',
        {
          _index: 138,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/DatabasesService.html': {},
            'controllers/FilesController.html': {},
            'injectables/FilesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'params',
        {
          _index: 499,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'parser',
        {
          _index: 1873,
          title: {},
          body: { 'dependencies.html': {}, 'index.html': {} },
        },
      ],
      [
        'partialtype',
        {
          _index: 932,
          title: {},
          body: {
            'classes/History.html': {},
            'classes/UpdateCompanyDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateJobDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateSubscriberDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
          },
        },
      ],
      [
        'partialtype(createcompanydto',
        {
          _index: 1650,
          title: {},
          body: { 'classes/UpdateCompanyDto.html': {} },
        },
      ],
      [
        'partialtype(createfiledto',
        { _index: 1652, title: {}, body: { 'classes/UpdateFileDto.html': {} } },
      ],
      [
        'partialtype(createjobdto',
        { _index: 1654, title: {}, body: { 'classes/UpdateJobDto.html': {} } },
      ],
      [
        'partialtype(createpermissiondto',
        {
          _index: 1656,
          title: {},
          body: { 'classes/UpdatePermissionDto.html': {} },
        },
      ],
      [
        'partialtype(createresumedto',
        {
          _index: 939,
          title: {},
          body: {
            'classes/History.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
          },
        },
      ],
      [
        'partialtype(createroledto',
        { _index: 1660, title: {}, body: { 'classes/UpdateRoleDto.html': {} } },
      ],
      [
        'partialtype(createsubscriberdto',
        {
          _index: 1662,
          title: {},
          body: { 'classes/UpdateSubscriberDto.html': {} },
        },
      ],
      [
        'pass',
        {
          _index: 296,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/Company-2.html': {},
            'classes/CreateUserDto.html': {},
            'modules/MailModule.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UserLoginDto.html': {},
          },
        },
      ],
      [
        'passport',
        {
          _index: 317,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'injectables/PermissionsService.html': {},
            'dependencies.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'passport/jwt.strategy',
        { _index: 264, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'passport/local.strategy',
        { _index: 261, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'passportmodule',
        { _index: 260, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'passportstrategy',
        {
          _index: 1099,
          title: {},
          body: {
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
          },
        },
      ],
      [
        'passportstrategy(strategy',
        {
          _index: 1091,
          title: {},
          body: {
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
          },
        },
      ],
      [
        'passthrough',
        {
          _index: 208,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'password',
        {
          _index: 136,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'classes/Company-2.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DatabasesService.html': {},
            'injectables/LocalStrategy.html': {},
            'injectables/MailService.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        "password')@responsemessage('get",
        {
          _index: 176,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'patch',
        {
          _index: 451,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        "patch(':id",
        {
          _index: 449,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        "patch(':id')@responsemessage('update",
        {
          _index: 983,
          title: {},
          body: {
            'controllers/JobsController.html': {},
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
          },
        },
      ],
      [
        "patch(':id')@skipcheckpermission()@responsemessage('update",
        {
          _index: 1598,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        "patch('change",
        {
          _index: 1708,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'path',
        {
          _index: 1175,
          title: {},
          body: {
            'modules/MailModule.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'path.basename(file.originalname',
        {
          _index: 1288,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'payload',
        {
          _index: 342,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/JwtStrategy.html': {},
          },
        },
      ],
      [
        'pdf',
        {
          _index: 2002,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'pending',
        {
          _index: 1495,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'permission',
        {
          _index: 722,
          title: { 'classes/Permission.html': {} },
          body: {
            'modules/DatabasesModule.html': {},
            'injectables/DatabasesService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'classes/Permission.html': {},
            'controllers/PermissionsController.html': {},
            'modules/PermissionsModule.html': {},
            'injectables/PermissionsService.html': {},
            'classes/Role.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'permission.apipath',
        {
          _index: 1083,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'permission.dto',
        {
          _index: 1358,
          title: {},
          body: {
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'classes/UpdatePermissionDto.html': {},
          },
        },
      ],
      [
        'permission.dto.ts',
        {
          _index: 654,
          title: {},
          body: {
            'classes/CreatePermissionDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'permission.dto.ts:12',
        {
          _index: 658,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      [
        'permission.dto.ts:15',
        {
          _index: 659,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      [
        'permission.dto.ts:6',
        {
          _index: 660,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      [
        'permission.dto.ts:9',
        {
          _index: 657,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {} },
        },
      ],
      [
        'permission.method',
        {
          _index: 1082,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'permission.name',
        {
          _index: 728,
          title: {},
          body: {
            'modules/DatabasesModule.html': {},
            'modules/PermissionsModule.html': {},
            'classes/Role.html': {},
          },
        },
      ],
      [
        'permissiondocument',
        {
          _index: 739,
          title: {},
          body: {
            'injectables/DatabasesService.html': {},
            'classes/Permission.html': {},
            'injectables/PermissionsService.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'permissionmodel',
        {
          _index: 733,
          title: {},
          body: {
            'injectables/DatabasesService.html': {},
            'injectables/PermissionsService.html': {},
          },
        },
      ],
      [
        'permissions',
        {
          _index: 330,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/CreateRoleDto.html': {},
            'injectables/DatabasesService.html': {},
            'interfaces/IUser.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/PermissionsController.html': {},
            'classes/Role.html': {},
            'injectables/RolesService.html': {},
          },
        },
      ],
      [
        'permissions.controller',
        {
          _index: 1376,
          title: {},
          body: { 'modules/PermissionsModule.html': {} },
        },
      ],
      [
        'permissions.find',
        {
          _index: 1081,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'permissions.service',
        {
          _index: 1357,
          title: {},
          body: {
            'controllers/PermissionsController.html': {},
            'modules/PermissionsModule.html': {},
          },
        },
      ],
      [
        'permissions/permissions.module',
        { _index: 79, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'permissionschema',
        {
          _index: 723,
          title: {},
          body: {
            'modules/DatabasesModule.html': {},
            'classes/Permission.html': {},
            'modules/PermissionsModule.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'permissionscontroller',
        {
          _index: 1343,
          title: { 'controllers/PermissionsController.html': {} },
          body: {
            'controllers/PermissionsController.html': {},
            'modules/PermissionsModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'permissionsmodule',
        {
          _index: 53,
          title: { 'modules/PermissionsModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/PermissionsModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'permissionsservice',
        {
          _index: 1356,
          title: { 'injectables/PermissionsService.html': {} },
          body: {
            'controllers/PermissionsController.html': {},
            'modules/PermissionsModule.html': {},
            'injectables/PermissionsService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'ph',
        {
          _index: 1316,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        'phút',
        {
          _index: 402,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/MailService.html': {},
          },
        },
      ],
      [
        'picktype',
        { _index: 1671, title: {}, body: { 'classes/UpdateUserDto.html': {} } },
      ],
      [
        'picktype(createuserdto',
        { _index: 1665, title: {}, body: { 'classes/UpdateUserDto.html': {} } },
      ],
      [
        'please',
        {
          _index: 853,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'plugin',
        {
          _index: 72,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/DatabasesService.html': {},
            'injectables/JobsService.html': {},
            'controllers/MailController.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'png',
        {
          _index: 2011,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'pokiwar192@gmail.com',
        {
          _index: 1159,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'populate',
        {
          _index: 1502,
          title: {},
          body: {
            'injectables/ResumesService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'populate(population',
        {
          _index: 525,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'population',
        {
          _index: 508,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['port=3000', { _index: 1938, title: {}, body: { 'index.html': {} } }],
      [
        'post',
        {
          _index: 9,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'controllers/CompaniesController.html': {},
            'controllers/FilesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        "post('/login",
        {
          _index: 205,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "post('/logout",
        {
          _index: 228,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "post('/register",
        {
          _index: 211,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "post('/send",
        {
          _index: 230,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "post('by",
        {
          _index: 1456,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        "post('reset",
        {
          _index: 234,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "post('skills",
        {
          _index: 1607,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        "post('skills')@responsemessage('get",
        {
          _index: 1591,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        "post('upload",
        {
          _index: 849,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        "post()@responsemessage('create",
        {
          _index: 971,
          title: {},
          body: {
            'controllers/JobsController.html': {},
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      ['postgres', { _index: 1970, title: {}, body: { 'index.html': {} } }],
      [
        'postgres_db=demo_db',
        { _index: 1976, title: {}, body: { 'index.html': {} } },
      ],
      [
        'postgres_password=pg_strong_password',
        { _index: 1975, title: {}, body: { 'index.html': {} } },
      ],
      [
        'postgres_user=user_demo',
        { _index: 1974, title: {}, body: { 'index.html': {} } },
      ],
      ['powerful', { _index: 1908, title: {}, body: { 'index.html': {} } }],
      [
        'prefix',
        {
          _index: 122,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/CompaniesController.html': {},
            'controllers/DatabasesController.html': {},
            'controllers/FilesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/MailController.html': {},
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'preview',
        { _index: 1193, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      [
        'private',
        {
          _index: 31,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/DatabasesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/MailController.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'process.cwd',
        {
          _index: 1252,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'processnewtoken',
        {
          _index: 280,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      ['production', { _index: 1945, title: {}, body: { 'index.html': {} } }],
      ['project', { _index: 1944, title: {}, body: { 'index.html': {} } }],
      [
        'projection',
        {
          _index: 1023,
          title: {},
          body: {
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
          },
        },
      ],
      [
        'promise',
        {
          _index: 299,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/LocalStrategy.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'prop',
        {
          _index: 552,
          title: {},
          body: {
            'classes/Company.html': {},
            'classes/Job.html': {},
            'classes/Permission.html': {},
            'classes/Resume.html': {},
            'classes/Role.html': {},
            'classes/Subscriber.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'prop({required',
        {
          _index: 550,
          title: {},
          body: {
            'classes/Company.html': {},
            'classes/Subscriber.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'prop({type',
        {
          _index: 554,
          title: {},
          body: {
            'classes/Company.html': {},
            'classes/Job.html': {},
            'classes/Permission.html': {},
            'classes/Resume.html': {},
            'classes/Role.html': {},
            'classes/Subscriber.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'properties',
        {
          _index: 277,
          title: { 'properties.html': {} },
          body: {
            'injectables/AuthService.html': {},
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/History.html': {},
            'interfaces/IUser.html': {},
            'classes/Job.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/Permission.html': {},
            'classes/RegisterUserDto.html': {},
            'interfaces/Response.html': {},
            'classes/Resume.html': {},
            'classes/Role.html': {},
            'classes/Subscriber.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'injectables/UsersService.html': {},
            'properties.html': {},
          },
        },
      ],
      [
        'providers',
        {
          _index: 42,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CompaniesModule.html': {},
            'modules/DatabasesModule.html': {},
            'modules/FilesModule.html': {},
            'modules/JobsModule.html': {},
            'modules/MailModule.html': {},
            'modules/PermissionsModule.html': {},
            'modules/ResumesModule.html': {},
            'modules/RolesModule.html': {},
            'modules/SubscribersModule.html': {},
            'modules/UsersModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'public',
        {
          _index: 26,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'controllers/CompaniesController.html': {},
            'controllers/FilesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/MailController.html': {},
            'controllers/UsersController.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        "public()@get(':id')@responsemessage('fetch",
        {
          _index: 1714,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        "public()@post('/send",
        {
          _index: 133,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "public()@post('reset",
        {
          _index: 175,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "public()@post('upload",
        {
          _index: 798,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        "public()@post('upload')@responsemessage('upload",
        {
          _index: 817,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        "public()@responsemessage('get",
        {
          _index: 163,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "public()@responsemessage('register",
        {
          _index: 169,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'public()@useguards(localauthguard)@useguards(throttlerguard)@throttle({default',
        {
          _index: 152,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'public/images',
        {
          _index: 1244,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'push',
        {
          _index: 1505,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'qs',
        {
          _index: 434,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'qu',
        {
          _index: 892,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'qua',
        {
          _index: 384,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'quan',
        {
          _index: 1305,
          title: {},
          body: {
            'classes/MulterExceptionFilter.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'quantity',
        {
          _index: 598,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
            'classes/Job.html': {},
            'injectables/JobsService.html': {},
          },
        },
      ],
      [
        'query',
        {
          _index: 453,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'query("current',
        {
          _index: 1364,
          title: {},
          body: { 'controllers/PermissionsController.html': {} },
        },
      ],
      [
        'query("pagesize',
        {
          _index: 1365,
          title: {},
          body: { 'controllers/PermissionsController.html': {} },
        },
      ],
      [
        "query('current",
        {
          _index: 465,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        "query('pagesize",
        {
          _index: 466,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'quyen',
        {
          _index: 1086,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'ra',
        {
          _index: 1307,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        'readonly',
        {
          _index: 32,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'classes/Company-2.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/DatabasesController.html': {},
            'controllers/FilesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/MailController.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'controllers/PermissionsController.html': {},
            'classes/RegisterUserDto.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      ['recruitment', { _index: 1898, title: {}, body: { 'index.html': {} } }],
      [
        'recruitment_web_be',
        { _index: 1929, title: {}, body: { 'index.html': {} } },
      ],
      [
        'recursive',
        {
          _index: 1257,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'ref',
        {
          _index: 1428,
          title: {},
          body: {
            'classes/Resume.html': {},
            'classes/Role.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'refesh_token',
        {
          _index: 351,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'reflector',
        {
          _index: 1045,
          title: {},
          body: {
            'injectables/JwtAuthGuard.html': {},
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
          },
        },
      ],
      [
        'refresh',
        {
          _index: 164,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
          },
        },
      ],
      [
        'refresh_token',
        {
          _index: 346,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'refreshtoken',
        {
          _index: 225,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'classes/User.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'register',
        {
          _index: 281,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'register(user',
        {
          _index: 291,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'registeruserdto',
        {
          _index: 168,
          title: { 'classes/RegisterUserDto.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'classes/Company-2.html': {},
            'classes/CreateUserDto.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UserLoginDto.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'remove',
        {
          _index: 429,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/FilesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        "remove(@param('id",
        {
          _index: 473,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'remove(id',
        {
          _index: 444,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/FilesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'removes',
        {
          _index: 926,
          title: {},
          body: { 'injectables/FilesService.html': {} },
        },
      ],
      ['repository', { _index: 1925, title: {}, body: { 'index.html': {} } }],
      [
        'req',
        {
          _index: 157,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/JobsController.html': {},
            'injectables/MulterConfigService.html': {},
            'controllers/ResumesController.html': {},
          },
        },
      ],
      [
        'req.headers.folder_type',
        {
          _index: 1277,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'req.user',
        {
          _index: 995,
          title: {},
          body: {
            'controllers/JobsController.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/ResumesController.html': {},
          },
        },
      ],
      [
        'request',
        {
          _index: 11,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'controllers/JobsController.html': {},
            'injectables/JwtAuthGuard.html': {},
            'classes/MulterExceptionFilter.html': {},
            'controllers/ResumesController.html': {},
            'index.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        "request.cookies['refresh_token",
        {
          _index: 226,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'request.method',
        {
          _index: 1076,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'request.route?.path',
        {
          _index: 1078,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'request.user',
        {
          _index: 2019,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'required',
        {
          _index: 569,
          title: {},
          body: {
            'classes/Company.html': {},
            'classes/Resume.html': {},
            'classes/Subscriber.html': {},
            'classes/User.html': {},
          },
        },
      ],
      ['requirements', { _index: 1920, title: {}, body: { 'index.html': {} } }],
      [
        'res',
        {
          _index: 179,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'reset',
        {
          _index: 59,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'modules/CompaniesModule.html': {},
            'modules/DatabasesModule.html': {},
            'modules/FilesModule.html': {},
            'modules/JobsModule.html': {},
            'modules/MailModule.html': {},
            'modules/PermissionsModule.html': {},
            'modules/ResumesModule.html': {},
            'modules/RolesModule.html': {},
            'modules/SubscribersModule.html': {},
            'modules/UsersModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'resetpassword',
        {
          _index: 130,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'resetpassword(body',
        {
          _index: 173,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'resolve',
        {
          _index: 1251,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'resolve(this.getrootpath',
        {
          _index: 1254,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'response',
        {
          _index: 151,
          title: { 'interfaces/Response.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        "response.clearcookie('refresh_token",
        {
          _index: 372,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        "response.cookie('refresh_token",
        {
          _index: 353,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'response.status(httpstatus.unprocessable_entity).json',
        {
          _index: 1323,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        'response_massage',
        {
          _index: 2014,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'response_message',
        {
          _index: 1418,
          title: {},
          body: {
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'responsemessage',
        {
          _index: 183,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/CompaniesController.html': {},
            'controllers/FilesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/MailController.html': {},
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'responsemessage("create',
        {
          _index: 1361,
          title: {},
          body: { 'controllers/PermissionsController.html': {} },
        },
      ],
      [
        'responsemessage("delete',
        {
          _index: 1371,
          title: {},
          body: { 'controllers/PermissionsController.html': {} },
        },
      ],
      [
        'responsemessage("fetch',
        {
          _index: 1363,
          title: {},
          body: { 'controllers/PermissionsController.html': {} },
        },
      ],
      [
        'responsemessage("get',
        {
          _index: 1608,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        'responsemessage("update',
        {
          _index: 1368,
          title: {},
          body: { 'controllers/PermissionsController.html': {} },
        },
      ],
      [
        "responsemessage('create",
        {
          _index: 990,
          title: {},
          body: {
            'controllers/JobsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        "responsemessage('delete",
        {
          _index: 999,
          title: {},
          body: {
            'controllers/JobsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        "responsemessage('fetch",
        {
          _index: 464,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'controllers/JobsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        "responsemessage('get",
        {
          _index: 146,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/ResumesController.html': {},
          },
        },
      ],
      [
        "responsemessage('logout",
        {
          _index: 159,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "responsemessage('register",
        {
          _index: 210,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "responsemessage('send",
        {
          _index: 231,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "responsemessage('test",
        {
          _index: 1141,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        "responsemessage('update",
        {
          _index: 997,
          title: {},
          body: {
            'controllers/JobsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        "responsemessage('upload",
        {
          _index: 850,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        "responsemessage('user",
        {
          _index: 206,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'result',
        {
          _index: 519,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'results',
        {
          _index: 33,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'modules/CompaniesModule.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateFileDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/DatabasesController.html': {},
            'modules/DatabasesModule.html': {},
            'injectables/DatabasesService.html': {},
            'classes/File.html': {},
            'controllers/FilesController.html': {},
            'modules/FilesModule.html': {},
            'injectables/FilesService.html': {},
            'classes/History.html': {},
            'interfaces/IUser.html': {},
            'classes/Job.html': {},
            'controllers/JobsController.html': {},
            'modules/JobsModule.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'classes/Permission.html': {},
            'controllers/PermissionsController.html': {},
            'modules/PermissionsModule.html': {},
            'injectables/PermissionsService.html': {},
            'classes/RegisterUserDto.html': {},
            'interfaces/Response.html': {},
            'classes/Resume.html': {},
            'controllers/ResumesController.html': {},
            'modules/ResumesModule.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'controllers/RolesController.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'controllers/SubscribersController.html': {},
            'modules/SubscribersModule.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'classes/UpdateCompanyDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateJobDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateSubscriberDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
            'properties.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'resume',
        {
          _index: 1027,
          title: { 'classes/Resume.html': {} },
          body: {
            'injectables/JobsService.html': {},
            'classes/Resume.html': {},
            'controllers/ResumesController.html': {},
            'modules/ResumesModule.html': {},
            'injectables/ResumesService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'resume.dto',
        {
          _index: 935,
          title: {},
          body: {
            'classes/History.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
          },
        },
      ],
      [
        'resume.dto.ts',
        {
          _index: 663,
          title: {},
          body: {
            'classes/CreateResumeDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/History.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'resume.dto.ts:12',
        {
          _index: 673,
          title: {},
          body: { 'classes/CreateResumeDto.html': {} },
        },
      ],
      [
        'resume.dto.ts:13',
        { _index: 1678, title: {}, body: { 'classes/UpdatedBy.html': {} } },
      ],
      [
        'resume.dto.ts:15',
        {
          _index: 672,
          title: {},
          body: { 'classes/CreateResumeDto.html': {} },
        },
      ],
      [
        'resume.dto.ts:18',
        {
          _index: 669,
          title: {},
          body: {
            'classes/CreateResumeDto.html': {},
            'classes/History.html': {},
          },
        },
      ],
      [
        'resume.dto.ts:21',
        {
          _index: 671,
          title: {},
          body: {
            'classes/CreateResumeDto.html': {},
            'classes/History.html': {},
          },
        },
      ],
      [
        'resume.dto.ts:26',
        { _index: 931, title: {}, body: { 'classes/History.html': {} } },
      ],
      [
        'resume.dto.ts:27',
        {
          _index: 699,
          title: {},
          body: { 'classes/CreateUserCvDto.html': {} },
        },
      ],
      [
        'resume.dto.ts:31',
        {
          _index: 697,
          title: {},
          body: { 'classes/CreateUserCvDto.html': {} },
        },
      ],
      [
        'resume.dto.ts:35',
        {
          _index: 698,
          title: {},
          body: {
            'classes/CreateUserCvDto.html': {},
            'classes/UpdateResumeDto.html': {},
          },
        },
      ],
      [
        'resume.dto.ts:6',
        {
          _index: 670,
          title: {},
          body: { 'classes/CreateResumeDto.html': {} },
        },
      ],
      [
        'resume.dto.ts:9',
        {
          _index: 674,
          title: {},
          body: {
            'classes/CreateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
          },
        },
      ],
      [
        'resume.name',
        { _index: 1478, title: {}, body: { 'modules/ResumesModule.html': {} } },
      ],
      [
        'resumedocument',
        {
          _index: 1443,
          title: {},
          body: {
            'classes/Resume.html': {},
            'injectables/ResumesService.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'resumemodel',
        {
          _index: 1483,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'resumes',
        {
          _index: 1449,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        'resumes.controller',
        { _index: 1476, title: {}, body: { 'modules/ResumesModule.html': {} } },
      ],
      [
        'resumes.service',
        {
          _index: 1462,
          title: {},
          body: {
            'controllers/ResumesController.html': {},
            'modules/ResumesModule.html': {},
          },
        },
      ],
      [
        'resumes/resumes.module',
        { _index: 78, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'resumeschema',
        {
          _index: 1445,
          title: {},
          body: {
            'classes/Resume.html': {},
            'modules/ResumesModule.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'resumescontroller',
        {
          _index: 1447,
          title: { 'controllers/ResumesController.html': {} },
          body: {
            'controllers/ResumesController.html': {},
            'modules/ResumesModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'resumesmodule',
        {
          _index: 54,
          title: { 'modules/ResumesModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/ResumesModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'resumesservice',
        {
          _index: 1461,
          title: { 'injectables/ResumesService.html': {} },
          body: {
            'controllers/ResumesController.html': {},
            'modules/ResumesModule.html': {},
            'injectables/ResumesService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'return',
        {
          _index: 101,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'controllers/FilesController.html': {},
            'injectables/FilesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/MailController.html': {},
            'injectables/MulterConfigService.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'interfaces/Response.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'returns',
        {
          _index: 114,
          title: {},
          body: {
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/DatabasesService.html': {},
            'controllers/FilesController.html': {},
            'injectables/FilesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/MailController.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['revert', { _index: 1952, title: {}, body: { 'index.html': {} } }],
      [
        'role',
        {
          _index: 333,
          title: { 'classes/Role.html': {} },
          body: {
            'injectables/AuthService.html': {},
            'classes/Company-2.html': {},
            'classes/CreateUserDto.html': {},
            'modules/DatabasesModule.html': {},
            'injectables/DatabasesService.html': {},
            'interfaces/IUser.html': {},
            'injectables/JwtStrategy.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/Role.html': {},
            'controllers/RolesController.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'role.dto',
        {
          _index: 1531,
          title: {},
          body: {
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'classes/UpdateRoleDto.html': {},
          },
        },
      ],
      [
        'role.dto.ts',
        {
          _index: 678,
          title: {},
          body: {
            'classes/CreateRoleDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'role.dto.ts:13',
        { _index: 683, title: {}, body: { 'classes/CreateRoleDto.html': {} } },
      ],
      [
        'role.dto.ts:18',
        { _index: 687, title: {}, body: { 'classes/CreateRoleDto.html': {} } },
      ],
      [
        'role.dto.ts:6',
        { _index: 684, title: {}, body: { 'classes/CreateRoleDto.html': {} } },
      ],
      [
        'role.dto.ts:9',
        { _index: 679, title: {}, body: { 'classes/CreateRoleDto.html': {} } },
      ],
      [
        'role.name',
        {
          _index: 729,
          title: {},
          body: {
            'modules/DatabasesModule.html': {},
            'modules/RolesModule.html': {},
            'classes/User.html': {},
            'modules/UsersModule.html': {},
          },
        },
      ],
      [
        'roledocument',
        {
          _index: 740,
          title: {},
          body: {
            'injectables/DatabasesService.html': {},
            'classes/Role.html': {},
            'injectables/RolesService.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'rolemodel',
        {
          _index: 734,
          title: {},
          body: {
            'injectables/DatabasesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'roles',
        {
          _index: 1522,
          title: {},
          body: { 'controllers/RolesController.html': {}, 'index.html': {} },
        },
      ],
      [
        'roles.controller',
        { _index: 1543, title: {}, body: { 'modules/RolesModule.html': {} } },
      ],
      [
        'roles.service',
        {
          _index: 1530,
          title: {},
          body: {
            'controllers/RolesController.html': {},
            'modules/RolesModule.html': {},
          },
        },
      ],
      [
        'roles/roles.module',
        { _index: 80, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'roleschema',
        {
          _index: 725,
          title: {},
          body: {
            'modules/DatabasesModule.html': {},
            'classes/Role.html': {},
            'modules/RolesModule.html': {},
            'modules/UsersModule.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'rolescontroller',
        {
          _index: 1520,
          title: { 'controllers/RolesController.html': {} },
          body: {
            'controllers/RolesController.html': {},
            'modules/RolesModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'rolesmodule',
        {
          _index: 55,
          title: { 'modules/RolesModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/RolesModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'rolesservice',
        {
          _index: 190,
          title: { 'injectables/RolesService.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/RolesController.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'root',
        {
          _index: 1232,
          title: {},
          body: {
            'injectables/MulterConfigService.html': {},
            'index.html': {},
          },
        },
      ],
      ['run', { _index: 1939, title: {}, body: { 'index.html': {} } }],
      ['running', { _index: 1961, title: {}, body: { 'index.html': {} } }],
      [
        'rxjs',
        {
          _index: 1124,
          title: {},
          body: {
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'interfaces/Response.html': {},
            'modules/SubscribersModule.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'rxjs/operators',
        {
          _index: 1417,
          title: {},
          body: {
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
          },
        },
      ],
      [
        's',
        {
          _index: 1207,
          title: {},
          body: {
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
          },
        },
      ],
      [
        'salary',
        {
          _index: 597,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
            'classes/Job.html': {},
            'injectables/JobsService.html': {},
            'controllers/MailController.html': {},
          },
        },
      ],
      [
        'salt',
        {
          _index: 1784,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'sample',
        {
          _index: 745,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'sang',
        {
          _index: 1733,
          title: {},
          body: {
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'sanitizefilename',
        {
          _index: 1214,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'sanitizefilename(filename',
        {
          _index: 1235,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'sau',
        {
          _index: 1208,
          title: {},
          body: {
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
          },
        },
      ],
      [
        'schedulemodule',
        { _index: 84, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'schedulemodule.forroot',
        { _index: 88, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'schema',
        {
          _index: 483,
          title: {},
          body: {
            'modules/CompaniesModule.html': {},
            'classes/Company.html': {},
            'modules/DatabasesModule.html': {},
            'classes/Job.html': {},
            'modules/JobsModule.html': {},
            'modules/MailModule.html': {},
            'classes/Permission.html': {},
            'modules/PermissionsModule.html': {},
            'classes/Resume.html': {},
            'modules/ResumesModule.html': {},
            'classes/Role.html': {},
            'modules/RolesModule.html': {},
            'classes/Subscriber.html': {},
            'modules/SubscribersModule.html': {},
            'classes/User.html': {},
            'modules/UsersModule.html': {},
          },
        },
      ],
      [
        'schemafactory',
        {
          _index: 566,
          title: {},
          body: {
            'classes/Company.html': {},
            'classes/Job.html': {},
            'classes/Permission.html': {},
            'classes/Resume.html': {},
            'classes/Role.html': {},
            'classes/Subscriber.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'schemafactory.createforclass(company',
        {
          _index: 571,
          title: {},
          body: {
            'classes/Company.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'schemafactory.createforclass(job',
        {
          _index: 965,
          title: {},
          body: { 'classes/Job.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'schemafactory.createforclass(permission',
        {
          _index: 1342,
          title: {},
          body: {
            'classes/Permission.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'schemafactory.createforclass(resume',
        {
          _index: 1446,
          title: {},
          body: {
            'classes/Resume.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'schemafactory.createforclass(role',
        {
          _index: 1519,
          title: {},
          body: { 'classes/Role.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'schemafactory.createforclass(subscriber',
        {
          _index: 1582,
          title: {},
          body: {
            'classes/Subscriber.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'schemafactory.createforclass(user',
        {
          _index: 1699,
          title: {},
          body: { 'classes/User.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'schemas/company.schemas',
        {
          _index: 480,
          title: {},
          body: {
            'modules/CompaniesModule.html': {},
            'injectables/CompaniesService.html': {},
          },
        },
      ],
      [
        'schemas/job.schema',
        {
          _index: 1005,
          title: {},
          body: {
            'modules/JobsModule.html': {},
            'injectables/JobsService.html': {},
          },
        },
      ],
      [
        'schemas/permission.schema',
        {
          _index: 1377,
          title: {},
          body: {
            'modules/PermissionsModule.html': {},
            'injectables/PermissionsService.html': {},
          },
        },
      ],
      [
        'schemas/resume.schema',
        {
          _index: 1477,
          title: {},
          body: {
            'modules/ResumesModule.html': {},
            'injectables/ResumesService.html': {},
          },
        },
      ],
      [
        'schemas/role.schema',
        {
          _index: 1544,
          title: {},
          body: {
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
          },
        },
      ],
      [
        'schemas/subscriber.schema',
        {
          _index: 1619,
          title: {},
          body: {
            'modules/SubscribersModule.html': {},
            'injectables/SubscribersService.html': {},
          },
        },
      ],
      [
        'schemas/user.schema',
        {
          _index: 1746,
          title: {},
          body: {
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'secret',
        {
          _index: 270,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
          },
        },
      ],
      [
        'secretorkey',
        {
          _index: 1103,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'secure',
        { _index: 1185, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      ['security', { _index: 1918, title: {}, body: { 'index.html': {} } }],
      [
        'select',
        {
          _index: 854,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'select(projection',
        {
          _index: 1033,
          title: {},
          body: {
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
          },
        },
      ],
      ['send', { _index: 1917, title: {}, body: { 'index.html': {} } }],
      [
        'sendotp',
        {
          _index: 282,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'sendotp(email',
        {
          _index: 293,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'sendotptoemail',
        {
          _index: 1197,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'sendotptoemail(email',
        {
          _index: 1200,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'server',
        {
          _index: 345,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'index.html': {} },
        },
      ],
      [
        'set',
        {
          _index: 350,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'setmetadata(is_public_key',
        {
          _index: 2013,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'setmetadata(is_public_permission',
        {
          _index: 2016,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'setmetadata(response_message',
        {
          _index: 2015,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'signoptions',
        { _index: 272, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'single',
        {
          _index: 818,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'size',
        {
          _index: 868,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'skill',
        {
          _index: 595,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateSubscriberDto.html': {},
          },
        },
      ],
      [
        'skills',
        {
          _index: 589,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/Job.html': {},
            'injectables/JobsService.html': {},
            'controllers/MailController.html': {},
            'classes/Subscriber.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
          },
        },
      ],
      [
        "skills')@skipcheckpermission",
        {
          _index: 1593,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        'skip(offset',
        {
          _index: 522,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'skipcheckpermission',
        {
          _index: 1603,
          title: {},
          body: {
            'controllers/SubscribersController.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'soft',
        {
          _index: 70,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/DatabasesService.html': {},
            'injectables/JobsService.html': {},
            'controllers/MailController.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'softdeletemodel',
        {
          _index: 486,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/DatabasesService.html': {},
            'injectables/JobsService.html': {},
            'controllers/MailController.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'softdeleteplugin',
        { _index: 69, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'sort',
        {
          _index: 507,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'sort(sort',
        {
          _index: 524,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'source',
        {
          _index: 4,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'modules/CompaniesModule.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateFileDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/DatabasesController.html': {},
            'modules/DatabasesModule.html': {},
            'injectables/DatabasesService.html': {},
            'classes/File.html': {},
            'controllers/FilesController.html': {},
            'modules/FilesModule.html': {},
            'injectables/FilesService.html': {},
            'classes/History.html': {},
            'interfaces/IUser.html': {},
            'classes/Job.html': {},
            'controllers/JobsController.html': {},
            'modules/JobsModule.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'classes/Permission.html': {},
            'controllers/PermissionsController.html': {},
            'modules/PermissionsModule.html': {},
            'injectables/PermissionsService.html': {},
            'classes/RegisterUserDto.html': {},
            'interfaces/Response.html': {},
            'classes/Resume.html': {},
            'controllers/ResumesController.html': {},
            'modules/ResumesModule.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'controllers/RolesController.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'controllers/SubscribersController.html': {},
            'modules/SubscribersModule.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'classes/UpdateCompanyDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateJobDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateSubscriberDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'specialchars',
        {
          _index: 395,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      ['speed', { _index: 1915, title: {}, body: { 'index.html': {} } }],
      [
        'src/.../company.schemas.ts',
        {
          _index: 1990,
          title: {},
          body: {
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/.../customize.ts',
        {
          _index: 1999,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/.../job.schema.ts',
        {
          _index: 1991,
          title: {},
          body: {
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/.../main.ts',
        {
          _index: 1895,
          title: {},
          body: { 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'src/.../permission.schema.ts',
        {
          _index: 1992,
          title: {},
          body: {
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/.../resume.schema.ts',
        {
          _index: 1993,
          title: {},
          body: {
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/.../role.schema.ts',
        {
          _index: 1994,
          title: {},
          body: {
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/.../sample.ts',
        {
          _index: 1998,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/.../subscriber.schema.ts',
        {
          _index: 1995,
          title: {},
          body: {
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/.../user.schema.ts',
        {
          _index: 1996,
          title: {},
          body: {
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/app.controller.ts',
        {
          _index: 6,
          title: {},
          body: { 'controllers/AppController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/app.module.ts',
        { _index: 61, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'src/app.service.ts',
        {
          _index: 108,
          title: {},
          body: { 'injectables/AppService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/app.service.ts:5',
        { _index: 113, title: {}, body: { 'injectables/AppService.html': {} } },
      ],
      [
        'src/auth/auth.controller.ts',
        {
          _index: 121,
          title: {},
          body: { 'controllers/AuthController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/auth/auth.controller.ts:37',
        {
          _index: 156,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'src/auth/auth.controller.ts:43',
        {
          _index: 172,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'src/auth/auth.controller.ts:49',
        {
          _index: 149,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'src/auth/auth.controller.ts:58',
        {
          _index: 166,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'src/auth/auth.controller.ts:68',
        {
          _index: 161,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'src/auth/auth.controller.ts:78',
        {
          _index: 137,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'src/auth/auth.controller.ts:85',
        {
          _index: 177,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'src/auth/auth.module.ts',
        { _index: 258, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'src/auth/auth.service.ts',
        {
          _index: 276,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/auth/auth.service.ts:15',
        {
          _index: 288,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'src/auth/auth.service.ts:155',
        {
          _index: 305,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'src/auth/auth.service.ts:162',
        {
          _index: 294,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'src/auth/auth.service.ts:187',
        {
          _index: 302,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'src/auth/auth.service.ts:24',
        {
          _index: 297,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'src/auth/auth.service.ts:41',
        {
          _index: 290,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'src/auth/auth.service.ts:80',
        {
          _index: 292,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'src/auth/auth.service.ts:89',
        {
          _index: 304,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'src/auth/auth.service.ts:97',
        {
          _index: 306,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'src/auth/jwt',
        {
          _index: 1039,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/auth/local',
        {
          _index: 1107,
          title: {},
          body: { 'injectables/LocalAuthGuard.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/auth/passport/jwt.strategy.ts',
        {
          _index: 1090,
          title: {},
          body: { 'injectables/JwtStrategy.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/auth/passport/jwt.strategy.ts:10',
        {
          _index: 1093,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'src/auth/passport/jwt.strategy.ts:22',
        {
          _index: 1095,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'src/auth/passport/local.strategy.ts',
        {
          _index: 1109,
          title: {},
          body: { 'injectables/LocalStrategy.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/auth/passport/local.strategy.ts:12',
        {
          _index: 1113,
          title: {},
          body: { 'injectables/LocalStrategy.html': {} },
        },
      ],
      [
        'src/auth/passport/local.strategy.ts:7',
        {
          _index: 1111,
          title: {},
          body: { 'injectables/LocalStrategy.html': {} },
        },
      ],
      [
        'src/companies/companies.controller.ts',
        {
          _index: 424,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/companies/companies.controller.ts:25',
        {
          _index: 432,
          title: {},
          body: { 'controllers/CompaniesController.html': {} },
        },
      ],
      [
        'src/companies/companies.controller.ts:32',
        {
          _index: 438,
          title: {},
          body: { 'controllers/CompaniesController.html': {} },
        },
      ],
      [
        'src/companies/companies.controller.ts:42',
        {
          _index: 442,
          title: {},
          body: { 'controllers/CompaniesController.html': {} },
        },
      ],
      [
        'src/companies/companies.controller.ts:47',
        {
          _index: 450,
          title: {},
          body: { 'controllers/CompaniesController.html': {} },
        },
      ],
      [
        'src/companies/companies.controller.ts:56',
        {
          _index: 446,
          title: {},
          body: { 'controllers/CompaniesController.html': {} },
        },
      ],
      [
        'src/companies/companies.module.ts',
        {
          _index: 477,
          title: {},
          body: { 'modules/CompaniesModule.html': {} },
        },
      ],
      [
        'src/companies/companies.service.ts',
        {
          _index: 484,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/companies/companies.service.ts:12',
        {
          _index: 487,
          title: {},
          body: { 'injectables/CompaniesService.html': {} },
        },
      ],
      [
        'src/companies/companies.service.ts:18',
        {
          _index: 489,
          title: {},
          body: { 'injectables/CompaniesService.html': {} },
        },
      ],
      [
        'src/companies/companies.service.ts:28',
        {
          _index: 491,
          title: {},
          body: { 'injectables/CompaniesService.html': {} },
        },
      ],
      [
        'src/companies/companies.service.ts:57',
        {
          _index: 492,
          title: {},
          body: { 'injectables/CompaniesService.html': {} },
        },
      ],
      [
        'src/companies/companies.service.ts:65',
        {
          _index: 494,
          title: {},
          body: { 'injectables/CompaniesService.html': {} },
        },
      ],
      [
        'src/companies/companies.service.ts:78',
        {
          _index: 493,
          title: {},
          body: { 'injectables/CompaniesService.html': {} },
        },
      ],
      [
        'src/companies/dto/create',
        {
          _index: 624,
          title: {},
          body: { 'classes/CreateCompanyDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/companies/dto/update',
        {
          _index: 1649,
          title: {},
          body: { 'classes/UpdateCompanyDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/companies/schemas/company.schemas',
        {
          _index: 1341,
          title: {},
          body: {
            'classes/Permission.html': {},
            'classes/Resume.html': {},
            'classes/Role.html': {},
          },
        },
      ],
      [
        'src/companies/schemas/company.schemas.ts',
        {
          _index: 542,
          title: {},
          body: {
            'classes/Company.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/companies/schemas/company.schemas.ts:12',
        { _index: 551, title: {}, body: { 'classes/Company.html': {} } },
      ],
      [
        'src/companies/schemas/company.schemas.ts:15',
        { _index: 559, title: {}, body: { 'classes/Company.html': {} } },
      ],
      [
        'src/companies/schemas/company.schemas.ts:18',
        { _index: 562, title: {}, body: { 'classes/Company.html': {} } },
      ],
      [
        'src/companies/schemas/company.schemas.ts:21',
        { _index: 556, title: {}, body: { 'classes/Company.html': {} } },
      ],
      [
        'src/companies/schemas/company.schemas.ts:26',
        { _index: 565, title: {}, body: { 'classes/Company.html': {} } },
      ],
      [
        'src/companies/schemas/company.schemas.ts:31',
        { _index: 558, title: {}, body: { 'classes/Company.html': {} } },
      ],
      [
        'src/companies/schemas/company.schemas.ts:37',
        { _index: 553, title: {}, body: { 'classes/Company.html': {} } },
      ],
      [
        'src/companies/schemas/company.schemas.ts:40',
        { _index: 564, title: {}, body: { 'classes/Company.html': {} } },
      ],
      [
        'src/companies/schemas/company.schemas.ts:43',
        { _index: 561, title: {}, body: { 'classes/Company.html': {} } },
      ],
      [
        'src/companies/schemas/company.schemas.ts:46',
        { _index: 557, title: {}, body: { 'classes/Company.html': {} } },
      ],
      [
        'src/companies/schemas/company.schemas.ts:9',
        { _index: 563, title: {}, body: { 'classes/Company.html': {} } },
      ],
      [
        'src/core/transform.interceptor.ts',
        {
          _index: 1412,
          title: {},
          body: {
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/core/transform.interceptor.ts:21',
        {
          _index: 1646,
          title: {},
          body: { 'injectables/TransformInterceptor.html': {} },
        },
      ],
      [
        'src/core/transform.interceptor.ts:24',
        {
          _index: 1648,
          title: {},
          body: { 'injectables/TransformInterceptor.html': {} },
        },
      ],
      [
        'src/databases/databases.controller.ts',
        {
          _index: 711,
          title: {},
          body: {
            'controllers/DatabasesController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/databases/databases.module.ts',
        {
          _index: 718,
          title: {},
          body: { 'modules/DatabasesModule.html': {} },
        },
      ],
      [
        'src/databases/databases.service.ts',
        {
          _index: 730,
          title: {},
          body: {
            'injectables/DatabasesService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/databases/databases.service.ts:15',
        {
          _index: 736,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'src/databases/databases.service.ts:30',
        {
          _index: 738,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'src/databases/sample',
        {
          _index: 1553,
          title: {},
          body: {
            'injectables/RolesService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'src/databases/sample.ts',
        {
          _index: 1840,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/decorator/customize',
        {
          _index: 184,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/CompaniesController.html': {},
            'controllers/FilesController.html': {},
            'controllers/JobsController.html': {},
            'injectables/JwtAuthGuard.html': {},
            'controllers/MailController.html': {},
            'injectables/MulterConfigService.html': {},
            'controllers/PermissionsController.html': {},
            'interfaces/Response.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/TransformInterceptor.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'src/decorator/customize.ts',
        {
          _index: 1841,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/files/dto/create',
        {
          _index: 633,
          title: {},
          body: { 'classes/CreateFileDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/files/dto/update',
        {
          _index: 1651,
          title: {},
          body: { 'classes/UpdateFileDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/files/entities/file.entity.ts',
        {
          _index: 789,
          title: {},
          body: { 'classes/File.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/files/files.controller.ts',
        {
          _index: 791,
          title: {},
          body: { 'controllers/FilesController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/files/files.controller.ts:140',
        {
          _index: 803,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'src/files/files.controller.ts:40',
        {
          _index: 820,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'src/files/files.controller.ts:96',
        {
          _index: 825,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'src/files/files.module.ts',
        { _index: 907, title: {}, body: { 'modules/FilesModule.html': {} } },
      ],
      [
        'src/files/files.service.ts',
        {
          _index: 914,
          title: {},
          body: { 'injectables/FilesService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/files/files.service.ts:11',
        {
          _index: 917,
          title: {},
          body: { 'injectables/FilesService.html': {} },
        },
      ],
      [
        'src/files/files.service.ts:15',
        {
          _index: 918,
          title: {},
          body: { 'injectables/FilesService.html': {} },
        },
      ],
      [
        'src/files/files.service.ts:19',
        {
          _index: 921,
          title: {},
          body: { 'injectables/FilesService.html': {} },
        },
      ],
      [
        'src/files/files.service.ts:23',
        {
          _index: 919,
          title: {},
          body: { 'injectables/FilesService.html': {} },
        },
      ],
      [
        'src/files/files.service.ts:7',
        {
          _index: 916,
          title: {},
          body: { 'injectables/FilesService.html': {} },
        },
      ],
      [
        'src/files/multer.config.ts',
        {
          _index: 1209,
          title: {},
          body: {
            'injectables/MulterConfigService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/files/multer.config.ts:13',
        {
          _index: 1245,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'src/files/multer.config.ts:19',
        {
          _index: 1231,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'src/files/multer.config.ts:27',
        {
          _index: 1223,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'src/files/multer.config.ts:39',
        {
          _index: 1236,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'src/files/multer.config.ts:47',
        {
          _index: 1215,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'src/files/multer.filter.ts',
        {
          _index: 1301,
          title: {},
          body: {
            'classes/MulterExceptionFilter.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/files/multer.filter.ts:20',
        {
          _index: 1315,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        'src/jobs/dto/create',
        {
          _index: 572,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/jobs/dto/update',
        {
          _index: 1653,
          title: {},
          body: { 'classes/UpdateJobDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/jobs/jobs.controller.ts',
        {
          _index: 967,
          title: {},
          body: { 'controllers/JobsController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/jobs/jobs.controller.ts:27',
        {
          _index: 972,
          title: {},
          body: { 'controllers/JobsController.html': {} },
        },
      ],
      [
        'src/jobs/jobs.controller.ts:34',
        {
          _index: 973,
          title: {},
          body: { 'controllers/JobsController.html': {} },
        },
      ],
      [
        'src/jobs/jobs.controller.ts:44',
        {
          _index: 977,
          title: {},
          body: { 'controllers/JobsController.html': {} },
        },
      ],
      [
        'src/jobs/jobs.controller.ts:56',
        {
          _index: 979,
          title: {},
          body: { 'controllers/JobsController.html': {} },
        },
      ],
      [
        'src/jobs/jobs.controller.ts:62',
        {
          _index: 984,
          title: {},
          body: { 'controllers/JobsController.html': {} },
        },
      ],
      [
        'src/jobs/jobs.controller.ts:72',
        {
          _index: 981,
          title: {},
          body: { 'controllers/JobsController.html': {} },
        },
      ],
      [
        'src/jobs/jobs.module.ts',
        { _index: 1003, title: {}, body: { 'modules/JobsModule.html': {} } },
      ],
      [
        'src/jobs/jobs.service.ts',
        {
          _index: 1007,
          title: {},
          body: { 'injectables/JobsService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/jobs/jobs.service.ts:126',
        {
          _index: 1014,
          title: {},
          body: { 'injectables/JobsService.html': {} },
        },
      ],
      [
        'src/jobs/jobs.service.ts:13',
        {
          _index: 1009,
          title: {},
          body: { 'injectables/JobsService.html': {} },
        },
      ],
      [
        'src/jobs/jobs.service.ts:132',
        {
          _index: 1017,
          title: {},
          body: { 'injectables/JobsService.html': {} },
        },
      ],
      [
        'src/jobs/jobs.service.ts:147',
        {
          _index: 1015,
          title: {},
          body: { 'injectables/JobsService.html': {} },
        },
      ],
      [
        'src/jobs/jobs.service.ts:19',
        {
          _index: 1011,
          title: {},
          body: { 'injectables/JobsService.html': {} },
        },
      ],
      [
        'src/jobs/jobs.service.ts:55',
        {
          _index: 1012,
          title: {},
          body: { 'injectables/JobsService.html': {} },
        },
      ],
      [
        'src/jobs/jobs.service.ts:85',
        {
          _index: 1013,
          title: {},
          body: { 'injectables/JobsService.html': {} },
        },
      ],
      [
        'src/jobs/schemas/job.schema',
        {
          _index: 1131,
          title: {},
          body: {
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'classes/Permission.html': {},
            'classes/Resume.html': {},
            'classes/Role.html': {},
          },
        },
      ],
      [
        'src/jobs/schemas/job.schema.ts',
        {
          _index: 944,
          title: {},
          body: {
            'classes/Job.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/jobs/schemas/job.schema.ts:12',
        { _index: 959, title: {}, body: { 'classes/Job.html': {} } },
      ],
      [
        'src/jobs/schemas/job.schema.ts:15',
        { _index: 945, title: {}, body: { 'classes/Job.html': {} } },
      ],
      [
        'src/jobs/schemas/job.schema.ts:22',
        { _index: 955, title: {}, body: { 'classes/Job.html': {} } },
      ],
      [
        'src/jobs/schemas/job.schema.ts:25',
        { _index: 958, title: {}, body: { 'classes/Job.html': {} } },
      ],
      [
        'src/jobs/schemas/job.schema.ts:28',
        { _index: 957, title: {}, body: { 'classes/Job.html': {} } },
      ],
      [
        'src/jobs/schemas/job.schema.ts:31',
        { _index: 954, title: {}, body: { 'classes/Job.html': {} } },
      ],
      [
        'src/jobs/schemas/job.schema.ts:34',
        { _index: 950, title: {}, body: { 'classes/Job.html': {} } },
      ],
      [
        'src/jobs/schemas/job.schema.ts:37',
        { _index: 960, title: {}, body: { 'classes/Job.html': {} } },
      ],
      [
        'src/jobs/schemas/job.schema.ts:40',
        { _index: 951, title: {}, body: { 'classes/Job.html': {} } },
      ],
      [
        'src/jobs/schemas/job.schema.ts:43',
        { _index: 952, title: {}, body: { 'classes/Job.html': {} } },
      ],
      [
        'src/jobs/schemas/job.schema.ts:46',
        { _index: 947, title: {}, body: { 'classes/Job.html': {} } },
      ],
      [
        'src/jobs/schemas/job.schema.ts:51',
        { _index: 962, title: {}, body: { 'classes/Job.html': {} } },
      ],
      [
        'src/jobs/schemas/job.schema.ts:56',
        { _index: 949, title: {}, body: { 'classes/Job.html': {} } },
      ],
      [
        'src/jobs/schemas/job.schema.ts:62',
        { _index: 946, title: {}, body: { 'classes/Job.html': {} } },
      ],
      [
        'src/jobs/schemas/job.schema.ts:65',
        { _index: 961, title: {}, body: { 'classes/Job.html': {} } },
      ],
      [
        'src/jobs/schemas/job.schema.ts:68',
        { _index: 953, title: {}, body: { 'classes/Job.html': {} } },
      ],
      [
        'src/jobs/schemas/job.schema.ts:71',
        { _index: 948, title: {}, body: { 'classes/Job.html': {} } },
      ],
      [
        'src/jobs/schemas/job.schema.ts:9',
        { _index: 956, title: {}, body: { 'classes/Job.html': {} } },
      ],
      [
        'src/mail/mail.controller.ts',
        {
          _index: 1117,
          title: {},
          body: { 'controllers/MailController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/mail/mail.controller.ts:37',
        {
          _index: 1122,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'src/mail/mail.module',
        { _index: 268, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'src/mail/mail.module.ts',
        { _index: 1172, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      [
        'src/mail/mail.service',
        {
          _index: 307,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'src/mail/mail.service.ts',
        {
          _index: 1196,
          title: {},
          body: { 'injectables/MailService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/mail/mail.service.ts:5',
        {
          _index: 1199,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'src/mail/mail.service.ts:8',
        {
          _index: 1201,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'src/main.ts',
        {
          _index: 1849,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'src/permissions/dto/create',
        {
          _index: 653,
          title: {},
          body: { 'classes/CreatePermissionDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/permissions/dto/update',
        {
          _index: 1655,
          title: {},
          body: { 'classes/UpdatePermissionDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/permissions/permissions.controller.ts',
        {
          _index: 1344,
          title: {},
          body: {
            'controllers/PermissionsController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/permissions/permissions.controller.ts:16',
        {
          _index: 1347,
          title: {},
          body: { 'controllers/PermissionsController.html': {} },
        },
      ],
      [
        'src/permissions/permissions.controller.ts:22',
        {
          _index: 1349,
          title: {},
          body: { 'controllers/PermissionsController.html': {} },
        },
      ],
      [
        'src/permissions/permissions.controller.ts:32',
        {
          _index: 1351,
          title: {},
          body: { 'controllers/PermissionsController.html': {} },
        },
      ],
      [
        'src/permissions/permissions.controller.ts:38',
        {
          _index: 1355,
          title: {},
          body: { 'controllers/PermissionsController.html': {} },
        },
      ],
      [
        'src/permissions/permissions.controller.ts:44',
        {
          _index: 1352,
          title: {},
          body: { 'controllers/PermissionsController.html': {} },
        },
      ],
      [
        'src/permissions/permissions.module.ts',
        {
          _index: 1375,
          title: {},
          body: { 'modules/PermissionsModule.html': {} },
        },
      ],
      [
        'src/permissions/permissions.service.ts',
        {
          _index: 1378,
          title: {},
          body: {
            'injectables/PermissionsService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/permissions/permissions.service.ts:13',
        {
          _index: 1380,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        'src/permissions/permissions.service.ts:19',
        {
          _index: 1381,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        'src/permissions/permissions.service.ts:39',
        {
          _index: 1382,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        'src/permissions/permissions.service.ts:71',
        {
          _index: 1383,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        'src/permissions/permissions.service.ts:78',
        {
          _index: 1385,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        'src/permissions/permissions.service.ts:96',
        {
          _index: 1384,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        'src/permissions/schemas/permission.schema',
        {
          _index: 724,
          title: {},
          body: {
            'modules/DatabasesModule.html': {},
            'injectables/DatabasesService.html': {},
            'classes/Role.html': {},
          },
        },
      ],
      [
        'src/permissions/schemas/permission.schema.ts',
        {
          _index: 1329,
          title: {},
          body: {
            'classes/Permission.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/permissions/schemas/permission.schema.ts:11',
        { _index: 1338, title: {}, body: { 'classes/Permission.html': {} } },
      ],
      [
        'src/permissions/schemas/permission.schema.ts:14',
        { _index: 1330, title: {}, body: { 'classes/Permission.html': {} } },
      ],
      [
        'src/permissions/schemas/permission.schema.ts:17',
        { _index: 1336, title: {}, body: { 'classes/Permission.html': {} } },
      ],
      [
        'src/permissions/schemas/permission.schema.ts:20',
        { _index: 1337, title: {}, body: { 'classes/Permission.html': {} } },
      ],
      [
        'src/permissions/schemas/permission.schema.ts:23',
        { _index: 1332, title: {}, body: { 'classes/Permission.html': {} } },
      ],
      [
        'src/permissions/schemas/permission.schema.ts:29',
        { _index: 1340, title: {}, body: { 'classes/Permission.html': {} } },
      ],
      [
        'src/permissions/schemas/permission.schema.ts:35',
        { _index: 1334, title: {}, body: { 'classes/Permission.html': {} } },
      ],
      [
        'src/permissions/schemas/permission.schema.ts:41',
        { _index: 1331, title: {}, body: { 'classes/Permission.html': {} } },
      ],
      [
        'src/permissions/schemas/permission.schema.ts:44',
        { _index: 1339, title: {}, body: { 'classes/Permission.html': {} } },
      ],
      [
        'src/permissions/schemas/permission.schema.ts:47',
        { _index: 1335, title: {}, body: { 'classes/Permission.html': {} } },
      ],
      [
        'src/permissions/schemas/permission.schema.ts:50',
        { _index: 1333, title: {}, body: { 'classes/Permission.html': {} } },
      ],
      [
        'src/resumes/dto/create',
        {
          _index: 662,
          title: {},
          body: {
            'classes/CreateResumeDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/resumes/dto/update',
        {
          _index: 928,
          title: {},
          body: {
            'classes/History.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/resumes/resumes.controller.ts',
        {
          _index: 1448,
          title: {},
          body: {
            'controllers/ResumesController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/resumes/resumes.controller.ts:25',
        {
          _index: 1452,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        'src/resumes/resumes.controller.ts:31',
        {
          _index: 1458,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        'src/resumes/resumes.controller.ts:37',
        {
          _index: 1453,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        'src/resumes/resumes.controller.ts:48',
        {
          _index: 1454,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        'src/resumes/resumes.controller.ts:54',
        {
          _index: 1460,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        'src/resumes/resumes.controller.ts:64',
        {
          _index: 1459,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        'src/resumes/resumes.module.ts',
        { _index: 1475, title: {}, body: { 'modules/ResumesModule.html': {} } },
      ],
      [
        'src/resumes/resumes.service.ts',
        {
          _index: 1479,
          title: {},
          body: { 'injectables/ResumesService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/resumes/resumes.service.ts:109',
        {
          _index: 1491,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'src/resumes/resumes.service.ts:12',
        {
          _index: 1482,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'src/resumes/resumes.service.ts:137',
        {
          _index: 1490,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'src/resumes/resumes.service.ts:18',
        {
          _index: 1485,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'src/resumes/resumes.service.ts:48',
        {
          _index: 1486,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'src/resumes/resumes.service.ts:84',
        {
          _index: 1489,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'src/resumes/resumes.service.ts:91',
        {
          _index: 1488,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'src/resumes/schemas/resume.schema.ts',
        {
          _index: 1426,
          title: {},
          body: {
            'classes/Resume.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/resumes/schemas/resume.schema.ts:11',
        { _index: 1434, title: {}, body: { 'classes/Resume.html': {} } },
      ],
      [
        'src/resumes/schemas/resume.schema.ts:14',
        { _index: 1442, title: {}, body: { 'classes/Resume.html': {} } },
      ],
      [
        'src/resumes/schemas/resume.schema.ts:17',
        { _index: 1441, title: {}, body: { 'classes/Resume.html': {} } },
      ],
      [
        'src/resumes/schemas/resume.schema.ts:20',
        { _index: 1438, title: {}, body: { 'classes/Resume.html': {} } },
      ],
      [
        'src/resumes/schemas/resume.schema.ts:23',
        { _index: 1429, title: {}, body: { 'classes/Resume.html': {} } },
      ],
      [
        'src/resumes/schemas/resume.schema.ts:26',
        { _index: 1437, title: {}, body: { 'classes/Resume.html': {} } },
      ],
      [
        'src/resumes/schemas/resume.schema.ts:40',
        { _index: 1435, title: {}, body: { 'classes/Resume.html': {} } },
      ],
      [
        'src/resumes/schemas/resume.schema.ts:55',
        { _index: 1431, title: {}, body: { 'classes/Resume.html': {} } },
      ],
      [
        'src/resumes/schemas/resume.schema.ts:66',
        { _index: 1440, title: {}, body: { 'classes/Resume.html': {} } },
      ],
      [
        'src/resumes/schemas/resume.schema.ts:77',
        { _index: 1433, title: {}, body: { 'classes/Resume.html': {} } },
      ],
      [
        'src/resumes/schemas/resume.schema.ts:83',
        { _index: 1430, title: {}, body: { 'classes/Resume.html': {} } },
      ],
      [
        'src/resumes/schemas/resume.schema.ts:86',
        { _index: 1439, title: {}, body: { 'classes/Resume.html': {} } },
      ],
      [
        'src/resumes/schemas/resume.schema.ts:89',
        { _index: 1436, title: {}, body: { 'classes/Resume.html': {} } },
      ],
      [
        'src/resumes/schemas/resume.schema.ts:92',
        { _index: 1432, title: {}, body: { 'classes/Resume.html': {} } },
      ],
      [
        'src/roles/dto/create',
        {
          _index: 677,
          title: {},
          body: { 'classes/CreateRoleDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/roles/dto/update',
        {
          _index: 1659,
          title: {},
          body: { 'classes/UpdateRoleDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/roles/roles.controller.ts',
        {
          _index: 1521,
          title: {},
          body: { 'controllers/RolesController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/roles/roles.controller.ts:25',
        {
          _index: 1524,
          title: {},
          body: { 'controllers/RolesController.html': {} },
        },
      ],
      [
        'src/roles/roles.controller.ts:31',
        {
          _index: 1525,
          title: {},
          body: { 'controllers/RolesController.html': {} },
        },
      ],
      [
        'src/roles/roles.controller.ts:41',
        {
          _index: 1526,
          title: {},
          body: { 'controllers/RolesController.html': {} },
        },
      ],
      [
        'src/roles/roles.controller.ts:47',
        {
          _index: 1529,
          title: {},
          body: { 'controllers/RolesController.html': {} },
        },
      ],
      [
        'src/roles/roles.controller.ts:57',
        {
          _index: 1527,
          title: {},
          body: { 'controllers/RolesController.html': {} },
        },
      ],
      [
        'src/roles/roles.module',
        { _index: 267, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'src/roles/roles.module.ts',
        { _index: 1542, title: {}, body: { 'modules/RolesModule.html': {} } },
      ],
      [
        'src/roles/roles.service',
        {
          _index: 191,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/JwtStrategy.html': {},
          },
        },
      ],
      [
        'src/roles/roles.service.ts',
        {
          _index: 1545,
          title: {},
          body: { 'injectables/RolesService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/roles/roles.service.ts:112',
        {
          _index: 1551,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'src/roles/roles.service.ts:14',
        {
          _index: 1547,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'src/roles/roles.service.ts:19',
        {
          _index: 1548,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'src/roles/roles.service.ts:44',
        {
          _index: 1549,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'src/roles/roles.service.ts:75',
        {
          _index: 1550,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'src/roles/roles.service.ts:85',
        {
          _index: 1552,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'src/roles/schemas/role.schema',
        {
          _index: 726,
          title: {},
          body: {
            'modules/DatabasesModule.html': {},
            'injectables/DatabasesService.html': {},
            'classes/User.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'src/roles/schemas/role.schema.ts',
        {
          _index: 1507,
          title: {},
          body: {
            'classes/Role.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/roles/schemas/role.schema.ts:12',
        { _index: 1515, title: {}, body: { 'classes/Role.html': {} } },
      ],
      [
        'src/roles/schemas/role.schema.ts:15',
        { _index: 1512, title: {}, body: { 'classes/Role.html': {} } },
      ],
      [
        'src/roles/schemas/role.schema.ts:18',
        { _index: 1513, title: {}, body: { 'classes/Role.html': {} } },
      ],
      [
        'src/roles/schemas/role.schema.ts:21',
        { _index: 1516, title: {}, body: { 'classes/Role.html': {} } },
      ],
      [
        'src/roles/schemas/role.schema.ts:24',
        { _index: 1509, title: {}, body: { 'classes/Role.html': {} } },
      ],
      [
        'src/roles/schemas/role.schema.ts:30',
        { _index: 1518, title: {}, body: { 'classes/Role.html': {} } },
      ],
      [
        'src/roles/schemas/role.schema.ts:36',
        { _index: 1511, title: {}, body: { 'classes/Role.html': {} } },
      ],
      [
        'src/roles/schemas/role.schema.ts:42',
        { _index: 1508, title: {}, body: { 'classes/Role.html': {} } },
      ],
      [
        'src/roles/schemas/role.schema.ts:45',
        { _index: 1517, title: {}, body: { 'classes/Role.html': {} } },
      ],
      [
        'src/roles/schemas/role.schema.ts:48',
        { _index: 1514, title: {}, body: { 'classes/Role.html': {} } },
      ],
      [
        'src/roles/schemas/role.schema.ts:51',
        { _index: 1510, title: {}, body: { 'classes/Role.html': {} } },
      ],
      [
        'src/subscribers/dto/create',
        {
          _index: 689,
          title: {},
          body: { 'classes/CreateSubscriberDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/subscribers/dto/update',
        {
          _index: 1661,
          title: {},
          body: { 'classes/UpdateSubscriberDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/subscribers/schemas/subscriber.schema',
        {
          _index: 1130,
          title: {},
          body: {
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
          },
        },
      ],
      [
        'src/subscribers/schemas/subscriber.schema.ts',
        {
          _index: 1571,
          title: {},
          body: {
            'classes/Subscriber.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/subscribers/schemas/subscriber.schema.ts:12',
        { _index: 1578, title: {}, body: { 'classes/Subscriber.html': {} } },
      ],
      [
        'src/subscribers/schemas/subscriber.schema.ts:15',
        { _index: 1579, title: {}, body: { 'classes/Subscriber.html': {} } },
      ],
      [
        'src/subscribers/schemas/subscriber.schema.ts:18',
        { _index: 1573, title: {}, body: { 'classes/Subscriber.html': {} } },
      ],
      [
        'src/subscribers/schemas/subscriber.schema.ts:24',
        { _index: 1581, title: {}, body: { 'classes/Subscriber.html': {} } },
      ],
      [
        'src/subscribers/schemas/subscriber.schema.ts:30',
        { _index: 1575, title: {}, body: { 'classes/Subscriber.html': {} } },
      ],
      [
        'src/subscribers/schemas/subscriber.schema.ts:36',
        { _index: 1572, title: {}, body: { 'classes/Subscriber.html': {} } },
      ],
      [
        'src/subscribers/schemas/subscriber.schema.ts:39',
        { _index: 1580, title: {}, body: { 'classes/Subscriber.html': {} } },
      ],
      [
        'src/subscribers/schemas/subscriber.schema.ts:42',
        { _index: 1577, title: {}, body: { 'classes/Subscriber.html': {} } },
      ],
      [
        'src/subscribers/schemas/subscriber.schema.ts:45',
        { _index: 1574, title: {}, body: { 'classes/Subscriber.html': {} } },
      ],
      [
        'src/subscribers/schemas/subscriber.schema.ts:9',
        { _index: 1576, title: {}, body: { 'classes/Subscriber.html': {} } },
      ],
      [
        'src/subscribers/subscribers.controller.ts',
        {
          _index: 1584,
          title: {},
          body: {
            'controllers/SubscribersController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/subscribers/subscribers.controller.ts:29',
        {
          _index: 1587,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        'src/subscribers/subscribers.controller.ts:39',
        {
          _index: 1594,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        'src/subscribers/subscribers.controller.ts:45',
        {
          _index: 1588,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        'src/subscribers/subscribers.controller.ts:55',
        {
          _index: 1589,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        'src/subscribers/subscribers.controller.ts:62',
        {
          _index: 1599,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        'src/subscribers/subscribers.controller.ts:71',
        {
          _index: 1595,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        'src/subscribers/subscribers.module.ts',
        {
          _index: 1617,
          title: {},
          body: { 'modules/SubscribersModule.html': {} },
        },
      ],
      [
        'src/subscribers/subscribers.service.ts',
        {
          _index: 1620,
          title: {},
          body: {
            'injectables/SubscribersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/subscribers/subscribers.service.ts:111',
        {
          _index: 1628,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'src/subscribers/subscribers.service.ts:13',
        {
          _index: 1623,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'src/subscribers/subscribers.service.ts:19',
        {
          _index: 1624,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'src/subscribers/subscribers.service.ts:40',
        {
          _index: 1625,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'src/subscribers/subscribers.service.ts:71',
        {
          _index: 1626,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'src/subscribers/subscribers.service.ts:79',
        {
          _index: 1630,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'src/subscribers/subscribers.service.ts:94',
        {
          _index: 1629,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'src/users/dto/create',
        {
          _index: 186,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'classes/Company-2.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/JobsController.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UserLoginDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/users/dto/update',
        {
          _index: 1664,
          title: {},
          body: { 'classes/UpdateUserDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/users/schemas/user.schema',
        {
          _index: 721,
          title: {},
          body: {
            'modules/DatabasesModule.html': {},
            'injectables/DatabasesService.html': {},
            'injectables/JobsService.html': {},
          },
        },
      ],
      [
        'src/users/schemas/user.schema.ts',
        {
          _index: 1679,
          title: {},
          body: {
            'classes/User.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'src/users/schemas/user.schema.ts:10',
        { _index: 1691, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/users/schemas/user.schema.ts:13',
        { _index: 1688, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/users/schemas/user.schema.ts:16',
        { _index: 1694, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/users/schemas/user.schema.ts:19',
        { _index: 1682, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/users/schemas/user.schema.ts:22',
        { _index: 1689, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/users/schemas/user.schema.ts:25',
        { _index: 1681, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/users/schemas/user.schema.ts:28',
        { _index: 1683, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/users/schemas/user.schema.ts:31',
        { _index: 1696, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/users/schemas/user.schema.ts:34',
        { _index: 1695, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/users/schemas/user.schema.ts:37',
        { _index: 1685, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/users/schemas/user.schema.ts:42',
        { _index: 1698, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/users/schemas/user.schema.ts:47',
        { _index: 1687, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/users/schemas/user.schema.ts:53',
        { _index: 1692, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/users/schemas/user.schema.ts:56',
        { _index: 1693, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/users/schemas/user.schema.ts:59',
        { _index: 1684, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/users/schemas/user.schema.ts:62',
        { _index: 1697, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/users/schemas/user.schema.ts:65',
        { _index: 1690, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/users/schemas/user.schema.ts:68',
        { _index: 1686, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/users/users.controller.ts',
        {
          _index: 1704,
          title: {},
          body: { 'controllers/UsersController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/users/users.controller.ts:26',
        {
          _index: 1711,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'src/users/users.controller.ts:36',
        {
          _index: 1713,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'src/users/users.controller.ts:45',
        {
          _index: 1709,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'src/users/users.controller.ts:65',
        {
          _index: 1715,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'src/users/users.controller.ts:72',
        {
          _index: 1718,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'src/users/users.controller.ts:83',
        {
          _index: 1716,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'src/users/users.interfacce',
        {
          _index: 189,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
          },
        },
      ],
      [
        'src/users/users.interfacce.ts',
        {
          _index: 942,
          title: {},
          body: { 'interfaces/IUser.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/users/users.module',
        { _index: 259, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'src/users/users.module.ts',
        { _index: 1744, title: {}, body: { 'modules/UsersModule.html': {} } },
      ],
      [
        'src/users/users.service',
        {
          _index: 198,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'modules/DatabasesModule.html': {},
            'injectables/DatabasesService.html': {},
          },
        },
      ],
      [
        'src/users/users.service.ts',
        {
          _index: 1747,
          title: {},
          body: { 'injectables/UsersService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/users/users.service.ts:106',
        {
          _index: 1765,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'src/users/users.service.ts:116',
        {
          _index: 1768,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'src/users/users.service.ts:119',
        {
          _index: 1771,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'src/users/users.service.ts:134',
        {
          _index: 1769,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'src/users/users.service.ts:159',
        {
          _index: 1770,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'src/users/users.service.ts:187',
        {
          _index: 1777,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'src/users/users.service.ts:191',
        {
          _index: 1775,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'src/users/users.service.ts:198',
        {
          _index: 1762,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'src/users/users.service.ts:203',
        {
          _index: 1774,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'src/users/users.service.ts:21',
        {
          _index: 1755,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'src/users/users.service.ts:210',
        {
          _index: 1773,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'src/users/users.service.ts:216',
        {
          _index: 1757,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'src/users/users.service.ts:30',
        {
          _index: 1776,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'src/users/users.service.ts:36',
        {
          _index: 1759,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'src/users/users.service.ts:66',
        {
          _index: 1760,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'src/users/users.service.ts:96',
        {
          _index: 1763,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      ['start:dev', { _index: 1942, title: {}, body: { 'index.html': {} } }],
      ['start:prod', { _index: 1946, title: {}, body: { 'index.html': {} } }],
      [
        'startdate',
        {
          _index: 601,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
            'classes/Job.html': {},
            'injectables/JobsService.html': {},
          },
        },
      ],
      ['started', { _index: 1897, title: { 'index.html': {} }, body: {} }],
      [
        'statements',
        { _index: 1827, title: {}, body: { 'coverage.html': {} } },
      ],
      [
        'status',
        {
          _index: 666,
          title: {},
          body: {
            'classes/CreateResumeDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/History.html': {},
            'classes/MulterExceptionFilter.html': {},
            'classes/Resume.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
          },
        },
      ],
      [
        'statuscode',
        {
          _index: 1324,
          title: {},
          body: {
            'classes/MulterExceptionFilter.html': {},
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
          },
        },
      ],
      [
        'storage',
        {
          _index: 1270,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'strategy',
        {
          _index: 1097,
          title: {},
          body: {
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
          },
        },
      ],
      [
        'strict',
        { _index: 1176, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      [
        'string',
        {
          _index: 115,
          title: {},
          body: {
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/FilesController.html': {},
            'injectables/FilesService.html': {},
            'classes/History.html': {},
            'interfaces/IUser.html': {},
            'classes/Job.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/Permission.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'classes/RegisterUserDto.html': {},
            'interfaces/Response.html': {},
            'classes/Resume.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'su',
        {
          _index: 1790,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'sub',
        {
          _index: 343,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'subject',
        {
          _index: 1162,
          title: {},
          body: {
            'controllers/MailController.html': {},
            'injectables/MailService.html': {},
          },
        },
      ],
      [
        'subs',
        {
          _index: 1147,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'subs.name',
        {
          _index: 1168,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'subs.skills',
        {
          _index: 1149,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'subscriber',
        {
          _index: 1128,
          title: { 'classes/Subscriber.html': {} },
          body: {
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'classes/Subscriber.html': {},
            'controllers/SubscribersController.html': {},
            'modules/SubscribersModule.html': {},
            'injectables/SubscribersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        "subscriber's",
        {
          _index: 1592,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        'subscriber.dto',
        {
          _index: 1602,
          title: {},
          body: {
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'classes/UpdateSubscriberDto.html': {},
          },
        },
      ],
      [
        'subscriber.dto.ts',
        {
          _index: 690,
          title: {},
          body: {
            'classes/CreateSubscriberDto.html': {},
            'classes/UpdateSubscriberDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'subscriber.dto.ts:14',
        {
          _index: 695,
          title: {},
          body: { 'classes/CreateSubscriberDto.html': {} },
        },
      ],
      [
        'subscriber.dto.ts:5',
        {
          _index: 694,
          title: {},
          body: { 'classes/CreateSubscriberDto.html': {} },
        },
      ],
      [
        'subscriber.dto.ts:9',
        {
          _index: 693,
          title: {},
          body: { 'classes/CreateSubscriberDto.html': {} },
        },
      ],
      [
        'subscriber.name',
        {
          _index: 1195,
          title: {},
          body: {
            'modules/MailModule.html': {},
            'modules/SubscribersModule.html': {},
          },
        },
      ],
      [
        'subscriberdocument',
        {
          _index: 1129,
          title: {},
          body: {
            'controllers/MailController.html': {},
            'classes/Subscriber.html': {},
            'injectables/SubscribersService.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'subscribermodel',
        {
          _index: 1137,
          title: {},
          body: {
            'controllers/MailController.html': {},
            'injectables/SubscribersService.html': {},
          },
        },
      ],
      [
        'subscribers',
        {
          _index: 1145,
          title: {},
          body: {
            'controllers/MailController.html': {},
            'controllers/SubscribersController.html': {},
          },
        },
      ],
      [
        'subscribers.controller',
        {
          _index: 1618,
          title: {},
          body: { 'modules/SubscribersModule.html': {} },
        },
      ],
      [
        'subscribers.service',
        {
          _index: 1601,
          title: {},
          body: {
            'controllers/SubscribersController.html': {},
            'modules/SubscribersModule.html': {},
          },
        },
      ],
      [
        'subscribers/subscribers.module',
        { _index: 82, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'subscriberschema',
        {
          _index: 1180,
          title: {},
          body: {
            'modules/MailModule.html': {},
            'classes/Subscriber.html': {},
            'modules/SubscribersModule.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'subscriberscontroller',
        {
          _index: 1583,
          title: { 'controllers/SubscribersController.html': {} },
          body: {
            'controllers/SubscribersController.html': {},
            'modules/SubscribersModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'subscribersmodule',
        {
          _index: 56,
          title: { 'modules/SubscribersModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/SubscribersModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'subscribersservice',
        {
          _index: 1600,
          title: { 'injectables/SubscribersService.html': {} },
          body: {
            'controllers/SubscribersController.html': {},
            'modules/SubscribersModule.html': {},
            'injectables/SubscribersService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'subsskills',
        {
          _index: 1148,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'successfully',
        {
          _index: 895,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'sunday',
        {
          _index: 1144,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'super',
        {
          _index: 1059,
          title: {},
          body: {
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'super.canactivate(context',
        {
          _index: 1064,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'supertest',
        { _index: 1888, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'support',
        {
          _index: 1160,
          title: {},
          body: {
            'controllers/MailController.html': {},
            'injectables/MailService.html': {},
            'modules.html': {},
          },
        },
      ],
      ['supports', { _index: 1903, title: {}, body: { 'index.html': {} } }],
      ['svg', { _index: 1978, title: {}, body: { 'modules.html': {} } }],
      [
        'swagger',
        {
          _index: 1890,
          title: {},
          body: { 'dependencies.html': {}, 'index.html': {} },
        },
      ],
      [
        'system',
        {
          _index: 768,
          title: {},
          body: { 'injectables/DatabasesService.html': {}, 'index.html': {} },
        },
      ],
      [
        'sách',
        {
          _index: 814,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      ['sửa', { _index: 1444, title: {}, body: { 'classes/Resume.html': {} } }],
      [
        't',
        {
          _index: 338,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/FilesController.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['table', { _index: 1856, title: {}, body: { 'coverage.html': {} } }],
      [
        "tablesort(document.getelementbyid('coverage",
        { _index: 1855, title: {}, body: { 'coverage.html': {} } },
      ],
      [
        'tai',
        {
          _index: 1394,
          title: {},
          body: {
            'injectables/PermissionsService.html': {},
            'injectables/RolesService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'targetdirectory',
        {
          _index: 1227,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'targetendpoint',
        {
          _index: 1077,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        "targetendpoint.startswith('/api/v1/auth",
        {
          _index: 1084,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'targetmethod',
        {
          _index: 1075,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'team',
        {
          _index: 1161,
          title: {},
          body: {
            'controllers/MailController.html': {},
            'injectables/MailService.html': {},
          },
        },
      ],
      ['technologies', { _index: 1907, title: {}, body: { 'index.html': {} } }],
      [
        'temp',
        {
          _index: 218,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/JwtStrategy.html': {},
          },
        },
      ],
      [
        'temp.permissions',
        {
          _index: 222,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'temp?.permissions',
        {
          _index: 331,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/JwtStrategy.html': {},
          },
        },
      ],
      [
        'template',
        {
          _index: 1167,
          title: {},
          body: {
            'controllers/MailController.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
          },
        },
      ],
      [
        'templates',
        { _index: 1190, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      ['test', { _index: 1956, title: {}, body: { 'index.html': {} } }],
      ['test:cov', { _index: 1959, title: {}, body: { 'index.html': {} } }],
      ['test:e2e', { _index: 1958, title: {}, body: { 'index.html': {} } }],
      [
        'testcron',
        {
          _index: 1139,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      ['tests', { _index: 1955, title: {}, body: { 'index.html': {} } }],
      [
        'text',
        {
          _index: 1205,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'th',
        {
          _index: 1025,
          title: {},
          body: {
            'injectables/JobsService.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'tham',
        {
          _index: 314,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'thay',
        {
          _index: 1300,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'theo',
        {
          _index: 1328,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        'thi',
        {
          _index: 1798,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'this.authservice.login(req.user',
        {
          _index: 209,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'this.authservice.logout(response',
        {
          _index: 229,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'this.authservice.processnewtoken(refreshtoken',
        {
          _index: 227,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'this.authservice.register(registeruserdto',
        {
          _index: 213,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'this.authservice.sendotp(email',
        {
          _index: 233,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'this.authservice.validateuser(username',
        {
          _index: 1114,
          title: {},
          body: { 'injectables/LocalStrategy.html': {} },
        },
      ],
      [
        'this.companiesservice.create(createcompanydto',
        {
          _index: 463,
          title: {},
          body: { 'controllers/CompaniesController.html': {} },
        },
      ],
      [
        'this.companiesservice.findall(+currentpage',
        {
          _index: 467,
          title: {},
          body: { 'controllers/CompaniesController.html': {} },
        },
      ],
      [
        'this.companiesservice.findone(id',
        {
          _index: 470,
          title: {},
          body: { 'controllers/CompaniesController.html': {} },
        },
      ],
      [
        'this.companiesservice.remove(id',
        {
          _index: 474,
          title: {},
          body: { 'controllers/CompaniesController.html': {} },
        },
      ],
      [
        'this.companiesservice.update(id',
        {
          _index: 472,
          title: {},
          body: { 'controllers/CompaniesController.html': {} },
        },
      ],
      [
        'this.companymodel',
        {
          _index: 520,
          title: {},
          body: { 'injectables/CompaniesService.html': {} },
        },
      ],
      [
        'this.companymodel.create',
        {
          _index: 503,
          title: {},
          body: { 'injectables/CompaniesService.html': {} },
        },
      ],
      [
        'this.companymodel.find(filter)).length',
        {
          _index: 516,
          title: {},
          body: { 'injectables/CompaniesService.html': {} },
        },
      ],
      [
        'this.companymodel.findbyid(id',
        {
          _index: 536,
          title: {},
          body: { 'injectables/CompaniesService.html': {} },
        },
      ],
      [
        'this.companymodel.softdelete',
        {
          _index: 540,
          title: {},
          body: { 'injectables/CompaniesService.html': {} },
        },
      ],
      [
        'this.companymodel.updateone',
        {
          _index: 537,
          title: {},
          body: { 'injectables/CompaniesService.html': {} },
        },
      ],
      [
        "this.configservice.get('init_password",
        {
          _index: 774,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        "this.configservice.get('jwt_refresh_token_secret",
        {
          _index: 365,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        "this.configservice.get('should_init",
        {
          _index: 751,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'this.createrefreshtoken(payload',
        {
          _index: 347,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.ensureexists(uploadpath',
        {
          _index: 1281,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'this.gethashpassword(createuserdto.password',
        {
          _index: 1793,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'this.gethashpassword(password',
        {
          _index: 1805,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'this.jobmodel',
        {
          _index: 1022,
          title: {},
          body: { 'injectables/JobsService.html': {} },
        },
      ],
      [
        'this.jobmodel.countdocuments(filter',
        {
          _index: 1021,
          title: {},
          body: { 'injectables/JobsService.html': {} },
        },
      ],
      [
        'this.jobmodel.create',
        {
          _index: 1020,
          title: {},
          body: { 'injectables/JobsService.html': {} },
        },
      ],
      [
        'this.jobmodel.find',
        {
          _index: 1151,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'this.jobmodel.findbyid(id',
        {
          _index: 1035,
          title: {},
          body: { 'injectables/JobsService.html': {} },
        },
      ],
      [
        'this.jobmodel.softdelete',
        {
          _index: 1038,
          title: {},
          body: { 'injectables/JobsService.html': {} },
        },
      ],
      [
        'this.jobmodel.updateone',
        {
          _index: 1037,
          title: {},
          body: { 'injectables/JobsService.html': {} },
        },
      ],
      [
        'this.jobsservice.create(createjobdto',
        {
          _index: 991,
          title: {},
          body: { 'controllers/JobsController.html': {} },
        },
      ],
      [
        'this.jobsservice.findall(+currentpage',
        {
          _index: 992,
          title: {},
          body: { 'controllers/JobsController.html': {} },
        },
      ],
      [
        'this.jobsservice.findalladmin(+currentpage',
        {
          _index: 994,
          title: {},
          body: { 'controllers/JobsController.html': {} },
        },
      ],
      [
        'this.jobsservice.findone(id',
        {
          _index: 996,
          title: {},
          body: { 'controllers/JobsController.html': {} },
        },
      ],
      [
        'this.jobsservice.remove(id',
        {
          _index: 1000,
          title: {},
          body: { 'controllers/JobsController.html': {} },
        },
      ],
      [
        'this.jobsservice.update(id',
        {
          _index: 998,
          title: {},
          body: { 'controllers/JobsController.html': {} },
        },
      ],
      [
        'this.jwtservice.sign(payload',
        {
          _index: 359,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.jwtservice.verify(refreshtoken',
        {
          _index: 367,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.mailerservice.sendmail',
        {
          _index: 1158,
          title: {},
          body: {
            'controllers/MailController.html': {},
            'injectables/MailService.html': {},
          },
        },
      ],
      [
        'this.mailservice.sendotptoemail(user.email',
        {
          _index: 407,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.permissionmodel.count',
        {
          _index: 756,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'this.permissionmodel.create',
        {
          _index: 1396,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        'this.permissionmodel.find(filter',
        {
          _index: 1400,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        'this.permissionmodel.find(filter)).length',
        {
          _index: 1399,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        "this.permissionmodel.find({}).select('_id",
        {
          _index: 761,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'this.permissionmodel.findbyid(id',
        {
          _index: 1401,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        'this.permissionmodel.findone',
        {
          _index: 1387,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        'this.permissionmodel.insertmany(init_permissions',
        {
          _index: 760,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'this.permissionmodel.softdelete',
        {
          _index: 1405,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        'this.permissionmodel.updateone',
        {
          _index: 1404,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        'this.permissionsservice.create(createpermissiondto',
        {
          _index: 1362,
          title: {},
          body: { 'controllers/PermissionsController.html': {} },
        },
      ],
      [
        'this.permissionsservice.findall(+currentpage',
        {
          _index: 1366,
          title: {},
          body: { 'controllers/PermissionsController.html': {} },
        },
      ],
      [
        'this.permissionsservice.findone(id',
        {
          _index: 1367,
          title: {},
          body: { 'controllers/PermissionsController.html': {} },
        },
      ],
      [
        'this.permissionsservice.remove(id',
        {
          _index: 1372,
          title: {},
          body: { 'controllers/PermissionsController.html': {} },
        },
      ],
      [
        'this.permissionsservice.update(id',
        {
          _index: 1370,
          title: {},
          body: { 'controllers/PermissionsController.html': {} },
        },
      ],
      [
        'this.reflector.get(response_message',
        {
          _index: 1425,
          title: {},
          body: {
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
          },
        },
      ],
      [
        'this.reflector.getallandoverride',
        {
          _index: 1067,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'this.reflector.getallandoverride(is_public_key',
        {
          _index: 1061,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'this.resumemodel',
        {
          _index: 1499,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'this.resumemodel.countdocuments(filter',
        {
          _index: 1498,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'this.resumemodel.create',
        {
          _index: 1494,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'this.resumemodel.findbyid(id',
        {
          _index: 1500,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'this.resumemodel.softdelete',
        {
          _index: 1506,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'this.resumemodel.updateone',
        {
          _index: 1504,
          title: {},
          body: { 'injectables/ResumesService.html': {} },
        },
      ],
      [
        'this.resumesservice.create(createresumedto',
        {
          _index: 1465,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        'this.resumesservice.findall(+currentpage',
        {
          _index: 1468,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        'this.resumesservice.findbyusers(user',
        {
          _index: 1467,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        'this.resumesservice.findone(id',
        {
          _index: 1469,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        'this.resumesservice.remove(id',
        {
          _index: 1472,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        'this.resumesservice.update(id',
        {
          _index: 1471,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        'this.rolemodel',
        {
          _index: 1560,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'this.rolemodel.count',
        {
          _index: 758,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'this.rolemodel.create',
        {
          _index: 1556,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'this.rolemodel.find(filter)).length',
        {
          _index: 1559,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'this.rolemodel.findbyid(id',
        {
          _index: 1566,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'this.rolemodel.findbyid(id)).populate',
        {
          _index: 1561,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'this.rolemodel.findone',
        {
          _index: 770,
          title: {},
          body: {
            'injectables/DatabasesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'this.rolemodel.insertmany',
        {
          _index: 762,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'this.rolemodel.softdelete',
        {
          _index: 1570,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'this.rolemodel.updateone',
        {
          _index: 1564,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'this.rolesservice.create(createroledto',
        {
          _index: 1534,
          title: {},
          body: { 'controllers/RolesController.html': {} },
        },
      ],
      [
        'this.rolesservice.findall(+currentpage',
        {
          _index: 1535,
          title: {},
          body: { 'controllers/RolesController.html': {} },
        },
      ],
      [
        'this.rolesservice.findone(id',
        {
          _index: 1536,
          title: {},
          body: { 'controllers/RolesController.html': {} },
        },
      ],
      [
        'this.rolesservice.findone(user.role._id',
        {
          _index: 220,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'this.rolesservice.findone(userrole._id',
        {
          _index: 327,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.rolesservice.findone(userrole._id)).toobject',
        {
          _index: 1106,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'this.rolesservice.remove(id',
        {
          _index: 1538,
          title: {},
          body: { 'controllers/RolesController.html': {} },
        },
      ],
      [
        'this.rolesservice.update(id',
        {
          _index: 1537,
          title: {},
          body: { 'controllers/RolesController.html': {} },
        },
      ],
      [
        'this.sanitizefilename',
        {
          _index: 1287,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'this.subscribermodel',
        {
          _index: 1641,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'this.subscribermodel.create',
        {
          _index: 1636,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'this.subscribermodel.find',
        {
          _index: 1146,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'this.subscribermodel.find(filter)).length',
        {
          _index: 1640,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'this.subscribermodel.findone',
        {
          _index: 1631,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'this.subscribermodel.softdelete',
        {
          _index: 1645,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'this.subscribermodel.updateone',
        {
          _index: 1643,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'this.subscribersservice.create(createsubscriberdto',
        {
          _index: 1606,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        'this.subscribersservice.findall(+currentpage',
        {
          _index: 1611,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        'this.subscribersservice.findone(id',
        {
          _index: 1612,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        'this.subscribersservice.getskills(user',
        {
          _index: 1610,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        'this.subscribersservice.remove(id',
        {
          _index: 1614,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        'this.subscribersservice.update(updatesubscriberdto',
        {
          _index: 1613,
          title: {},
          body: { 'controllers/SubscribersController.html': {} },
        },
      ],
      [
        'this.uploadroot',
        {
          _index: 1280,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'this.usermodel',
        {
          _index: 1796,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'this.usermodel.count',
        {
          _index: 754,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'this.usermodel.create',
        {
          _index: 1794,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'this.usermodel.find(filter)).length',
        {
          _index: 1795,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'this.usermodel.findbyid(id',
        {
          _index: 1807,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'this.usermodel.findbyid(new',
        {
          _index: 1818,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'this.usermodel.findone',
        {
          _index: 1789,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'this.usermodel.insertmany',
        {
          _index: 771,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'this.usermodel.softdelete',
        {
          _index: 1813,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'this.usermodel.updateone',
        {
          _index: 1802,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'this.userservice.gethashpassword',
        {
          _index: 773,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'this.usersservice.changepassword(userid',
        {
          _index: 1735,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'this.usersservice.create(userdata',
        {
          _index: 1723,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'this.usersservice.findall(+currentpage',
        {
          _index: 1724,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'this.usersservice.findbyemail(email',
        {
          _index: 385,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.usersservice.findone(id',
        {
          _index: 1737,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'this.usersservice.findonebyusername(username',
        {
          _index: 320,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.usersservice.finduserbytoken(refreshtoken',
        {
          _index: 368,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.usersservice.isvalidpassword(pass',
        {
          _index: 322,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.usersservice.register(user',
        {
          _index: 361,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.usersservice.remove(id',
        {
          _index: 1740,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'this.usersservice.update(id',
        {
          _index: 1739,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'this.usersservice.updatepassword(email',
        {
          _index: 246,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'this.usersservice.updateusertoken',
        {
          _index: 380,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.usersservice.updateusertoken(refresh_token',
        {
          _index: 349,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.usersservice.verifyotp(email',
        {
          _index: 237,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'thong',
        {
          _index: 1804,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'throttle',
        {
          _index: 192,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      ['throttler', { _index: 1914, title: {}, body: { 'index.html': {} } }],
      [
        'throttlerguard',
        {
          _index: 193,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'throttlermodule',
        { _index: 86, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'throttlermodule.forroot',
        { _index: 89, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'throw',
        {
          _index: 238,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/CompaniesService.html': {},
            'controllers/FilesController.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'thu',
        {
          _index: 315,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'thành',
        {
          _index: 250,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'thông',
        {
          _index: 335,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/FilesController.html': {},
            'classes/MulterExceptionFilter.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'thước',
        {
          _index: 864,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'thấy',
        {
          _index: 1729,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'thống',
        {
          _index: 1634,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'thời',
        {
          _index: 400,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'thực',
        {
          _index: 412,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'timestamps',
        {
          _index: 568,
          title: {},
          body: {
            'classes/Company.html': {},
            'classes/Job.html': {},
            'classes/Permission.html': {},
            'classes/Resume.html': {},
            'classes/Role.html': {},
            'classes/Subscriber.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'tin',
        {
          _index: 336,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/FilesController.html': {},
            'classes/MulterExceptionFilter.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'token',
        {
          _index: 223,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/JwtAuthGuard.html': {},
          },
        },
      ],
      [
        "token')@get('/refresh",
        {
          _index: 165,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'ton',
        {
          _index: 1393,
          title: {},
          body: {
            'injectables/PermissionsService.html': {},
            'injectables/RolesService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'total',
        {
          _index: 531,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'totalitems',
        {
          _index: 515,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'totalpages',
        {
          _index: 517,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'tr',
        {
          _index: 1298,
          title: {},
          body: {
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'tra',
        {
          _index: 415,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/FilesController.html': {},
            'injectables/JobsService.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/ResumesService.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'tra/tạo',
        {
          _index: 1229,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'transform',
        {
          _index: 578,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
          },
        },
      ],
      [
        'transformer',
        {
          _index: 579,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/History.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/UserLoginDto.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'transforminterceptor',
        {
          _index: 1419,
          title: { 'injectables/TransformInterceptor.html': {} },
          body: {
            'interfaces/Response.html': {},
            'injectables/TransformInterceptor.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'transport',
        { _index: 1182, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      [
        'tren',
        {
          _index: 1803,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'tri',
        { _index: 682, title: {}, body: { 'classes/CreateRoleDto.html': {} } },
      ],
      [
        'trong',
        {
          _index: 604,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/History.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
          },
        },
      ],
      [
        "trong'})@isarray({message",
        {
          _index: 1657,
          title: {},
          body: { 'classes/UpdateResumeDto.html': {} },
        },
      ],
      [
        "trong'})@isboolean({message",
        { _index: 641, title: {}, body: { 'classes/CreateJobDto.html': {} } },
      ],
      [
        "trong'})@ismongoid({each",
        { _index: 685, title: {}, body: { 'classes/CreateRoleDto.html': {} } },
      ],
      [
        "trong'})@ismongoid({message",
        {
          _index: 696,
          title: {},
          body: { 'classes/CreateUserCvDto.html': {} },
        },
      ],
      [
        "trong'})@transform",
        { _index: 638, title: {}, body: { 'classes/CreateJobDto.html': {} } },
      ],
      [
        'true',
        {
          _index: 105,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'injectables/DatabasesService.html': {},
            'classes/Job.html': {},
            'injectables/JwtAuthGuard.html': {},
            'modules/MailModule.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/Permission.html': {},
            'classes/Resume.html': {},
            'classes/Role.html': {},
            'classes/Subscriber.html': {},
            'injectables/SubscribersService.html': {},
            'classes/User.html': {},
            'injectables/UsersService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'truy',
        {
          _index: 1087,
          title: {},
          body: {
            'injectables/JwtAuthGuard.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'try',
        {
          _index: 366,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/FilesController.html': {},
          },
        },
      ],
      [
        'tránh',
        {
          _index: 1241,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'trên',
        {
          _index: 1633,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'trước',
        {
          _index: 812,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'trường',
        {
          _index: 808,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'classes/Resume.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'trống',
        {
          _index: 588,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UserLoginDto.html': {},
          },
        },
      ],
      [
        "trống'})@isarray({message",
        {
          _index: 648,
          title: {},
          body: {
            'classes/CreateJobDto.html': {},
            'classes/CreateSubscriberDto.html': {},
          },
        },
      ],
      [
        "trống'})@isboolean({message",
        { _index: 680, title: {}, body: { 'classes/CreateRoleDto.html': {} } },
      ],
      [
        "trống'})@ismongoid({message",
        { _index: 708, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'ttl',
        {
          _index: 90,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
          },
        },
      ],
      [
        'tuổi',
        { _index: 1675, title: {}, body: { 'classes/UpdateUserDto.html': {} } },
      ],
      [
        'ty',
        {
          _index: 1028,
          title: {},
          body: {
            'injectables/JobsService.html': {},
            'injectables/ResumesService.html': {},
          },
        },
      ],
      [
        'type',
        {
          _index: 140,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/DatabasesService.html': {},
            'controllers/FilesController.html': {},
            'injectables/FilesService.html': {},
            'classes/History.html': {},
            'interfaces/IUser.html': {},
            'classes/Job.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'classes/Permission.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'classes/RegisterUserDto.html': {},
            'interfaces/Response.html': {},
            'classes/Resume.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/TransformInterceptor.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
            'classes/UserLoginDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'typealiases',
        {
          _index: 1988,
          title: { 'miscellaneous/typealiases.html': {} },
          body: {},
        },
      ],
      [
        'typeof',
        {
          _index: 1276,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      ['typeorm', { _index: 1948, title: {}, body: { 'index.html': {} } }],
      [
        'types',
        {
          _index: 934,
          title: {},
          body: {
            'classes/History.html': {},
            'classes/UpdateCompanyDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateJobDto.html': {},
            'classes/UpdatePermissionDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateSubscriberDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'types.objectid',
        {
          _index: 936,
          title: {},
          body: {
            'classes/History.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
          },
        },
      ],
      [
        'types.objectid(userid',
        {
          _index: 1819,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'types.objectid.isvalid(userid',
        {
          _index: 1816,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      ['typescript', { _index: 1910, title: {}, body: { 'index.html': {} } }],
      [
        'tài',
        {
          _index: 1810,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'tên',
        {
          _index: 1240,
          title: {},
          body: {
            'injectables/MulterConfigService.html': {},
            'classes/Resume.html': {},
            'classes/UpdateUserDto.html': {},
          },
        },
      ],
      [
        'tìm',
        {
          _index: 1728,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'tính',
        { _index: 1676, title: {}, body: { 'classes/UpdateUserDto.html': {} } },
      ],
      [
        'tượng',
        {
          _index: 1317,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        'tại',
        {
          _index: 388,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'tạo',
        {
          _index: 389,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/MulterConfigService.html': {},
          },
        },
      ],
      [
        'tải',
        {
          _index: 888,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'tồn',
        {
          _index: 387,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['ui', { _index: 1891, title: {}, body: { 'dependencies.html': {} } }],
      [
        'unauthorizedexception',
        {
          _index: 1055,
          title: {},
          body: {
            'injectables/JwtAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
          },
        },
      ],
      [
        "unauthorizedexception('username/password",
        {
          _index: 1115,
          title: {},
          body: { 'injectables/LocalStrategy.html': {} },
        },
      ],
      [
        'undefined',
        {
          _index: 1427,
          title: {},
          body: {
            'classes/Resume.html': {},
            'classes/Role.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'undefined})@apibody({type',
        {
          _index: 153,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      ['unit', { _index: 1954, title: {}, body: { 'index.html': {} } }],
      [
        'unknown',
        {
          _index: 143,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/CompaniesService.html': {},
            'controllers/FilesController.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'unprocessable',
        {
          _index: 1310,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        'unprocessableentityexception',
        {
          _index: 834,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'update',
        {
          _index: 348,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/FilesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'update(_id',
        {
          _index: 1016,
          title: {},
          body: {
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
          },
        },
      ],
      [
        'update(id',
        {
          _index: 447,
          title: {},
          body: {
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/FilesService.html': {},
            'controllers/JobsController.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'update(updatesubscriberdto',
        {
          _index: 1596,
          title: {},
          body: {
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
          },
        },
      ],
      [
        'updateat',
        {
          _index: 549,
          title: {},
          body: {
            'classes/Company.html': {},
            'classes/Job.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'updatecompanydto',
        {
          _index: 448,
          title: { 'classes/UpdateCompanyDto.html': {} },
          body: {
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'classes/UpdateCompanyDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updated',
        {
          _index: 1036,
          title: {},
          body: {
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'updatedat',
        {
          _index: 929,
          title: {},
          body: {
            'classes/History.html': {},
            'classes/Permission.html': {},
            'classes/Resume.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'classes/Subscriber.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
          },
        },
      ],
      [
        'updatedby',
        {
          _index: 538,
          title: { 'classes/UpdatedBy.html': {} },
          body: {
            'injectables/CompaniesService.html': {},
            'classes/Company.html': {},
            'classes/History.html': {},
            'classes/Job.html': {},
            'injectables/JobsService.html': {},
            'classes/Permission.html': {},
            'injectables/PermissionsService.html': {},
            'classes/Resume.html': {},
            'injectables/ResumesService.html': {},
            'classes/Role.html': {},
            'injectables/RolesService.html': {},
            'classes/Subscriber.html': {},
            'injectables/SubscribersService.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/User.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updateduser',
        {
          _index: 1738,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'updatefiledto',
        {
          _index: 920,
          title: { 'classes/UpdateFileDto.html': {} },
          body: {
            'injectables/FilesService.html': {},
            'classes/UpdateFileDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updatejobdto',
        {
          _index: 982,
          title: { 'classes/UpdateJobDto.html': {} },
          body: {
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'classes/UpdateJobDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updatepassword',
        {
          _index: 1754,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'updatepassword(email',
        {
          _index: 1772,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'updatepermissiondto',
        {
          _index: 1354,
          title: { 'classes/UpdatePermissionDto.html': {} },
          body: {
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'classes/UpdatePermissionDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updateresumedto',
        {
          _index: 937,
          title: { 'classes/UpdateResumeDto.html': {} },
          body: {
            'classes/History.html': {},
            'injectables/ResumesService.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updateroledto',
        {
          _index: 1528,
          title: { 'classes/UpdateRoleDto.html': {} },
          body: {
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'classes/UpdateRoleDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updates',
        {
          _index: 925,
          title: {},
          body: { 'injectables/FilesService.html': {} },
        },
      ],
      [
        'updatestatus',
        {
          _index: 1345,
          title: {},
          body: {
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
          },
        },
      ],
      [
        "updatestatus(@param('id",
        {
          _index: 1369,
          title: {},
          body: { 'controllers/PermissionsController.html': {} },
        },
      ],
      [
        'updatestatus(id',
        {
          _index: 1353,
          title: {},
          body: {
            'controllers/PermissionsController.html': {},
            'controllers/ResumesController.html': {},
            'controllers/RolesController.html': {},
          },
        },
      ],
      [
        'updatesubscriberdto',
        {
          _index: 1597,
          title: { 'classes/UpdateSubscriberDto.html': {} },
          body: {
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'classes/UpdateSubscriberDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updateuserdto',
        {
          _index: 1663,
          title: { 'classes/UpdateUserDto.html': {} },
          body: {
            'classes/UpdateUserDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updateusertoken',
        {
          _index: 1750,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'upload',
        {
          _index: 804,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
          },
        },
      ],
      [
        'uploadanyfiles',
        {
          _index: 793,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'uploadanyfiles(@uploadedfiles',
        {
          _index: 900,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'uploadanyfiles(files',
        {
          _index: 796,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'uploaded',
        {
          _index: 894,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'uploadedfile',
        {
          _index: 832,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'uploadedfiles',
        {
          _index: 833,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'uploadfile',
        {
          _index: 794,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'uploadfile(@uploadedfile',
        {
          _index: 852,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'uploadfile(file',
        {
          _index: 816,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'uploadmultiplefiles',
        {
          _index: 795,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'uploadmultiplefiles(files',
        {
          _index: 822,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'uploadpath',
        {
          _index: 1278,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'uploadroot',
        {
          _index: 1210,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'uppercase',
        {
          _index: 394,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'upsert',
        {
          _index: 1644,
          title: {},
          body: { 'injectables/SubscribersService.html': {} },
        },
      ],
      [
        'uri',
        { _index: 97, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'url',
        {
          _index: 667,
          title: {},
          body: {
            'classes/CreateResumeDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/Resume.html': {},
            'injectables/ResumesService.html': {},
          },
        },
      ],
      [
        'use',
        {
          _index: 1386,
          title: {},
          body: { 'injectables/PermissionsService.html': {} },
        },
      ],
      [
        'useclass',
        { _index: 913, title: {}, body: { 'modules/FilesModule.html': {} } },
      ],
      [
        'usefactory',
        {
          _index: 95,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/MailModule.html': {},
          },
        },
      ],
      [
        'usefilters',
        {
          _index: 835,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'usefilters(multerexceptionfilter',
        {
          _index: 848,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'useguards',
        {
          _index: 10,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
          },
        },
      ],
      [
        'useguards(localauthguard',
        {
          _index: 201,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'useguards(throttlerguard',
        {
          _index: 202,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'useinterceptors',
        {
          _index: 831,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'useinterceptors(anyfilesinterceptor',
        {
          _index: 899,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        "useinterceptors(fileinterceptor('fileupload",
        {
          _index: 851,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'user',
        {
          _index: 147,
          title: { 'classes/User.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/CompaniesController.html': {},
            'injectables/CompaniesService.html': {},
            'modules/DatabasesModule.html': {},
            'injectables/DatabasesService.html': {},
            'controllers/JobsController.html': {},
            'injectables/JobsService.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'modules/MailModule.html': {},
            'controllers/PermissionsController.html': {},
            'injectables/PermissionsService.html': {},
            'controllers/ResumesController.html': {},
            'injectables/ResumesService.html': {},
            'controllers/RolesController.html': {},
            'injectables/RolesService.html': {},
            'controllers/SubscribersController.html': {},
            'injectables/SubscribersService.html': {},
            'classes/User.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'index.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        "user')@patch(':id",
        {
          _index: 1717,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        "user')@post('/logout",
        {
          _index: 160,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "user')@post('/register",
        {
          _index: 171,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "user')@responsemessage('get",
        {
          _index: 1457,
          title: {},
          body: { 'controllers/ResumesController.html': {} },
        },
      ],
      [
        "user's",
        {
          _index: 371,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'user._id',
        {
          _index: 381,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'user._id.tostring',
        {
          _index: 1734,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'user.company',
        {
          _index: 341,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/JobsService.html': {},
            'injectables/ResumesService.html': {},
          },
        },
      ],
      [
        'user.dto',
        {
          _index: 187,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/JobsController.html': {},
            'classes/UpdateUserDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'user.dto.ts',
        {
          _index: 608,
          title: {},
          body: {
            'classes/Company-2.html': {},
            'classes/CreateUserDto.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserLoginDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'user.dto.ts:15',
        { _index: 1670, title: {}, body: { 'classes/UpdateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:16',
        { _index: 609, title: {}, body: { 'classes/Company-2.html': {} } },
      ],
      [
        'user.dto.ts:18',
        { _index: 1668, title: {}, body: { 'classes/UpdateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:19',
        { _index: 610, title: {}, body: { 'classes/Company-2.html': {} } },
      ],
      [
        'user.dto.ts:21',
        { _index: 1669, title: {}, body: { 'classes/UpdateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:24',
        {
          _index: 706,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/UpdateUserDto.html': {},
          },
        },
      ],
      [
        'user.dto.ts:27',
        { _index: 1667, title: {}, body: { 'classes/UpdateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:28',
        { _index: 704, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:31',
        { _index: 707, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:34',
        { _index: 701, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:37',
        { _index: 705, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:40',
        { _index: 700, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:44',
        { _index: 709, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:50',
        { _index: 702, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:54',
        {
          _index: 1410,
          title: {},
          body: { 'classes/RegisterUserDto.html': {} },
        },
      ],
      [
        'user.dto.ts:58',
        {
          _index: 1408,
          title: {},
          body: { 'classes/RegisterUserDto.html': {} },
        },
      ],
      [
        'user.dto.ts:61',
        {
          _index: 1411,
          title: {},
          body: { 'classes/RegisterUserDto.html': {} },
        },
      ],
      [
        'user.dto.ts:64',
        {
          _index: 1407,
          title: {},
          body: { 'classes/RegisterUserDto.html': {} },
        },
      ],
      [
        'user.dto.ts:67',
        {
          _index: 1409,
          title: {},
          body: { 'classes/RegisterUserDto.html': {} },
        },
      ],
      [
        'user.dto.ts:70',
        {
          _index: 1406,
          title: {},
          body: { 'classes/RegisterUserDto.html': {} },
        },
      ],
      [
        'user.dto.ts:76',
        { _index: 1702, title: {}, body: { 'classes/UserLoginDto.html': {} } },
      ],
      [
        'user.dto.ts:84',
        { _index: 1701, title: {}, body: { 'classes/UserLoginDto.html': {} } },
      ],
      [
        'user.email',
        {
          _index: 505,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'injectables/JobsService.html': {},
            'injectables/PermissionsService.html': {},
            'injectables/ResumesService.html': {},
            'injectables/RolesService.html': {},
            'injectables/SubscribersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'user.name',
        {
          _index: 727,
          title: {},
          body: {
            'modules/DatabasesModule.html': {},
            'modules/UsersModule.html': {},
          },
        },
      ],
      [
        'user.otp',
        {
          _index: 403,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'user.otpexpires',
        {
          _index: 404,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'user.password',
        {
          _index: 323,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'user.permissions',
        {
          _index: 221,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'user.role',
        {
          _index: 325,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'user.role.name',
        {
          _index: 1030,
          title: {},
          body: {
            'injectables/JobsService.html': {},
            'injectables/ResumesService.html': {},
          },
        },
      ],
      [
        'user.save',
        {
          _index: 406,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'user.toobject',
        {
          _index: 329,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'user?.permissions',
        {
          _index: 1079,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        'user_role',
        {
          _index: 744,
          title: {},
          body: {
            'injectables/DatabasesService.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'userdata',
        {
          _index: 1712,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'userdocument',
        {
          _index: 741,
          title: {},
          body: {
            'injectables/DatabasesService.html': {},
            'injectables/JobsService.html': {},
            'classes/User.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'userid',
        {
          _index: 668,
          title: {},
          body: {
            'classes/CreateResumeDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/Resume.html': {},
            'injectables/ResumesService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'userlogindto',
        {
          _index: 185,
          title: { 'classes/UserLoginDto.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'classes/Company-2.html': {},
            'classes/CreateUserDto.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UserLoginDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        "userlogindto})@post('/login')@responsemessage('user",
        {
          _index: 154,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'userm',
        {
          _index: 1779,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'usermodel',
        {
          _index: 737,
          title: {},
          body: {
            'injectables/DatabasesService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'username',
        {
          _index: 298,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/Company-2.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UserLoginDto.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'userrole',
        {
          _index: 324,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/DatabasesService.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'userrole?._id',
        {
          _index: 784,
          title: {},
          body: {
            'injectables/DatabasesService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'users',
        {
          _index: 1705,
          title: {},
          body: { 'controllers/UsersController.html': {} },
        },
      ],
      [
        'users.controller',
        { _index: 1745, title: {}, body: { 'modules/UsersModule.html': {} } },
      ],
      [
        'users.interfacce',
        {
          _index: 1720,
          title: {},
          body: {
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'users.service',
        {
          _index: 1719,
          title: {},
          body: {
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
          },
        },
      ],
      [
        'users/candidates',
        {
          _index: 766,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'users/users.module',
        { _index: 67, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'userschema',
        {
          _index: 720,
          title: {},
          body: {
            'modules/DatabasesModule.html': {},
            'classes/User.html': {},
            'modules/UsersModule.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'userscontroller',
        {
          _index: 1703,
          title: { 'controllers/UsersController.html': {} },
          body: {
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'userservice',
        {
          _index: 735,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      [
        'usersmodule',
        {
          _index: 57,
          title: { 'modules/UsersModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/UsersModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'usersservice',
        {
          _index: 197,
          title: { 'injectables/UsersService.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'modules/DatabasesModule.html': {},
            'injectables/DatabasesService.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'using',
        {
          _index: 767,
          title: {},
          body: { 'injectables/DatabasesService.html': {}, 'index.html': {} },
        },
      ],
      [
        'v',
        {
          _index: 1299,
          title: {},
          body: {
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'validate',
        {
          _index: 855,
          title: {},
          body: {
            'controllers/FilesController.html': {},
            'classes/History.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
          },
        },
      ],
      [
        'validate(payload',
        {
          _index: 1094,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'validate(username',
        {
          _index: 1112,
          title: {},
          body: { 'injectables/LocalStrategy.html': {} },
        },
      ],
      [
        'validatefile',
        {
          _index: 890,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'validatefile(files.avatar?.[0',
        {
          _index: 896,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'validatefile(files.background?.[0',
        {
          _index: 897,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'validatenested',
        {
          _index: 586,
          title: {},
          body: {
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/History.html': {},
            'classes/RegisterUserDto.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/UserLoginDto.html': {},
          },
        },
      ],
      [
        'validatenested()@isnotempty()@type(undefined',
        { _index: 930, title: {}, body: { 'classes/History.html': {} } },
      ],
      [
        'validateuser',
        {
          _index: 283,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'validateuser(username',
        {
          _index: 295,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'validator',
        {
          _index: 501,
          title: {},
          body: {
            'injectables/CompaniesService.html': {},
            'classes/Company-1.html': {},
            'classes/Company-2.html': {},
            'classes/CreateCompanyDto.html': {},
            'classes/CreateJobDto.html': {},
            'classes/CreatePermissionDto.html': {},
            'classes/CreateResumeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateSubscriberDto.html': {},
            'classes/CreateUserCvDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/History.html': {},
            'classes/RegisterUserDto.html': {},
            'injectables/ResumesService.html': {},
            'classes/UpdateResumeDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdatedBy.html': {},
            'classes/UserLoginDto.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'value',
        {
          _index: 303,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/Company-1.html': {},
            'classes/CreateJobDto.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/UsersService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'vao',
        {
          _index: 1105,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      ['variable', { _index: 1838, title: {}, body: { 'coverage.html': {} } }],
      [
        'variables',
        {
          _index: 1997,
          title: { 'miscellaneous/variables.html': {} },
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        've',
        {
          _index: 319,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'verifyotp',
        {
          _index: 284,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'verifyotp(email',
        {
          _index: 300,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['version', { _index: 1984, title: {}, body: { 'properties.html': {} } }],
      [
        'vien',
        {
          _index: 316,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'vietnam',
        {
          _index: 777,
          title: {},
          body: { 'injectables/DatabasesService.html': {} },
        },
      ],
      ['view', { _index: 1964, title: {}, body: { 'index.html': {} } }],
      ['visit', { _index: 1962, title: {}, body: { 'index.html': {} } }],
      [
        'việc',
        {
          _index: 1220,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'voi',
        {
          _index: 1389,
          title: {},
          body: {
            'injectables/PermissionsService.html': {},
            'injectables/RolesService.html': {},
          },
        },
      ],
      [
        'void',
        {
          _index: 1230,
          title: {},
          body: {
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
          },
        },
      ],
      [
        'vui',
        {
          _index: 376,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'vào',
        {
          _index: 397,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/MulterConfigService.html': {},
          },
        },
      ],
      [
        'vượt',
        {
          _index: 891,
          title: {},
          body: { 'controllers/FilesController.html': {} },
        },
      ],
      [
        'vấn',
        {
          _index: 1799,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'với',
        {
          _index: 399,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      ['web', { _index: 1899, title: {}, body: { 'index.html': {} } }],
      [
        'welcome',
        {
          _index: 1163,
          title: {},
          body: { 'controllers/MailController.html': {} },
        },
      ],
      [
        'world',
        { _index: 119, title: {}, body: { 'injectables/AppService.html': {} } },
      ],
      [
        'x',
        {
          _index: 1243,
          title: {},
          body: {
            'injectables/MulterConfigService.html': {},
            'classes/MulterExceptionFilter.html': {},
          },
        },
      ],
      [
        'xoa',
        {
          _index: 1569,
          title: {},
          body: { 'injectables/RolesService.html': {} },
        },
      ],
      [
        'xác',
        {
          _index: 411,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/MailService.html': {},
            'injectables/MulterConfigService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'xóa',
        {
          _index: 1809,
          title: {},
          body: { 'injectables/UsersService.html': {} },
        },
      ],
      [
        'xảy',
        {
          _index: 1306,
          title: {},
          body: { 'classes/MulterExceptionFilter.html': {} },
        },
      ],
      [
        'z0',
        {
          _index: 1260,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'za',
        {
          _index: 1259,
          title: {},
          body: { 'injectables/MulterConfigService.html': {} },
        },
      ],
      [
        'zoom',
        {
          _index: 58,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CompaniesModule.html': {},
            'modules/DatabasesModule.html': {},
            'modules/FilesModule.html': {},
            'modules/JobsModule.html': {},
            'modules/MailModule.html': {},
            'modules/PermissionsModule.html': {},
            'modules/ResumesModule.html': {},
            'modules/RolesModule.html': {},
            'modules/SubscribersModule.html': {},
            'modules/UsersModule.html': {},
            'overview.html': {},
          },
        },
      ],
    ],
    pipeline: ['stemmer'],
  },
  store: {
    'controllers/AppController.html': {
      url: 'controllers/AppController.html',
      title: 'controller - AppController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get, Post, UseGuards, Request, } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ConfigService } from '@nestjs/config';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LocalAuthGuard } from './auth/local-auth.guard';\nimport { AuthService } from './auth/auth.service';\nimport { JwtAuthGuard } from './auth/jwt-auth.guard';\nimport { Public } from './decorator/customize';\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private configService: ConfigService,\n    private authService: AuthService\n  ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/AppModule.html': {
      url: 'modules/AppModule.html',
      title: 'module - AppModule',
      body: "\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompaniesModule\n                        \n                        \n                            DatabasesModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            ResumesModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { connection } from 'mongoose';\nimport { CompaniesModule } from './companies/companies.module';\nimport { JobsModule } from './jobs/jobs.module';\nimport { FilesModule } from './files/files.module';\nimport { ResumesModule } from './resumes/resumes.module';\nimport { PermissionsModule } from './permissions/permissions.module';\nimport { RolesModule } from './roles/roles.module';\nimport { DatabasesModule } from './databases/databases.module';\nimport { SubscribersModule } from './subscribers/subscribers.module';\nimport { MailModule } from './mail/mail.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ThrottlerModule } from '@nestjs/throttler';\n@Module({\n  imports: [\n    ScheduleModule.forRoot(),\n    ThrottlerModule.forRoot([\n      {\n        ttl: 60,\n        limit: 20,\n      },\n    ]),\n\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGO_URL'),\n        connectionFactory: (connection) => {\n          connection.plugin(softDeletePlugin);\n          return connection;\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    UsersModule,\n    AuthModule,\n    CompaniesModule,\n    JobsModule,\n    FilesModule,\n    ResumesModule,\n    PermissionsModule,\n    RolesModule,\n    DatabasesModule,\n    SubscribersModule,\n    MailModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/AppService.html': {
      url: 'injectables/AppService.html',
      title: 'injectable - AppService',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \'@nestjs/common\';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    //model: code\n    return \'Hello World!!!!!\';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'controllers/AuthController.html': {
      url: 'controllers/AuthController.html',
      title: 'controller - AuthController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    \n                                    \n                                    Async\n                                handleGetAccount\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                handleLogin\n                            \n                            \n                                    \n                                    \n                                handleLogout\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRefreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRegister\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    forgotPassword(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('/send-otp')@ResponseMessage('Send OTP to reset password')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        handleGetAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleGetAccount(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Get user information')@Get('/account')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        handleLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogin(req, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(LocalAuthGuard)@UseGuards(ThrottlerGuard)@Throttle({default: undefined})@ApiBody({type: UserLoginDto})@Post('/login')@ResponseMessage('User Login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        handleLogout\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogout(response: Response, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Logout User')@Post('/logout')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRefreshToken(request: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Get user by refresh token')@Get('/refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRegister(RegisterUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Register a new user')@Post('/register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                RegisterUserDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetPassword(body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('reset-password')@ResponseMessage('Get OTP to reset password')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  UseGuards,\n  Body,\n  Res,\n  Req,\n  BadRequestException,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalAuthGuard } from './local-auth.guard';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { RegisterUserDto, UserLoginDto } from 'src/users/dto/create-user.dto';\nimport { Request, response, Response } from 'express';\nimport { IUser } from 'src/users/users.interfacce';\nimport { RolesService } from 'src/roles/roles.service';\nimport { Throttle, ThrottlerGuard } from '@nestjs/throttler';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\nimport { UsersService } from 'src/users/users.service';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private authService: AuthService,\n    private rolesService: RolesService,\n    private UsersService: UsersService,\n  ) {}\n  @Public()\n  @UseGuards(LocalAuthGuard)\n  @UseGuards(ThrottlerGuard)\n  @Throttle({ default: { limit: 5, ttl: 60 } })\n  @ApiBody({ type: UserLoginDto })\n  @Post('/login')\n  @ResponseMessage('User Login')\n  handleLogin(@Req() req, @Res({ passthrough: true }) response: Response) {\n    return this.authService.login(req.user, response);\n  }\n  @Public()\n  @ResponseMessage('Register a new user')\n  @Post('/register')\n  handleRegister(@Body() RegisterUserDto: RegisterUserDto) {\n    return this.authService.register(RegisterUserDto);\n  }\n\n  @ResponseMessage('Get user information')\n  @Get('/account')\n  async handleGetAccount(@User() user: IUser) {\n    const temp = (await this.rolesService.findOne(user.role._id)) as any;\n    user.permissions = temp.permissions;\n    return { user };\n  }\n\n  @Public()\n  @ResponseMessage('Get user by refresh token')\n  @Get('/refresh')\n  handleRefreshToken(\n    @Req() request: Request,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    const refreshToken = request.cookies['refresh_token'];\n    return this.authService.processNewToken(refreshToken, response);\n  }\n\n  @ResponseMessage('Logout User')\n  @Post('/logout')\n  handleLogout(\n    @Res({ passthrough: true }) response: Response,\n    @User() user: IUser,\n  ) {\n    return this.authService.logout(response, user);\n  }\n\n  @Public()\n  @Post('/send-otp')\n  @ResponseMessage('Send OTP to reset password')\n  async forgotPassword(@Body('email') email: string) {\n    return this.authService.sendOtp(email);\n  }\n\n  @Public()\n  @Post('reset-password')\n  @ResponseMessage('Get OTP to reset password')\n  async resetPassword(\n    @Body() body: { email: string; otp: string; newPassword: string },\n  ) {\n    const { email, otp, newPassword } = body;\n    const isOtpValid = await this.UsersService.verifyOtp(email, otp);\n    if (!isOtpValid) {\n      throw new BadRequestException('Mã OTP không hợp lệ hoặc đã hết hạn');\n    }\n    await this.UsersService.updatePassword(email, newPassword);\n\n    return { message: 'Đổi mật khẩu thành công' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/AuthModule.html': {
      url: 'modules/AuthModule.html',
      title: 'module - AuthModule',
      body: "\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nMailModule->AuthModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MailModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './passport/local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './passport/jwt.strategy';\nimport ms from 'ms';\nimport { AuthController } from './auth.controller';\nimport { RolesModule } from 'src/roles/roles.module';\nimport { MailModule } from 'src/mail/mail.module';\n\n@Module({\n  imports: [\n    UsersModule,\n    RolesModule,\n    PassportModule,\n    MailModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn: ms(configService.get('JWT_ACCESS_EXPIRE')) / 1000,\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/AuthService.html': {
      url: 'injectables/AuthService.html',
      title: 'injectable - AuthService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRefreshToken\n                            \n                            \n                                logout\n                            \n                            \n                                processNewToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                sendOtp\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                            \n                                    Async\n                                verifyOtp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService, configService: ConfigService, rolesService: RolesService, mailService: MailService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: IUser, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(user: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendOtp(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyOtp(email: string, otpCode: string, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:187\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otpCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processNewToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:97\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { IUser } from 'src/users/users.interfacce';\nimport { RegisterUserDto } from 'src/users/dto/create-user.dto';\nimport { ConfigService } from '@nestjs/config';\nimport ms from 'ms';\nimport { response, Response } from 'express';\nimport { RolesService } from 'src/roles/roles.service';\nimport { MailService } from 'src/mail/mail.service';\nimport * as otpGenerator from 'otp-generator';\nimport * as bcrypt from 'bcryptjs';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n    private configService: ConfigService,\n    private rolesService: RolesService,\n    private readonly mailService: MailService,\n  ) {}\n  //username / pass la 2 tham so thu vien passport no nem ve\n  async validateUser(username: string, pass: string): Promise {\n    const user = await this.usersService.findOneByUsername(username);\n    if (user) {\n      const isValid = this.usersService.isValidPassword(pass, user.password);\n      if (isValid === true) {\n        const userRole = user.role as unknown as { _id: string; name: string };\n        const temp = await this.rolesService.findOne(userRole._id);\n        const objUser = {\n          ...user.toObject(),\n          permissions: temp?.permissions ?? [],\n        };\n        return objUser;\n      }\n    }\n\n    return null;\n  }\n  async login(user: IUser, response: Response) {\n    const { _id, name, email, role, permissions } = user;\n    // Lấy thông tin company từ user (nếu có)\n    const company = user.company || null;\n    const payload = {\n      sub: 'token login',\n      iss: 'from server',\n      _id,\n      name,\n      email,\n      role,\n      company,\n      permissions,\n    };\n\n    const refresh_token = this.createRefreshToken(payload);\n\n    //update user with refresh token\n    await this.usersService.updateUserToken(refresh_token, _id);\n\n    //set refesh_token as cookies\n    response.cookie('refresh_token', refresh_token, {\n      httpOnly: true,\n      maxAge: ms(this.configService.get('JWT_REFRESH_EXPIRE')), //milisecond\n    });\n\n    return {\n      access_token: this.jwtService.sign(payload),\n      refresh_token,\n      user: {\n        _id,\n        name,\n        email,\n        role,\n        company,\n        //permissions,\n      },\n    };\n  }\n  async register(user: RegisterUserDto) {\n    let newUser = await this.usersService.register(user);\n\n    return {\n      _id: newUser?._id,\n      createdAt: newUser?.createdAt,\n    };\n  }\n\n  createRefreshToken = (payload: any) => {\n    const refresh_token = this.jwtService.sign(payload, {\n      secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n      expiresIn:\n        ms(this.configService.get('JWT_REFRESH_EXPIRE')) / 1000,\n    });\n    return refresh_token;\n  };\n  processNewToken = async (refreshToken: string, response: Response) => {\n    try {\n      this.jwtService.verify(refreshToken, {\n        secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n      });\n\n      let user = await this.usersService.findUserByToken(refreshToken);\n      if (user) {\n        //update refresh_token\n        const { _id, name, email, role } = user;\n        const payload = {\n          sub: 'token refresh',\n          iss: 'from server',\n          _id,\n          name,\n          email,\n          role,\n        };\n\n        const refresh_token = this.createRefreshToken(payload);\n\n        //update user with refresh token\n        await this.usersService.updateUserToken(refresh_token, _id.toString());\n\n        //fetch user's role\n        const userRole = user.role as unknown as { _id: string; name: string };\n        const temp = await this.rolesService.findOne(userRole._id);\n\n        //set refesh_token as cookies\n        response.clearCookie('refresh_token');\n        response.cookie('refresh_token', refresh_token, {\n          httpOnly: true,\n          maxAge: ms(this.configService.get('JWT_REFRESH_EXPIRE')), //milisecond\n        });\n\n        return {\n          access_token: this.jwtService.sign(payload),\n          refresh_token,\n          user: {\n            _id,\n            name,\n            email,\n            role,\n            permissions: temp?.permissions ?? [],\n          },\n        };\n      } else {\n        throw new BadRequestException(\n          `Refresh token khong hop le. Vui long login`,\n        );\n      }\n    } catch (error) {\n      throw new BadRequestException(\n        `Refresh token khong hop le. Vui long login`,\n      );\n    }\n  };\n\n  logout = async (response: Response, user: IUser) => {\n    await this.usersService.updateUserToken('', user._id);\n    response.clearCookie('refresh_token');\n    return 'ok';\n  };\n\n  // Gửi OTP qua email\n  async sendOtp(email: string) {\n    const user = await this.usersService.findByEmail(email);\n    if (!user) {\n      throw new BadRequestException('Email không tồn tại');\n    }\n\n    // Tạo OTP\n    const otpCode = otpGenerator.generate(6, {\n      digits: true,\n      alphabets: false,\n      upperCase: false,\n      specialChars: false,\n    });\n\n    // Lưu OTP vào database với thời gian hết hạn 2 phút\n    user.otp = otpCode;\n    user.otpExpires = new Date(Date.now() + 2 * 60 * 1000);\n    await user.save();\n\n    // Gửi OTP qua email\n    await this.mailService.sendOtpToEmail(user.email, otpCode);\n    return { message: 'OTP đã được gửi đến email của bạn' };\n  }\n\n  // Xác thực OTP để đặt lại mật khẩu\n  async verifyOtp(email: string, otpCode: string, newPassword: string) {\n    const user = await this.usersService.findByEmail(email);\n    if (!user) {\n      throw new BadRequestException('Email không tồn tại');\n    }\n\n    // Kiểm tra OTP hợp lệ\n    if (!user.otp || user.otp !== otpCode || new Date() > user.otpExpires) {\n      throw new BadRequestException('OTP không hợp lệ hoặc đã hết hạn');\n    }\n\n    // Cập nhật mật khẩu mới\n    user.password = await bcrypt.hash(newPassword, 10);\n    user.otp = null;\n    user.otpExpires = null;\n    await user.save();\n\n    return { message: 'Mật khẩu đã được đặt lại thành công' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/CompaniesController.html': {
      url: 'controllers/CompaniesController.html',
      title: 'controller - CompaniesController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  CompaniesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                companies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Fetch List Company with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\n\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interfacce';\nimport { query } from 'express';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('companies')\n@Controller('companies')\nexport class CompaniesController {\n  constructor(private readonly companiesService: CompaniesService) {}\n\n  @Post()\n  create(@Body() createCompanyDto: CreateCompanyDto, @User() user: IUser) {\n    return this.companiesService.create(createCompanyDto, user);\n  }\n\n  @Get()\n  @Public()\n  @ResponseMessage('Fetch List Company with paginate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.companiesService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @Public()\n  findOne(@Param('id') id: string) {\n    return this.companiesService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateCompanyDto: UpdateCompanyDto,\n    @User() user: IUser,\n  ) {\n    return this.companiesService.update(id, updateCompanyDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.companiesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/CompaniesModule.html': {
      url: 'modules/CompaniesModule.html',
      title: 'module - CompaniesModule',
      body: "\n                   \n\n\n\n\n    Modules\n    CompaniesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\n\nCompaniesService\n\nCompaniesService\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/companies/companies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompaniesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CompaniesController } from './companies.controller';\nimport { Mongoose } from 'mongoose';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Company, CompanySchema } from './schemas/company.schemas';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Company.name, schema: CompanySchema }])],\n  controllers: [CompaniesController],\n  providers: [CompaniesService]\n\n})\nexport class CompaniesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/CompaniesService.html': {
      url: 'injectables/CompaniesService.html',
      title: 'injectable - CompaniesService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompaniesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/companies/companies.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { Company, CompanyDocument } from './schemas/company.schemas';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { IUser } from 'src/users/users.interfacce';\nimport aqp from 'api-query-params';\nimport { isEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n@Injectable()\nexport class CompaniesService {\n  constructor(\n    @InjectModel(Company.name)\n    private companyModel: SoftDeleteModel,\n  ) {}\n\n  create(createCompanyDto: CreateCompanyDto, user: IUser) {\n    return this.companyModel.create({\n      ...createCompanyDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.companyModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.companyModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`not founnd company with id=${id}`);\n    }\n\n    return await this.companyModel.findById(id);\n  }\n\n  async update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser) {\n    return await this.companyModel.updateOne(\n      { _id: id },\n      {\n        ...updateCompanyDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.companyModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.companyModel.softDelete({\n      _id: id,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/Company.html': {
      url: 'classes/Company.html',
      title: 'class - Company',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/schemas/company.schemas.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                createAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updateAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schemas.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schemas.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schemas.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schemas.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schemas.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schemas.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schemas.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schemas.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schemas.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schemas.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schemas.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \'@nestjs/mongoose\';\nimport mongoose, { HydratedDocument } from \'mongoose\';\n\nexport type CompanyDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Company {\n    @Prop({ required: true })\n    name: string;\n\n    @Prop({ required: true })\n    address: string;\n\n    @Prop({ required: true })\n    description: string;\n\n    @Prop()\n    logo: string;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop()\n    createAt: Date;\n\n    @Prop()\n    updateAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deleteAt: Date;\n}\n\nexport const CompanySchema = SchemaFactory.createForClass(Company);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/Company-1.html': {
      url: 'classes/Company-1.html',
      title: 'class - Company-1',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport { IsArray, IsBoolean, IsDate, IsNotEmpty, isNotEmptyObject, IsNotEmptyObject, IsObject, IsString, ValidateNested } from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n\n    @IsNotEmpty()\n    logo: string;\n}\n\nexport class CreateJobDto {\n\n    @IsNotEmpty({ message: 'Name không được để trống', })\n    name: string;\n\n    @IsNotEmpty({ message: 'Skills không được để trống', })\n    @IsArray({ message: 'Skills co dinh dang la array', })\n    @IsString({ each: true, message: \"skill dinh dang la string\" })\n    skills: string[];\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n\n    @IsNotEmpty({ message: 'location không được để trống', })\n    location: number;\n\n    @IsNotEmpty({ message: 'Salary không được để trống', })\n    salary: number;\n\n    @IsNotEmpty({ message: 'quantity không được để trống', })\n    quantity: number;\n\n    @IsNotEmpty({ message: 'level không được để trống', })\n    level: string;\n\n    @IsNotEmpty({ message: 'Decription không được để trống', })\n    description: string;\n\n    @IsNotEmpty({ message: 'startDate khong duoc de trong', })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'startDate co dinh dang la Date' })\n    startDate: Date;\n\n    @IsNotEmpty({ message: 'endDate khong duoc de trong', })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'endDate co dinh dang la Date' })\n    endDate: Date;\n\n    @IsNotEmpty({ message: 'isActive khong duoc de trong', })\n    @IsBoolean({ message: 'isActive co dinh dang la boolean' })\n    isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/Company-2.html': {
      url: 'classes/Company-2.html',
      title: 'class - Company-2',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\n\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không đúng định dạng' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Pass không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Age không được để trống' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Role không được để trống' })\n  @IsMongoId({ message: 'Role co dinh dang la mongo id' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không đúng định dạng' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Pass không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Age không được để trống' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n}\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'ito', description: 'username' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateCompanyDto.html': {
      url: 'classes/CreateCompanyDto.html',
      title: 'class - CreateCompanyDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'address không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'desciption không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Logo khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nexport class CreateCompanyDto {\n  @IsNotEmpty({ message: 'name không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'address không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'desciption không được để trống' })\n  description: string;\n\n  @IsNotEmpty({ message: 'Logo khong duoc de trong' })\n  logo: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateFileDto.html': {
      url: 'classes/CreateFileDto.html',
      title: 'class - CreateFileDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/CreateJobDto.html': {
      url: 'classes/CreateJobDto.html',
      title: 'class - CreateJobDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                endDate\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                            \n                                    \n                                    \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Decription không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'endDate khong duoc de trong'})@Transform( => )@IsDate({message: 'endDate co dinh dang la Date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'isActive khong duoc de trong'})@IsBoolean({message: 'isActive co dinh dang la boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'level không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'location không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'quantity không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Salary không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Skills không được để trống'})@IsArray({message: 'Skills co dinh dang la array'})@IsString({each: true, message: 'skill dinh dang la string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'startDate khong duoc de trong'})@Transform( => )@IsDate({message: 'startDate co dinh dang la Date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport { IsArray, IsBoolean, IsDate, IsNotEmpty, isNotEmptyObject, IsNotEmptyObject, IsObject, IsString, ValidateNested } from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n\n    @IsNotEmpty()\n    logo: string;\n}\n\nexport class CreateJobDto {\n\n    @IsNotEmpty({ message: 'Name không được để trống', })\n    name: string;\n\n    @IsNotEmpty({ message: 'Skills không được để trống', })\n    @IsArray({ message: 'Skills co dinh dang la array', })\n    @IsString({ each: true, message: \"skill dinh dang la string\" })\n    skills: string[];\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n\n    @IsNotEmpty({ message: 'location không được để trống', })\n    location: number;\n\n    @IsNotEmpty({ message: 'Salary không được để trống', })\n    salary: number;\n\n    @IsNotEmpty({ message: 'quantity không được để trống', })\n    quantity: number;\n\n    @IsNotEmpty({ message: 'level không được để trống', })\n    level: string;\n\n    @IsNotEmpty({ message: 'Decription không được để trống', })\n    description: string;\n\n    @IsNotEmpty({ message: 'startDate khong duoc de trong', })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'startDate co dinh dang la Date' })\n    startDate: Date;\n\n    @IsNotEmpty({ message: 'endDate khong duoc de trong', })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'endDate co dinh dang la Date' })\n    endDate: Date;\n\n    @IsNotEmpty({ message: 'isActive khong duoc de trong', })\n    @IsBoolean({ message: 'isActive co dinh dang la boolean' })\n    isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreatePermissionDto.html': {
      url: 'classes/CreatePermissionDto.html',
      title: 'class - CreatePermissionDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'apiPath không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'method không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'module khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\nexport class CreatePermissionDto {\n\n    @IsNotEmpty({ message: 'name không được để trống', })\n    name: string;\n\n    @IsNotEmpty({ message: 'apiPath không được để trống', })\n    apiPath: string;\n\n    @IsNotEmpty({ message: 'method không được để trống', })\n    method: string;\n\n    @IsNotEmpty({ message: 'module khong duoc de trong', })\n    module: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateResumeDto.html': {
      url: 'classes/CreateResumeDto.html',
      title: 'class - CreateResumeDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'status khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'status khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'status khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'userId không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\nexport class CreateResumeDto {\n\n    @IsNotEmpty({ message: 'email không được để trống', })\n    email: string;\n\n    @IsNotEmpty({ message: 'userId không được để trống', })\n    userId: string;\n\n    @IsNotEmpty({ message: 'url không được để trống', })\n    url: string;\n\n    @IsNotEmpty({ message: 'status khong duoc de trong', })\n    status: string;\n\n    @IsNotEmpty({ message: 'status khong duoc de trong', })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'status khong duoc de trong', })\n    jobId: mongoose.Schema.Types.ObjectId;\n\n}\n\nexport class CreateUserCvDto {\n    @IsNotEmpty({ message: 'url không được để trống', })\n    url: string;\n\n    @IsNotEmpty({ message: 'companyId khong duoc de trong', })\n    @IsMongoId({ message: 'companyId is a mongo id' })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'jobId khong duoc de trong', })\n    @IsMongoId({ message: 'jobId is a mongo id' })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateRoleDto.html': {
      url: 'classes/CreateRoleDto.html',
      title: 'class - CreateRoleDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'description không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'isActive không được để trống'})@IsBoolean({message: 'isActive co gia tri boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'permissions khong duoc de trong'})@IsMongoId({each: true, message: 'each permissions la mongo object id'})@IsArray({message: 'permissions co dinh dang la array'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsBoolean, IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\nexport class CreateRoleDto {\n\n    @IsNotEmpty({ message: 'name không được để trống', })\n    name: string;\n\n    @IsNotEmpty({ message: 'description không được để trống', })\n    description: string;\n\n    @IsNotEmpty({ message: 'isActive không được để trống', })\n    @IsBoolean({ message: 'isActive co gia tri boolean' })\n    isActive: boolean;\n\n    @IsNotEmpty({ message: 'permissions khong duoc de trong', })\n    @IsMongoId({ each: true, message: \"each permissions la mongo object id\" })\n    @IsArray({ message: 'permissions co dinh dang la array' })\n    permissions: mongoose.Schema.Types.ObjectId[];\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateSubscriberDto.html': {
      url: 'classes/CreateSubscriberDto.html',
      title: 'class - CreateSubscriberDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/create-subscriber.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email khong dung dinh dang'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'skills không được để trống'})@IsArray({message: 'skills co dinh dang la array'})@IsString({each: true, message: 'skill dinh dang la string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsBoolean, IsEmail, IsMongoId, IsNotEmpty, IsString } from 'class-validator';\nimport mongoose from 'mongoose';\nexport class CreateSubscriberDto {\n    @IsNotEmpty({ message: 'name không được để trống', })\n    name: string;\n\n    @IsEmail({}, { message: 'Email khong dung dinh dang', })\n    @IsNotEmpty({ message: 'Email không được để trống', })\n    email: string;\n\n    @IsNotEmpty({ message: 'skills không được để trống', })\n    @IsArray({ message: 'skills co dinh dang la array', })\n    @IsString({ each: true, message: \"skill dinh dang la string\" })\n    skills: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateUserCvDto.html': {
      url: 'classes/CreateUserCvDto.html',
      title: 'class - CreateUserCvDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCvDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                companyId\n                            \n                            \n                                    \n                                    \n                                jobId\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'companyId khong duoc de trong'})@IsMongoId({message: 'companyId is a mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'jobId khong duoc de trong'})@IsMongoId({message: 'jobId is a mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\nexport class CreateResumeDto {\n\n    @IsNotEmpty({ message: 'email không được để trống', })\n    email: string;\n\n    @IsNotEmpty({ message: 'userId không được để trống', })\n    userId: string;\n\n    @IsNotEmpty({ message: 'url không được để trống', })\n    url: string;\n\n    @IsNotEmpty({ message: 'status khong duoc de trong', })\n    status: string;\n\n    @IsNotEmpty({ message: 'status khong duoc de trong', })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'status khong duoc de trong', })\n    jobId: mongoose.Schema.Types.ObjectId;\n\n}\n\nexport class CreateUserCvDto {\n    @IsNotEmpty({ message: 'url không được để trống', })\n    url: string;\n\n    @IsNotEmpty({ message: 'companyId khong duoc de trong', })\n    @IsMongoId({ message: 'companyId is a mongo id' })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'jobId khong duoc de trong', })\n    @IsMongoId({ message: 'jobId is a mongo id' })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateUserDto.html': {
      url: 'classes/CreateUserDto.html',
      title: 'class - CreateUserDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không đúng định dạng'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Pass không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Role không được để trống'})@IsMongoId({message: 'Role co dinh dang la mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\n\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không đúng định dạng' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Pass không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Age không được để trống' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Role không được để trống' })\n  @IsMongoId({ message: 'Role co dinh dang la mongo id' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không đúng định dạng' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Pass không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Age không được để trống' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n}\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'ito', description: 'username' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/DatabasesController.html': {
      url: 'controllers/DatabasesController.html',
      title: 'controller - DatabasesController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  DatabasesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                databases\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\n\n@Controller('databases')\nexport class DatabasesController {\n  constructor(private readonly databasesService: DatabasesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/DatabasesModule.html': {
      url: 'modules/DatabasesModule.html',
      title: 'module - DatabasesModule',
      body: "\n                   \n\n\n\n\n    Modules\n    DatabasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\n\nDatabasesService\n\nDatabasesService\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/databases/databases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabasesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabasesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\nimport { DatabasesController } from './databases.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport { Permission, PermissionSchema } from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\nimport { UsersService } from 'src/users/users.service';\n\n@Module({\n  controllers: [DatabasesController],\n  providers: [DatabasesService, UsersService],\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Permission.name, schema: PermissionSchema },\n      { name: Role.name, schema: RoleSchema },\n    ])\n  ],\n})\nexport class DatabasesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/DatabasesService.html': {
      url: 'injectables/DatabasesService.html',
      title: 'injectable - DatabasesService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabasesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, permissionModel: SoftDeleteModel, roleModel: SoftDeleteModel, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/databases/databases.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/databases/databases.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport {\n  Permission,\n  PermissionDocument,\n} from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { UsersService } from 'src/users/users.service';\nimport { ADMIN_ROLE, INIT_PERMISSIONS, USER_ROLE } from './sample';\n\n@Injectable()\nexport class DatabasesService implements OnModuleInit {\n  constructor(\n    @InjectModel(User.name)\n    private userModel: SoftDeleteModel,\n\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel,\n\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n\n    private configService: ConfigService,\n    private userService: UsersService,\n  ) {}\n\n  async onModuleInit() {\n    const isInit = this.configService.get('SHOULD_INIT');\n    if (Boolean(isInit)) {\n      const countUser = await this.userModel.count({});\n      const countPermission = await this.permissionModel.count({});\n      const countRole = await this.roleModel.count({});\n\n      if (countPermission === 0) {\n        await this.permissionModel.insertMany(INIT_PERMISSIONS);\n      }\n\n      //create role\n      if (countRole === 0) {\n        const permissions = await this.permissionModel.find({}).select('_id');\n        await this.roleModel.insertMany([\n          {\n            name: ADMIN_ROLE,\n            description: 'Admin full authority',\n            isActive: true,\n            permissions: permissions,\n          },\n\n          {\n            name: USER_ROLE,\n            description: 'Users/Candidates using the system',\n            isActive: true,\n            permissions: [],\n          },\n        ]);\n      }\n      if (countUser === 0) {\n        const adminRole = await this.roleModel.findOne({ name: ADMIN_ROLE });\n        const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n        await this.userModel.insertMany([\n          {\n            name: 'Admin',\n            email: 'admin@gmail.com',\n            password: this.userService.getHashPassword(\n              this.configService.get('INIT_PASSWORD'),\n            ),\n            age: 69,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: adminRole?._id,\n          },\n          {\n            name: 'Ito',\n            email: 'ito@gmail.com',\n            password: this.userService.getHashPassword(\n              this.configService.get('INIT_PASSWORD'),\n            ),\n            age: 90,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: adminRole?._id,\n          },\n          {\n            name: 'Dong Dong',\n            email: 'dongdong@gmail.com',\n            password: this.userService.getHashPassword(\n              this.configService.get('INIT_PASSWORD'),\n            ),\n            age: 90,\n            gender: 'FEMALE',\n            address: 'VietNam',\n            role: userRole?._id,\n          },\n        ]);\n      }\n      if (countUser > 0 && countRole > 0 && countPermission > 0) {\n        // console.log('>>> ALREADY INIT SAMPLE DATA ...');\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/File.html': {
      url: 'classes/File.html',
      title: 'class - File',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/entities/file.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class File {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'controllers/FilesController.html': {
      url: 'controllers/FilesController.html',
      title: 'controller - FilesController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                uploadAnyFiles\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                uploadFile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                uploadMultipleFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        uploadAnyFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAnyFiles(files: Express.Multer.File[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('upload-any')@ResponseMessage('Upload multiple files with any field names')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:140\n                        \n                    \n\n\n            \n                \n                        Upload bất kỳ file nào từ bất kỳ trường nào (không cần khai báo trước)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                            Express.Multer.File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Danh sách file được upload\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { message: string; files: any; }\n\n                        \n                            \n                                Thông tin các file đã upload\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('upload')@ResponseMessage('Upload single file')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:40\n                        \n                    \n\n\n            \n                \n                        Upload một file đơn lẻ\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    File được upload\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                Thông tin file đã upload\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        uploadMultipleFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadMultipleFiles(files: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('upload-multiple')@ResponseMessage('Upload multiple files')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:96\n                        \n                    \n\n\n            \n                \n                        Upload nhiều file từ nhiều trường khác nhau\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Danh sách file được upload\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { message: string; files: { avatar: any; background: any; }; }\n\n                        \n                            \n                                Thông tin các file đã upload\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  UseInterceptors,\n  UploadedFile,\n  BadRequestException,\n  UploadedFiles,\n  UnprocessableEntityException,\n  UseFilters,\n} from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport {\n  AnyFilesInterceptor,\n  FileFieldsInterceptor,\n  FileInterceptor,\n} from '@nestjs/platform-express';\nimport {\n  ALLOWED_MIME_TYPES,\n  Public,\n  ResponseMessage,\n} from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\nimport fs from 'fs';\nimport { MulterExceptionFilter } from './multer.filter';\n@ApiTags('files')\n@Controller('files')\n@UseFilters(MulterExceptionFilter)\nexport class FilesController {\n  constructor(private readonly filesService: FilesService) {}\n\n  /**\n   * Upload một file đơn lẻ\n   * @param file File được upload\n   * @returns Thông tin file đã upload\n   */\n  @Public()\n  @Post('upload')\n  @ResponseMessage('Upload single file')\n  @UseInterceptors(FileInterceptor('fileUpload'))\n  async uploadFile(@UploadedFile() file: Express.Multer.File) {\n    try {\n      if (!file) {\n        throw new UnprocessableEntityException(\n          'Please select a file to upload',\n        );\n      }\n\n      // Validate loại file\n      if (!ALLOWED_MIME_TYPES.has(file.mimetype)) {\n        throw new UnprocessableEntityException(\n          `Invalid file type. Only ${Array.from(\n            ALLOWED_MIME_TYPES.values(),\n          ).join(', ')} files are allowed`,\n        );\n      }\n\n      // Kiểm tra kích thước file\n      const maxSize = 5 * 1024 * 1024;\n      if (file.size > maxSize) {\n        throw new UnprocessableEntityException(\n          'File size must be less than 5MB',\n        );\n      }\n\n      return {\n        fileName: file.filename,\n        originalName: file.originalname,\n        mimeType: file.mimetype,\n        size: file.size,\n        fileType: ALLOWED_MIME_TYPES.get(file.mimetype),\n      };\n    } catch (error) {\n      if (file?.path && fs.existsSync(file.path)) {\n        fs.unlinkSync(file.path);\n      }\n      throw new UnprocessableEntityException(\n        'Failed to upload file. Please try again',\n      );\n    }\n  }\n\n  /**\n   * Upload nhiều file từ nhiều trường khác nhau\n   * @param files Danh sách file được upload\n   * @returns Thông tin các file đã upload\n   */\n  @Public()\n  @Post('upload-multiple')\n  @ResponseMessage('Upload multiple files')\n  @UseInterceptors(\n    FileFieldsInterceptor([\n      { name: 'avatar', maxCount: 1 },\n      { name: 'background', maxCount: 1 },\n    ]),\n  )\n  uploadMultipleFiles(\n    @UploadedFiles()\n    files: {\n      avatar?: Express.Multer.File[];\n      background?: Express.Multer.File[];\n    },\n  ) {\n    if (!files || (!files.avatar && !files.background)) {\n      throw new BadRequestException('Không có file hợp lệ được tải lên.');\n    }\n\n    const validateFile = (file?: Express.Multer.File) => {\n      if (!file) return null;\n      if (!ALLOWED_MIME_TYPES.has(file.mimetype)) {\n        throw new BadRequestException(\n          `File ${file.originalname} không đúng định dạng.`,\n        );\n      }\n      if (file.size > 1024 * 1024) {\n        throw new BadRequestException(\n          `File ${file.originalname} vượt quá 1MB.`,\n        );\n      }\n      return file.filename;\n    };\n\n    return {\n      message: 'Files uploaded successfully',\n      files: {\n        avatar: validateFile(files.avatar?.[0]),\n        background: validateFile(files.background?.[0]),\n      },\n    };\n  }\n\n  /**\n   * Upload bất kỳ file nào từ bất kỳ trường nào (không cần khai báo trước)\n   * @param files Danh sách file được upload\n   * @returns Thông tin các file đã upload\n   */\n  @Public()\n  @Post('upload-any')\n  @ResponseMessage('Upload multiple files with any field names')\n  @UseInterceptors(AnyFilesInterceptor())\n  uploadAnyFiles(@UploadedFiles() files: Express.Multer.File[]) {\n    if (!files || files.length === 0) {\n      throw new BadRequestException('Không có file nào được upload.');\n    }\n\n    const uploadedFiles = files.map((file) => {\n      if (!ALLOWED_MIME_TYPES.has(file.mimetype)) {\n        throw new BadRequestException(\n          `File ${file.originalname} không đúng định dạng.`,\n        );\n      }\n      if (file.size > 1024 * 1024) {\n        throw new BadRequestException(\n          `File ${file.originalname} vượt quá 1MB.`,\n        );\n      }\n      return { fileName: file.filename, fieldName: file.fieldname };\n    });\n\n    return {\n      message: 'Files uploaded successfully',\n      files: uploadedFiles,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/FilesModule.html': {
      url: 'modules/FilesModule.html',
      title: 'module - FilesModule',
      body: "\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService\n\nFilesService\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { FilesController } from './files.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { MulterConfigService } from './multer.config';\n\n@Module({\n  controllers: [FilesController],\n  providers: [FilesService],\n  imports: [MulterModule.registerAsync({\n    useClass: MulterConfigService,\n  })\n  ]\n})\nexport class FilesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/FilesService.html': {
      url: 'injectables/FilesService.html',
      title: 'injectable - FilesService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFileDto: CreateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFileDto\n                                            \n                                                            CreateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateFileDto: UpdateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\n\n@Injectable()\nexport class FilesService {\n  create(createFileDto: CreateFileDto) {\n    return 'This action adds a new file';\n  }\n\n  findAll() {\n    return `This action returns all files`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} file`;\n  }\n\n  update(id: number, updateFileDto: UpdateFileDto) {\n    return `This action updates a #${id} file`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} file`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/History.html': {
      url: 'classes/History.html',
      title: 'class - History',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  History\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdatedBy\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@IsNotEmpty()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\nimport { IsArray, IsEmail, IsNotEmpty, Validate, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { Types } from 'mongoose';\n\nclass UpdatedBy {\n    @IsNotEmpty()\n    _id: Types.ObjectId;\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n}\n\nclass History {\n    @IsNotEmpty()\n    status: string;\n\n    @IsNotEmpty()\n    updatedAt: Date;\n\n    @ValidateNested()\n    @IsNotEmpty()\n    @Type(() => UpdatedBy)\n    updatedBy: UpdatedBy\n\n}\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n    @IsNotEmpty({ message: 'history khong duoc de trong', })\n    @IsArray({ message: 'history co dinh dang la array', })\n    @ValidateNested()\n    @Type(() => History)\n    history: History[];\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/IUser.html': {
      url: 'interfaces/IUser.html',
      title: 'interface - IUser',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.interfacce.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            company\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        company\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        company:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  _id: string;\n  name: string;\n  email: string;\n  role: {\n    _id: string;\n    name: string;\n  };\n  company?: {\n    _id: string;\n    name?: string;\n  };\n  permissions?: {\n    _id: string;\n    name: string;\n    apiPath: string;\n    module: string;\n  }[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/Job.html': {
      url: 'classes/Job.html',
      title: 'class - Job',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schemas/job.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                            \n                                    \n                                updateAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \'@nestjs/mongoose\';\nimport mongoose, { HydratedDocument } from \'mongoose\';\n\nexport type JobDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Job {\n    @Prop()\n    name: string;\n\n    @Prop()\n    skills: string[];\n\n    @Prop({ type: Object })\n    company: {\n        _id: mongoose.Schema.Types.ObjectId;\n        name: string;\n        logo: string;\n    }\n\n    @Prop()\n    location: string;\n\n    @Prop()\n    salary: number;\n\n    @Prop()\n    quantity: number;\n\n    @Prop()\n    level: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    startDate: Date;\n\n    @Prop()\n    endDate: Date;\n\n    @Prop()\n    isActive: boolean;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updateAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deleteAt: Date;\n}\n\nexport const JobSchema = SchemaFactory.createForClass(Job);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'controllers/JobsController.html': {
      url: 'controllers/JobsController.html',
      title: 'controller - JobsController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findAllAdmin\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(CreateJobDto: CreateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                CreateJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Fetch jobs with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAllAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllAdmin(currentPage: string, limit: string, qs: string, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('admin')@ResponseMessage('Fetch jobs for admin panel')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()@ResponseMessage('Fetch a job by id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('delete a job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('update a job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n  Request,\n} from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { CreateUserDto } from 'src/users/dto/create-user.dto';\nimport { IUser } from 'src/users/users.interfacce';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('jobs')\n@Controller('jobs')\nexport class JobsController {\n  constructor(private readonly jobsService: JobsService) {}\n\n  @Post()\n  @ResponseMessage('Create a new job')\n  create(@Body() CreateJobDto: CreateJobDto, @User() user: IUser) {\n    return this.jobsService.create(CreateJobDto, user);\n  }\n\n  @Get()\n  @Public()\n  @ResponseMessage('Fetch jobs with paginate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.jobsService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get('admin')\n  @ResponseMessage('Fetch jobs for admin panel')\n  findAllAdmin(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n    @Request() req,\n  ) {\n    return this.jobsService.findAllAdmin(+currentPage, +limit, qs, req.user);\n  }\n\n  @Get(':id')\n  @Public()\n  @ResponseMessage('Fetch a job by id')\n  findOne(@Param('id') id: string) {\n    return this.jobsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('update a job')\n  update(\n    @Param('id') id: string,\n    @Body() updateJobDto: UpdateJobDto,\n    @User() user: IUser,\n  ) {\n    return this.jobsService.update(id, updateJobDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('delete a job')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.jobsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/JobsModule.html': {
      url: 'modules/JobsModule.html',
      title: 'module - JobsModule',
      body: "\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService\n\nJobsService\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { JobsController } from './jobs.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Job, JobSchema } from './schemas/job.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Job.name, schema: JobSchema }])],\n  controllers: [JobsController],\n  providers: [JobsService]\n})\nexport class JobsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/JobsService.html': {
      url: 'injectables/JobsService.html',
      title: 'injectable - JobsService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllAdmin\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllAdmin(currentPage: number, limit: number, qs: string, user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { UserDocument } from 'src/users/schemas/user.schema';\nimport { Job } from './schemas/job.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\nimport { IUser } from 'src/users/users.interfacce';\n\n@Injectable()\nexport class JobsService {\n  constructor(\n    @InjectModel(Job.name)\n    private jobModel: SoftDeleteModel,\n  ) {}\n\n  async create(createJobDto: CreateJobDto, user: IUser) {\n    const {\n      name,\n      skills,\n      company,\n      salary,\n      quantity,\n      level,\n      description,\n      startDate,\n      endDate,\n      isActive,\n      location,\n    } = createJobDto;\n\n    const newJob = await this.jobModel.create({\n      name,\n      skills,\n      company,\n      salary,\n      quantity,\n      level,\n      description,\n      startDate,\n      endDate,\n      isActive,\n      location,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n\n    return newJob;\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    const offset = (+currentPage - 1) * +limit;\n    const defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = await this.jobModel.countDocuments(filter);\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.jobModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findAllAdmin(\n    currentPage: number,\n    limit: number,\n    qs: string,\n    user: any,\n  ) {\n    const { filter, sort, population, projection } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    // Kiểm tra nếu user là HR, thì chỉ lấy Resume của công ty của họ\n    if (user.role.name === 'HR' && user.company) {\n      filter.companyId = new mongoose.Types.ObjectId(user.company);\n    }\n\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = await this.jobModel.countDocuments(filter);\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.jobModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) return `Job not found`;\n\n    return await this.jobModel.findById(id);\n  }\n\n  async update(_id: string, updateJobDto: UpdateJobDto, user: IUser) {\n    const updated = await this.jobModel.updateOne(\n      { _id },\n      {\n        ...updateJobDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n\n    return updated;\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) return `Job not found`;\n\n    await this.jobModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n\n    return this.jobModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/JwtAuthGuard.html': {
      url: 'injectables/JwtAuthGuard.html',
      title: 'injectable - JwtAuthGuard',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  ForbiddenException,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { IS_PUBLIC_KEY, IS_PUBLIC_PERMISSION } from 'src/decorator/customize';\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info, context: ExecutionContext) {\n    const request: Request = context.switchToHttp().getRequest();\n    const isSkipPermission = this.reflector.getAllAndOverride(\n      IS_PUBLIC_PERMISSION,\n      [context.getHandler(), context.getClass()],\n    );\n    // You can throw an exception based on either \"info\" or \"err\" arguments\n    if (err || !user) {\n      throw (\n        err ||\n        new UnauthorizedException(\n          'token khong hop le or khong co token o bearer token o Header request',\n        )\n      );\n    }\n    //check permission\n    const targetMethod = request.method;\n    const targetEndpoint = request.route?.path as string;\n    const permissions = user?.permissions ?? [];\n    let isExist = permissions.find(\n      (permission) =>\n        targetMethod === permission.method &&\n        targetEndpoint === permission.apiPath,\n    );\n    if (targetEndpoint.startsWith('/api/v1/auth')) isExist = true;\n    if (!isExist && !isSkipPermission) {\n      throw new ForbiddenException('Ban khong co quyen truy cap Endpoint');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/JwtStrategy.html': {
      url: 'injectables/JwtStrategy.html',
      title: 'injectable - JwtStrategy',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt.strategy.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\nimport { ConfigService } from '@nestjs/config';\nimport { IUser } from 'src/users/users.interfacce';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private configService: ConfigService,\n    private rolesService: RolesService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n    });\n  }\n\n  async validate(payload: IUser) {\n    const { _id, name, email, role, company } = payload;\n    // can gan them permissions vao req.user\n    const userRole = role as unknown as { _id: string; name: string };\n    const temp = (await this.rolesService.findOne(userRole._id)).toObject();\n    //req.user\n    return {\n      _id,\n      name,\n      email,\n      role,\n      company,\n      permissions: temp?.permissions ?? [],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/LocalAuthGuard.html': {
      url: 'injectables/LocalAuthGuard.html',
      title: 'injectable - LocalAuthGuard',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/LocalStrategy.html': {
      url: 'injectables/LocalStrategy.html',
      title: 'injectable - LocalStrategy',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/local.strategy.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException('Username/password khong hop le');\n    }\n    return user; //req.user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/MailController.html': {
      url: 'controllers/MailController.html',
      title: 'controller - MailController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  MailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                handleTestEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        handleTestEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleTestEmail()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Test email')@Cron('0 0 * * 0')\n                \n            \n\n                    \n                        \n                            Defined in src/mail/mail.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\nimport { from } from 'rxjs';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport {\n  Subscriber,\n  SubscriberDocument,\n} from 'src/subscribers/schemas/subscriber.schema';\nimport { Job, JobDocument } from 'src/jobs/schemas/job.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('mail')\n@Controller('mail')\nexport class MailController {\n  constructor(\n    private readonly mailService: MailService,\n    private mailerService: MailerService,\n    @InjectModel(Subscriber.name)\n    private subscriberModel: SoftDeleteModel,\n    @InjectModel(Job.name)\n    private jobModel: SoftDeleteModel,\n  ) {}\n\n  // @Cron(CronExpression.EVERY_30_SECONDS)\n  // testCron() {\n  //   console.log('>>>call me');\n  // }\n\n  @Get()\n  @Public()\n  @ResponseMessage('Test email')\n  @Cron('0 0 * * 0') //0.00 am every sunday\n  async handleTestEmail() {\n    const subscribers = await this.subscriberModel.find({});\n    for (const subs of subscribers) {\n      const subsSkills = subs.skills;\n      const jobWithMatchingSkills = await this.jobModel.find({\n        skills: { $in: subsSkills },\n      });\n      if (jobWithMatchingSkills?.length) {\n        const jobs = jobWithMatchingSkills.map((item) => {\n          return {\n            name: item.name,\n            company: item.company.name,\n            salary:\n              `${item.salary}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + ' đ',\n            skills: item.skills,\n          };\n        });\n        await this.mailerService.sendMail({\n          to: 'pokiwar192@gmail.com',\n          from: '\"Support Team\" ',\n          subject: 'Welcome to Nice App! Comfirm your Email',\n          template: 'mail',\n          context: {\n            subscribers: subs.name,\n            jobs: jobs,\n          },\n        });\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/MailModule.html': {
      url: 'modules/MailModule.html',
      title: 'module - MailModule',
      body: "\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_MailModule_exports\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailController } from './mail.controller';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { ConfigService } from '@nestjs/config';\nimport { join } from 'path';\nimport { strict } from 'assert';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber } from 'rxjs';\nimport { SubscriberSchema } from 'src/subscribers/schemas/subscriber.schema';\nimport { Job, JobSchema } from 'src/jobs/schemas/job.schema';\n\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      useFactory: async (configService: ConfigService) => ({\n        transport: {\n          host: configService.get('EMAIL_HOST'),\n          secure: false,\n          auth: {\n            user: configService.get('EMAIL_AUTH_USER'),\n            pass: configService.get('EMAIL_AUTH_PASS'),\n          },\n        },\n        template: {\n          dir: join(__dirname, 'templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n        preview:\n          configService.get('EMAIL_PREVIEW') === 'true' ? true : false,\n      }),\n      inject: [ConfigService],\n    }),\n\n    MongooseModule.forFeature([\n      { name: Subscriber.name, schema: SubscriberSchema },\n      { name: Job.name, schema: JobSchema },\n    ]),\n  ],\n  controllers: [MailController],\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/MailService.html': {
      url: 'injectables/MailService.html',
      title: 'injectable - MailService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendOtpToEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendOtpToEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendOtpToEmail(email: string, otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { MailerService } from '@nestjs-modules/mailer';\n\n@Injectable()\nexport class MailService {\n  constructor(private readonly mailerService: MailerService) {}\n\n  async sendOtpToEmail(email: string, otp: string) {\n    await this.mailerService.sendMail({\n      to: email,\n      from: '\"Support Team\" ',\n      subject: 'Mã xác nhận OTP',\n      template: 'forgot-password',\n      context: {\n        otp: otp,\n      },\n      text: `Mã OTP của bạn là: ${otp}. Mã này sẽ hết hạn sau 2 phút.`,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/MulterConfigService.html': {
      url: 'injectables/MulterConfigService.html',
      title: 'injectable - MulterConfigService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/multer.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                uploadRoot\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                            \n                                    Private\n                                ensureExists\n                            \n                            \n                                    Private\n                                getRootPath\n                            \n                            \n                                    Private\n                                sanitizeFileName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:47\n                        \n                    \n\n\n            \n                \n                        Cấu hình Multer cho việc upload file\n\n\n                        \n                            Returns :     MulterModuleOptions\n\n                        \n                            \n                                Cấu hình MulterModuleOptions\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ensureExists\n                        \n                    \n                \n            \n            \n                \n                        \n                    ensureExists(targetDirectory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:27\n                        \n                    \n\n\n            \n                \n                        Đảm bảo thư mục tồn tại, nếu chưa có thì tạo mới\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                targetDirectory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Đường dẫn thư mục cần kiểm tra/tạo\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getRootPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRootPath()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:19\n                        \n                    \n\n\n            \n                \n                        Lấy đường dẫn root của dự án\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Đường dẫn thư mục gốc của dự án\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sanitizeFileName\n                        \n                    \n                \n            \n            \n                \n                        \n                    sanitizeFileName(fileName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:39\n                        \n                    \n\n\n            \n                \n                        Loại bỏ các ký tự đặc biệt khỏi tên file để tránh lỗi\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fileName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Tên file gốc\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Tên file đã được xử lý\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        uploadRoot\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'public/images/'\n                    \n                \n                    \n                        \n                                Defined in src/files/multer.config.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { existsSync, mkdirSync } from 'fs';\nimport path, { join, extname, resolve } from 'path';\nimport { ALLOWED_MIME_TYPES } from 'src/decorator/customize';\n\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  private readonly uploadRoot = 'public/images/'; // Thư mục gốc lưu file upload\n\n  /**\n   * Lấy đường dẫn root của dự án\n   * @returns Đường dẫn thư mục gốc của dự án\n   */\n  private getRootPath(): string {\n    return process.cwd();\n  }\n\n  /**\n   * Đảm bảo thư mục tồn tại, nếu chưa có thì tạo mới\n   * @param targetDirectory Đường dẫn thư mục cần kiểm tra/tạo\n   */\n  private ensureExists(targetDirectory: string): void {\n    const absolutePath = resolve(this.getRootPath(), targetDirectory);\n    if (!existsSync(absolutePath)) {\n      mkdirSync(absolutePath, { recursive: true });\n    }\n  }\n\n  /**\n   * Loại bỏ các ký tự đặc biệt khỏi tên file để tránh lỗi\n   * @param fileName Tên file gốc\n   * @returns Tên file đã được xử lý\n   */\n  private sanitizeFileName(fileName: string): string {\n    return fileName.replace(/[^a-zA-Z0-9-_]/g, '_'); // Chỉ giữ lại chữ cái, số, dấu gạch ngang, gạch dưới\n  }\n\n  /**\n   * Cấu hình Multer cho việc upload file\n   * @returns Cấu hình MulterModuleOptions\n   */\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        /**\n         * Xác định thư mục lưu file dựa vào header `folder_type`\n         */\n        destination: (req, file, cb) => {\n          const folder =\n            typeof req.headers.folder_type === 'string'\n              ? req.headers.folder_type\n              : 'default';\n          const uploadPath = join(this.getRootPath(), this.uploadRoot, folder);\n          this.ensureExists(uploadPath);\n          cb(null, uploadPath);\n        },\n        /**\n         * Xác định tên file sau khi upload\n         */\n        filename: (req, file, cb) => {\n          const fileExt = extname(file.originalname);\n          const baseName = this.sanitizeFileName(\n            path.basename(file.originalname, fileExt),\n          );\n          const finalName = `${baseName}-${Date.now()}${fileExt}`;\n          cb(null, finalName);\n        },\n      }),\n      limits: {\n        fileSize: 5 * 1024 * 1024, // Giới hạn dung lượng file: 5MB\n      },\n      fileFilter: (req, file, cb) => {\n        /**\n         * Kiểm tra MIME type của file upload có hợp lệ không\n         */\n        if (!ALLOWED_MIME_TYPES.has(file.mimetype)) {\n          console.log(\n            `File upload bị từ chối: ${file.originalname} (${file.mimetype})`,\n          );\n          return cb(null, false); // Trả về false thay vì throw lỗi\n        }\n        cb(null, true);\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/MulterExceptionFilter.html': {
      url: 'classes/MulterExceptionFilter.html',
      title: 'class - MulterExceptionFilter',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MulterExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/multer.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Bộ lọc ngoại lệ (Exception Filter) cho các lỗi liên quan đến Multer\nKhi xảy ra lỗi upload file, bộ lọc này sẽ trả về response có HTTP status 422 (Unprocessable Entity)\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(error: Error, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.filter.ts:20\n                        \n                    \n\n\n            \n                \n                        Xử lý lỗi và trả về response phù hợp\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Lỗi xảy ra\n\n                                            \n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Đối tượng ArgumentsHost chứa thông tin request & response\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\n/**\n * Bộ lọc ngoại lệ (Exception Filter) cho các lỗi liên quan đến Multer\n * Khi xảy ra lỗi upload file, bộ lọc này sẽ trả về response có HTTP status 422 (Unprocessable Entity)\n */\n@Catch(Error)\nexport class MulterExceptionFilter implements ExceptionFilter {\n  /**\n   * Xử lý lỗi và trả về response phù hợp\n   * @param error Lỗi xảy ra\n   * @param host Đối tượng ArgumentsHost chứa thông tin request & response\n   */\n  catch(error: Error, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    response.status(HttpStatus.UNPROCESSABLE_ENTITY).json({\n      statusCode: HttpStatus.UNPROCESSABLE_ENTITY,\n      message: error.message,\n      error: 'Unprocessable Entity', // Thông báo lỗi chuẩn theo HTTP status 422\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/Permission.html': {
      url: 'classes/Permission.html',
      title: 'class - Permission',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/schemas/permission.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schemas';\nimport { Job } from 'src/jobs/schemas/job.schema';\n\nexport type PermissionDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Permission {\n    @Prop()\n    name: string;\n\n    @Prop()\n    apiPath: string;\n\n    @Prop()\n    method: string;\n\n    @Prop()\n    module: string;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deleteAt: Date;\n}\n\nexport const PermissionSchema = SchemaFactory.createForClass(Permission);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/PermissionsController.html': {
      url: 'controllers/PermissionsController.html',
      title: 'controller - PermissionsController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch all permissions with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch a permission by id')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a permission by id')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStatus(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interfacce';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('permissions')\n@Controller('permissions')\nexport class PermissionsController {\n  constructor(private readonly permissionsService: PermissionsService) { }\n\n  @Post()\n  @ResponseMessage(\"Create a new permission\")\n  create(@Body() createPermissionDto: CreatePermissionDto, @User() user: IUser) {\n    return this.permissionsService.create(createPermissionDto, user);\n  }\n\n  @Get()\n  @ResponseMessage(\"Fetch all permissions with paginate\")\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() qs: string\n  ) {\n    return this.permissionsService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage(\"Fetch a permission by id\")\n  findOne(@Param('id') id: string) {\n    return this.permissionsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage(\"Update a permission\")\n  updateStatus(@Param('id') id: string, @Body() updatePermissionDto: UpdatePermissionDto, @User() user: IUser) {\n    return this.permissionsService.update(id, updatePermissionDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage(\"Delete a permission by id\")\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.permissionsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/PermissionsModule.html': {
      url: 'modules/PermissionsModule.html',
      title: 'module - PermissionsModule',
      body: "\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService\n\nPermissionsService\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { PermissionsController } from './permissions.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Permission, PermissionSchema } from './schemas/permission.schema';\n\n@Module({\n  controllers: [PermissionsController],\n  providers: [PermissionsService],\n  imports: [MongooseModule.forFeature([{ name: Permission.name, schema: PermissionSchema }])],\n})\nexport class PermissionsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/PermissionsService.html': {
      url: 'injectables/PermissionsService.html',
      title: 'injectable - PermissionsService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/permissions/permissions.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Permission, PermissionDocument } from './schemas/permission.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/users.interfacce';\nimport mongoose from 'mongoose';\nimport { use } from 'passport';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class PermissionsService {\n  constructor(\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel\n  ) { }\n\n  async create(createPermissionDto: CreatePermissionDto, user: IUser) {\n    const { name, apiPath, method, module } = createPermissionDto;\n\n    const isExist = await this.permissionModel.findOne({ apiPath, method });\n    if (isExist) {\n      throw new BadRequestException(`Permission voi apiPath=${apiPath} , method=${method} da ton tai`)\n    }\n    const newPermission = await this.permissionModel.create({\n      name, apiPath, method, module,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return {\n      _id: newPermission?._id,\n      createAt: newPermission?.createdAt\n    }\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population, projection } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.permissionModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n\n    const result = await this.permissionModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems\n      },\n      result\n    }\n\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`not founnd permission`)\n    }\n    return await this.permissionModel.findById(id);\n  }\n\n  async update(_id: string, updatePermissionDto: UpdatePermissionDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      throw new BadRequestException(\"not found permission\")\n    }\n    const { module, method, apiPath, name } = updatePermissionDto;\n    const updated = await this.permissionModel.updateOne(\n      { _id },\n      {\n        module, method, apiPath, name,\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    );\n    return updated;\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.permissionModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    )\n    return this.permissionModel.softDelete({\n      _id: id\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/RegisterUserDto.html': {
      url: 'classes/RegisterUserDto.html',
      title: 'class - RegisterUserDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không đúng định dạng'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Pass không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\n\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không đúng định dạng' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Pass không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Age không được để trống' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Role không được để trống' })\n  @IsMongoId({ message: 'Role co dinh dang la mongo id' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không đúng định dạng' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Pass không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Age không được để trống' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n}\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'ito', description: 'username' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/Response.html': {
      url: 'interfaces/Response.html',
      title: 'interface - Response',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n  statusCode: number;\n  message: string;\n  data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private reflector: Reflector) {}\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(\n      map((data) => ({\n        statusCode: context.switchToHttp().getResponse().statusCode,\n        message:\n          this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) ||\n          '',\n        data: data,\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/Resume.html': {
      url: 'classes/Resume.html',
      title: 'class - Resume',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/schemas/resume.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                history\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schemas';\nimport { Job } from 'src/jobs/schemas/job.schema';\n\nexport type ResumeDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Resume {\n    @Prop()\n    email: string;\n\n    @Prop()\n    userId: mongoose.Schema.Types.ObjectId;\n\n    @Prop()\n    url: string;\n\n    @Prop()\n    status: string;\n\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Company.name })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Job.name })  // Sửa lại tên trường\n    jobId: mongoose.Schema.Types.ObjectId;\n\n    @Prop({\n        type: [\n            {\n                status: { type: String, required: true },\n                updatedAt: { type: Date, required: true },\n                updatedBy: {\n                    _id: { type: mongoose.Schema.Types.ObjectId, required: true },\n                    email: { type: String, required: true }\n                }\n            }\n        ]\n    })\n    history: {\n        status: string;\n        updatedAt: Date;\n        updatedBy: {\n            _id: mongoose.Schema.Types.ObjectId;\n            email: string;\n        };\n    }[]\n\n    @Prop({\n        type: {\n            _id: { type: mongoose.Schema.Types.ObjectId, required: true },\n            email: { type: String, required: true }\n        }\n    })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({\n        type: {\n            _id: { type: mongoose.Schema.Types.ObjectId, required: true },\n            email: { type: String, required: true }\n        }\n    })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({\n        type: {\n            _id: mongoose.Schema.Types.ObjectId,\n            email: { type: String, required: true }\n        }\n    })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deleteAt: Date;\n}\n\nexport const ResumeSchema = SchemaFactory.createForClass(Resume);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/ResumesController.html': {
      url: 'controllers/ResumesController.html',
      title: 'controller - ResumesController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  ResumesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                resumes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                getResumesByUser\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createResumeDto: CreateUserCvDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createResumeDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch all resumes with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch a resume by id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getResumesByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResumesByUser(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('by-user')@ResponseMessage('Get Resume by user')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a resume by id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStatus(id: string, status: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update status resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n  Request,\n} from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { CreateResumeDto, CreateUserCvDto } from './dto/create-resume.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interfacce';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('resumes')\n@Controller('resumes')\nexport class ResumesController {\n  constructor(private readonly resumesService: ResumesService) {}\n\n  @Post()\n  @ResponseMessage('Create a new resume')\n  create(@Body() createResumeDto: CreateUserCvDto, @User() user: IUser) {\n    return this.resumesService.create(createResumeDto, user);\n  }\n\n  @Post('by-user')\n  @ResponseMessage('Get Resume by user')\n  getResumesByUser(@User() user: IUser) {\n    return this.resumesService.findByUsers(user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch all resumes with paginate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n    @Request() req,\n  ) {\n    return this.resumesService.findAll(+currentPage, +limit, qs, req.user);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Fetch a resume by id')\n  findOne(@Param('id') id: string) {\n    return this.resumesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update status resume')\n  updateStatus(\n    @Param('id') id: string,\n    @Body('status') status: string,\n    @User() user: IUser,\n  ) {\n    return this.resumesService.update(id, status, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a resume by id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.resumesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/ResumesModule.html': {
      url: 'modules/ResumesModule.html',
      title: 'module - ResumesModule',
      body: "\n                   \n\n\n\n\n    Modules\n    ResumesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\n\nResumesService\n\nResumesService\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resumes/resumes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResumesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { ResumesController } from './resumes.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Resume, ResumeSchema } from './schemas/resume.schema';\n\n@Module({\n  controllers: [ResumesController],\n  providers: [ResumesService],\n  imports: [\n    MongooseModule.forFeature([{ name: Resume.name, schema: ResumeSchema }]),\n  ],\n})\nexport class ResumesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/ResumesService.html': {
      url: 'injectables/ResumesService.html',
      title: 'injectable - ResumesService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByUsers\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/resumes/resumes.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resumeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserCvDto: CreateUserCvDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserCvDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string, user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUsers(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, status: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateResumeDto, CreateUserCvDto } from './dto/create-Resume.dto';\nimport { UpdateResumeDto } from './dto/update-Resume.dto';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { IUser } from 'src/users/users.interfacce';\nimport aqp from 'api-query-params';\nimport { isEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\nimport { Resume, ResumeDocument } from './schemas/resume.schema';\n@Injectable()\nexport class ResumesService {\n  constructor(\n    @InjectModel(Resume.name)\n    private resumeModel: SoftDeleteModel,\n  ) {}\n\n  async create(createUserCvDto: CreateUserCvDto, user: IUser) {\n    const { url, companyId, jobId } = createUserCvDto;\n    const { email, _id } = user;\n\n    const newCV = await this.resumeModel.create({\n      url,\n      companyId,\n      email,\n      jobId,\n      userId: _id,\n      status: 'PENDING',\n      createdBy: { _id, email },\n      history: [\n        {\n          status: 'PENDING',\n          updatedAt: new Date(),\n          updatedBy: {\n            _id: user._id,\n            email: user.email,\n          },\n        },\n      ],\n    });\n\n    return {\n      _id: newCV?._id,\n      createdAt: newCV?.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string, user: any) {\n    const { filter, sort, population, projection } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    // Kiểm tra nếu user là HR, thì chỉ lấy Resume của công ty của họ\n    if (user.role.name === 'HR' && user.company) {\n      filter.companyId = new mongoose.Types.ObjectId(user.company);\n    }\n\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = await this.resumeModel.countDocuments(filter);\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.resumeModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`not founnd Resume`);\n    }\n    return await this.resumeModel.findById(id);\n  }\n\n  async findByUsers(user: IUser) {\n    return await this.resumeModel\n      .find({\n        userId: user._id,\n      })\n      .sort('-createdAt')\n      .populate([\n        {\n          path: 'companyId',\n          select: { name: 1 },\n        },\n        {\n          path: 'jobId',\n          select: { name: 1 },\n        },\n      ]);\n  }\n\n  async update(_id: string, status: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      throw new BadRequestException('not found resume');\n    }\n\n    const updated = await this.resumeModel.updateOne(\n      { _id },\n      {\n        status,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n        $push: {\n          history: {\n            status: status,\n            updatedAt: new Date(),\n            updatedBy: {\n              _id: user._id,\n              email: user.email,\n            },\n          },\n        },\n      },\n    );\n    return updated;\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.resumeModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.resumeModel.softDelete({\n      _id: id,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/Role.html': {
      url: 'classes/Role.html',
      title: 'class - Role',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/schemas/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schemas';\nimport { Job } from 'src/jobs/schemas/job.schema';\nimport { Permission } from 'src/permissions/schemas/permission.schema';\n\nexport type RoleDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Role {\n    @Prop()\n    name: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    isActive: boolean;\n\n    @Prop({ type: [mongoose.Schema.Types.ObjectId], ref: Permission.name })\n    permissions: Permission[];\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deleteAt: Date;\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/RolesController.html': {
      url: 'controllers/RolesController.html',
      title: 'controller - RolesController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch roles with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch a role by id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStatus(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a permission')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interfacce';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('roles')\n@Controller('roles')\nexport class RolesController {\n  constructor(private readonly rolesService: RolesService) {}\n\n  @Post()\n  @ResponseMessage('Create a new role')\n  create(@Body() createRoleDto: CreateRoleDto, @User() user: IUser) {\n    return this.rolesService.create(createRoleDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch roles with paginate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.rolesService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Fetch a role by id')\n  findOne(@Param('id') id: string) {\n    return this.rolesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a permission')\n  updateStatus(\n    @Param('id') id: string,\n    @Body() updateRoleDto: UpdateRoleDto,\n    @User() user: IUser,\n  ) {\n    return this.rolesService.update(id, updateRoleDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a role')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.rolesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/RolesModule.html': {
      url: 'modules/RolesModule.html',
      title: 'module - RolesModule',
      body: "\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_RolesModule_exports\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from './schemas/role.schema';\n\n@Module({\n  controllers: [RolesController],\n  providers: [RolesService],\n  exports: [RolesService],\n  imports: [MongooseModule.forFeature([{ name: Role.name, schema: RoleSchema }])],\n})\nexport class RolesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/RolesService.html': {
      url: 'injectables/RolesService.html',
      title: 'injectable - RolesService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Role, RoleDocument } from './schemas/role.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\n\nimport { IUser } from 'src/users/users.interfacce';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\nimport { ADMIN_ROLE } from 'src/databases/sample';\n\n@Injectable()\nexport class RolesService {\n  constructor(\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n  ) {}\n  async create(createRoleDto: CreateRoleDto, user: IUser) {\n    const { name, description, isActive, permissions } = createRoleDto;\n\n    const isExist = await this.roleModel.findOne({ name });\n    if (isExist) {\n      throw new BadRequestException(\n        `Permission voi apiPath=${name} da ton tai`,\n      );\n    }\n    const newRole = await this.roleModel.create({\n      name,\n      description,\n      isActive,\n      permissions,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n    return {\n      _id: newRole?._id,\n      createAt: newRole?.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population, projection } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.roleModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.roleModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`not founnd role`);\n    }\n    return (await this.roleModel.findById(id)).populate({\n      path: 'permissions',\n      select: { _id: 1, apiPath: 1, name: 1, method: 1, module: 1 },\n    });\n  }\n\n  async update(_id: string, updateRoleDto: UpdateRoleDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      throw new BadRequestException('not found role');\n    }\n    const { name, description, isActive, permissions } = updateRoleDto;\n\n    // const isExist = await this.roleModel.findOne({ name });\n    // if (isExist) {\n    //   throw new BadRequestException(`Role voi name=${name} da ton tai`)\n    // }\n\n    const updated = await this.roleModel.updateOne(\n      { _id },\n      {\n        name,\n        description,\n        isActive,\n        permissions,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return updated;\n  }\n\n  async remove(id: string, user: IUser) {\n    const foundRole = await this.roleModel.findById(id);\n    if (foundRole.name === ADMIN_ROLE) {\n      throw new BadRequestException('Khong the xoa role ADMIN');\n    }\n    await this.roleModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.roleModel.softDelete({\n      _id: id,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/Subscriber.html': {
      url: 'classes/Subscriber.html',
      title: 'class - Subscriber',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/schemas/subscriber.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \'@nestjs/mongoose\';\nimport mongoose, { HydratedDocument } from \'mongoose\';\n\nexport type SubscriberDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Subscriber {\n    @Prop({ required: true })\n    email: string;\n\n    @Prop()\n    name: string;\n\n    @Prop()\n    skills: string[];\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deleteAt: Date;\n}\n\nexport const SubscriberSchema = SchemaFactory.createForClass(Subscriber);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'controllers/SubscribersController.html': {
      url: 'controllers/SubscribersController.html',
      title: 'controller - SubscribersController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                getUserSkills\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new subscriber')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch subscribers with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch a subscriber by id')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getUserSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserSkills(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('skills')@ResponseMessage('Get subscriber's skills')@SkipCheckPermission()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a subscriber')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@SkipCheckPermission()@ResponseMessage('update a subscriber')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport {\n  ResponseMessage,\n  SkipCheckPermission,\n  User,\n} from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interfacce';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('subscribers')\n@Controller('subscribers')\nexport class SubscribersController {\n  constructor(private readonly subscribersService: SubscribersService) {}\n\n  @Post()\n  @ResponseMessage('Create a new subscriber')\n  create(\n    @Body() createSubscriberDto: CreateSubscriberDto,\n    @User() user: IUser,\n  ) {\n    return this.subscribersService.create(createSubscriberDto, user);\n  }\n\n  @Post('skills')\n  @ResponseMessage(\"Get subscriber's skills\")\n  @SkipCheckPermission()\n  getUserSkills(@User() user: IUser) {\n    return this.subscribersService.getSkills(user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch subscribers with paginate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.subscribersService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Fetch a subscriber by id')\n  findOne(@Param('id') id: string) {\n    return this.subscribersService.findOne(id);\n  }\n\n  @Patch(':id')\n  @SkipCheckPermission()\n  @ResponseMessage('update a subscriber')\n  update(\n    @Body() updateSubscriberDto: UpdateSubscriberDto,\n    @User() user: IUser,\n  ) {\n    return this.subscribersService.update(updateSubscriberDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a subscriber')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.subscribersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/SubscribersModule.html': {
      url: 'modules/SubscribersModule.html',
      title: 'module - SubscribersModule',
      body: "\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\n\nSubscribersService\n\nSubscribersService\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { SubscribersController } from './subscribers.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber } from 'rxjs';\nimport { SubscriberSchema } from './schemas/subscriber.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([\n    { name: Subscriber.name, schema: SubscriberSchema },\n  ])],\n  controllers: [SubscribersController],\n  providers: [SubscribersService]\n})\nexport class SubscribersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/SubscribersService.html': {
      url: 'injectables/SubscribersService.html',
      title: 'injectable - SubscribersService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getSkills\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subscriberModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/subscribers.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscriberModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSkills(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/users.interfacce';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\nimport { SubscriberDocument } from './schemas/subscriber.schema';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { Subscriber } from 'rxjs';\n\n@Injectable()\nexport class SubscribersService {\n  constructor(\n    @InjectModel(Subscriber.name)\n    private subscriberModel: SoftDeleteModel\n  ) { }\n\n  async create(createSubscriberDto: CreateSubscriberDto, user: IUser) {\n    const { name, email, skills } = createSubscriberDto;\n    const isExist = await this.subscriberModel.findOne({ email });\n    if (isExist) {\n      throw new BadRequestException(`Email: ${email} đã tồn tại trên hệ thống.`);\n    }\n    const newSubs = await this.subscriberModel.create({\n      name,\n      email,\n      skills,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n    return {\n      _id: newSubs?._id,\n      createBy: newSubs?.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population, projection } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    const offset = (currentPage - 1) * limit;\n    const defaultLimit = limit || 10;\n\n    const totalItems = (await this.subscriberModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.subscriberModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException('Subscriber not found');\n    }\n\n    return await this.subscriberModel.findOne({ _id: id });\n  }\n\n  async update(updateSubscriberDto: UpdateSubscriberDto, user: IUser) {\n    const updated = await this.subscriberModel.updateOne(\n      { email: user.email },\n      {\n        ...updateSubscriberDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n      { upsert: true }\n    );\n    return updated;\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException('Subscriber not found');\n    }\n\n    await this.subscriberModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      }\n    );\n    return this.subscriberModel.softDelete({ _id: id });\n  }\n\n  async getSkills(user: IUser) {\n    const { email } = user;\n    return await this.subscriberModel.findOne({ email }, { skills: 1 })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/TransformInterceptor.html': {
      url: 'injectables/TransformInterceptor.html',
      title: 'injectable - TransformInterceptor',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/transform.interceptor.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/transform.interceptor.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n  statusCode: number;\n  message: string;\n  data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private reflector: Reflector) {}\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(\n      map((data) => ({\n        statusCode: context.switchToHttp().getResponse().statusCode,\n        message:\n          this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) ||\n          '',\n        data: data,\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateCompanyDto.html': {
      url: 'classes/UpdateCompanyDto.html',
      title: 'class - UpdateCompanyDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/update-company.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCompanyDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \'@nestjs/mapped-types\';\nimport { CreateCompanyDto } from \'./create-company.dto\';\n\nexport class UpdateCompanyDto extends PartialType(CreateCompanyDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/UpdateFileDto.html': {
      url: 'classes/UpdateFileDto.html',
      title: 'class - UpdateFileDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/update-file.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateFileDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \'@nestjs/mapped-types\';\nimport { CreateFileDto } from \'./create-file.dto\';\n\nexport class UpdateFileDto extends PartialType(CreateFileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/UpdateJobDto.html': {
      url: 'classes/UpdateJobDto.html',
      title: 'class - UpdateJobDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateJobDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \'@nestjs/mapped-types\';\nimport { CreateJobDto } from \'./create-job.dto\';\n\nexport class UpdateJobDto extends PartialType(CreateJobDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/UpdatePermissionDto.html': {
      url: 'classes/UpdatePermissionDto.html',
      title: 'class - UpdatePermissionDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/update-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePermissionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \'@nestjs/mapped-types\';\nimport { CreatePermissionDto } from \'./create-permission.dto\';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/UpdateResumeDto.html': {
      url: 'classes/UpdateResumeDto.html',
      title: 'class - UpdateResumeDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateResumeDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                history\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         History[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'history khong duoc de trong'})@IsArray({message: 'history co dinh dang la array'})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\nimport { IsArray, IsEmail, IsNotEmpty, Validate, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { Types } from 'mongoose';\n\nclass UpdatedBy {\n    @IsNotEmpty()\n    _id: Types.ObjectId;\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n}\n\nclass History {\n    @IsNotEmpty()\n    status: string;\n\n    @IsNotEmpty()\n    updatedAt: Date;\n\n    @ValidateNested()\n    @IsNotEmpty()\n    @Type(() => UpdatedBy)\n    updatedBy: UpdatedBy\n\n}\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n    @IsNotEmpty({ message: 'history khong duoc de trong', })\n    @IsArray({ message: 'history co dinh dang la array', })\n    @ValidateNested()\n    @Type(() => History)\n    history: History[];\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateRoleDto.html': {
      url: 'classes/UpdateRoleDto.html',
      title: 'class - UpdateRoleDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/update-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateRoleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \'@nestjs/mapped-types\';\nimport { CreateRoleDto } from \'./create-role.dto\';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/UpdateSubscriberDto.html': {
      url: 'classes/UpdateSubscriberDto.html',
      title: 'class - UpdateSubscriberDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/update-subscriber.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSubscriberDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \'@nestjs/mapped-types\';\nimport { CreateSubscriberDto } from \'./create-subscriber.dto\';\n\nexport class UpdateSubscriberDto extends PartialType(CreateSubscriberDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/UpdateUserDto.html': {
      url: 'classes/UpdateUserDto.html',
      title: 'class - UpdateUserDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  PickType(CreateUserDto, [\n    'name',\n    'age',\n    'email',\n    'gender',\n    'address',\n  ] as const),\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    Optional\n                                age\n                            \n                            \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    Optional\n                                gender\n                            \n                            \n                                    \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType, PickType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport { IsOptional } from 'class-validator';\n\nexport class UpdateUserDto extends PartialType(\n  PickType(CreateUserDto, [\n    'name',\n    'age',\n    'email',\n    'gender',\n    'address',\n  ] as const),\n) {\n  @IsOptional() // Không bắt buộc nhập tên\n  name?: string;\n\n  @IsOptional() // Không bắt buộc nhập tuổi\n  age?: number;\n\n  @IsOptional() // Không bắt buộc nhập email\n  email?: string;\n\n  @IsOptional() // Không bắt buộc nhập giới tính\n  gender?: string;\n\n  @IsOptional() // Không bắt buộc nhập địa chỉ\n  address?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdatedBy.html': {
      url: 'classes/UpdatedBy.html',
      title: 'class - UpdatedBy',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatedBy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\nimport { IsArray, IsEmail, IsNotEmpty, Validate, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { Types } from 'mongoose';\n\nclass UpdatedBy {\n    @IsNotEmpty()\n    _id: Types.ObjectId;\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n}\n\nclass History {\n    @IsNotEmpty()\n    status: string;\n\n    @IsNotEmpty()\n    updatedAt: Date;\n\n    @ValidateNested()\n    @IsNotEmpty()\n    @Type(() => UpdatedBy)\n    updatedBy: UpdatedBy\n\n}\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n    @IsNotEmpty({ message: 'history khong duoc de trong', })\n    @IsArray({ message: 'history co dinh dang la array', })\n    @ValidateNested()\n    @Type(() => History)\n    history: History[];\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/User.html': {
      url: 'classes/User.html',
      title: 'class - User',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                otp\n                            \n                            \n                                    \n                                otpExpires\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updateAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Company'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        otp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        otpExpires\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Role } from 'src/roles/schemas/role.schema';\n\nexport type UserDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class User {\n  @Prop()\n  name: string;\n\n  @Prop({ required: true })\n  email: string;\n\n  @Prop({ required: true })\n  password: string;\n\n  @Prop()\n  age: number;\n\n  @Prop()\n  gender: string;\n\n  @Prop()\n  address: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'Company' })\n  company: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Role.name })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @Prop()\n  refreshToken: string;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  otp: string;\n\n  @Prop()\n  otpExpires: Date;\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updateAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deleteAt: Date;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UserLoginDto.html': {
      url: 'classes/UserLoginDto.html',
      title: 'class - UserLoginDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: '123456', description: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: 'ito', description: 'username'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\n\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không đúng định dạng' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Pass không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Age không được để trống' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Role không được để trống' })\n  @IsMongoId({ message: 'Role co dinh dang la mongo id' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không đúng định dạng' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Pass không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Age không được để trống' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n}\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'ito', description: 'username' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/UsersController.html': {
      url: 'controllers/UsersController.html',
      title: 'controller - UsersController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                changePassword\n                            \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePassword(user: IUser, body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('change-password')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(userData: CreateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new User')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch user with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')@ResponseMessage('Fetch user by id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('delete a User')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('update a User')@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n  BadRequestException,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from './users.interfacce';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  @ResponseMessage('Create a new User')\n  async create(@Body() userData: CreateUserDto, @User() user: IUser) {\n    let newUser = await this.usersService.create(userData, user);\n    return {\n      _id: newUser?._id,\n      createdAt: newUser?.createdAt,\n    };\n  }\n\n  @Get()\n  @ResponseMessage('Fetch user with paginate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.usersService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Patch('change-password')\n  async changePassword(@User() user: IUser, @Body() body: any) {\n    const { oldPassword, newPassword } = body;\n    if (!oldPassword || !newPassword) {\n      throw new BadRequestException('oldPassword và newPassword là bắt buộc');\n    }\n\n    // Kiểm tra user hợp lệ\n    if (!user || !user._id) {\n      throw new BadRequestException('Không tìm thấy thông tin người dùng');\n    }\n\n    // Chuyển _id sang dạng string để đảm bảo định dạng đúng\n    const userId = user._id.toString();\n\n    return this.usersService.changePassword(userId, oldPassword, newPassword);\n  }\n\n  @Public()\n  @Get(':id')\n  @ResponseMessage('Fetch user by id')\n  async findOne(@Param('id') id: string) {\n    const foundUser = await this.usersService.findOne(id);\n    return foundUser;\n  }\n\n  @ResponseMessage('update a User')\n  @Patch(':id')\n  async update(\n    @Param('id') id: string,\n    @Body() updateUserDto: UpdateUserDto,\n    @User() user: IUser,\n  ) {\n    let updatedUser = await this.usersService.update(id, updateUserDto, user);\n    return updatedUser;\n  }\n\n  @Delete(':id')\n  @ResponseMessage('delete a User')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.usersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/UsersModule.html': {
      url: 'modules/UsersModule.html',
      title: 'module - UsersModule',
      body: "\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Role.name, schema: RoleSchema },\n    ]),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/UsersService.html': {
      url: 'injectables/UsersService.html',
      title: 'injectable - UsersService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findUserByToken\n                            \n                            \n                                getHashPassword\n                            \n                            \n                                updateUserToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                findOneByUsername\n                            \n                            \n                                isValidPassword\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Async\n                                verifyOtp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePassword(userId: string, oldPassword: string, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:216\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                oldPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:198\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \nfindOneByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \nisValidPassword(password: string, hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(user: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePassword(email: string, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:210\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyOtp(email: string, otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:203\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:191\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:187\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { CreateUserDto, RegisterUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User as UserM, UserDocument } from './schemas/user.schema';\nimport mongoose, { Model } from 'mongoose';\nimport { genSaltSync, hashSync, compareSync } from 'bcryptjs';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from './users.interfacce';\nimport { User } from 'src/decorator/customize';\nimport aqp from 'api-query-params';\nimport { USER_ROLE } from 'src/databases/sample';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport * as bcrypt from 'bcryptjs';\nimport { Types } from 'mongoose';\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(UserM.name)\n    private userModel: SoftDeleteModel,\n\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n  ) {}\n\n  getHashPassword = (password: string) => {\n    const salt = genSaltSync(10);\n    const hash = hashSync(password, salt);\n    return hash;\n  };\n\n  async create(createUserDto: CreateUserDto, @User() user: IUser) {\n    const { name, email, password, age, gender, address, role, company } =\n      createUserDto;\n    //add logic check email\n    const isExist = await this.userModel.findOne({ email });\n    if (isExist) {\n      throw new BadRequestException(\n        `Email: ${email} da ton tai. Vui long su dung email khac`,\n      );\n    }\n\n    const HashPassword = this.getHashPassword(createUserDto.password);\n\n    let newUser = await this.userModel.create({\n      name,\n      email,\n      password: HashPassword,\n      age,\n      gender,\n      address,\n      role,\n      company,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n    return newUser;\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.userModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.userModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .select('-password') // Loại bỏ trường password khi trả về\n      .populate(population) // Dùng để lấy dữ liệu từ các field liên quan\n      .exec(); // Thực thi truy vấn\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) return `not found user`;\n\n    return await this.userModel\n      .findOne({\n        _id: id,\n      })\n      .select('-password') //exclude\n      .populate({ path: 'role', select: { name: 1, _id: 1 } });\n  }\n  findOneByUsername(username: string) {\n    return this.userModel\n      .findOne({\n        email: username,\n      })\n      .populate({\n        path: 'role',\n        select: { name: 1 },\n      });\n  }\n  isValidPassword(password: string, hash: string) {\n    return compareSync(password, hash);\n  }\n  async update(id: string, updateUserDto: UpdateUserDto, user: IUser) {\n    const updated = await this.userModel.updateOne(\n      { _id: id },\n      {\n        ...updateUserDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n      { new: true },\n    );\n    return updated;\n  }\n\n  async register(user: RegisterUserDto) {\n    const { name, email, password, age, gender, address } = user;\n    //add logic check email\n    const isExist = await this.userModel.findOne({ email });\n    if (isExist) {\n      throw new BadRequestException(\n        `Email: ${email} da ton tai tren he thong. Vui long su dung email khac`,\n      );\n    }\n\n    //fetch user role\n    const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n\n    const HashPassword = this.getHashPassword(password);\n    let newRegister = await this.userModel.create({\n      name,\n      email,\n      password: HashPassword,\n      age,\n      gender,\n      address,\n      role: userRole?._id,\n    });\n    return newRegister;\n  }\n  async remove(id: string, user: IUser) {\n    //admin@gmail.com\n    if (!mongoose.Types.ObjectId.isValid(id)) return `not found user`;\n\n    const foundUser = await this.userModel.findById(id);\n    if (\n      foundUser &&\n      ['admin@gmail.com', 'ito@gmail.com'].includes(foundUser.email)\n    ) {\n      throw new BadRequestException(\n        `Không thể xóa tài khoản ${foundUser.email}`,\n      );\n    }\n\n    await this.userModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.userModel.softDelete({\n      _id: id,\n    });\n  }\n\n  updateUserToken = async (refreshToken: string, _id: string) => {\n    return await this.userModel.updateOne({ _id }, { refreshToken });\n  };\n\n  findUserByToken = async (refreshToken: string) => {\n    return await this.userModel.findOne({ refreshToken }).populate({\n      path: 'role',\n      select: { name: 1 },\n    });\n  };\n\n  async findByEmail(email: string): Promise {\n    return this.userModel.findOne({ email }).exec();\n  }\n\n  // 🔍 Xác thực OTP\n  async verifyOtp(email: string, otp: string): Promise {\n    const user = await this.userModel.findOne({ email });\n    if (!user || user.otp !== otp) return false;\n    return true;\n  }\n\n  // 🔄 Cập nhật mật khẩu\n  async updatePassword(email: string, newPassword: string): Promise {\n    const hashedPassword = await bcrypt.hash(newPassword, 10);\n    await this.userModel.updateOne({ email }, { password: hashedPassword });\n  }\n\n  // 🔄 Đổi mật khẩu\n  async changePassword(\n    userId: string,\n    oldPassword: string,\n    newPassword: string,\n  ) {\n    // Chuyển userId sang ObjectId nếu chưa đúng định dạng\n    if (!Types.ObjectId.isValid(userId)) {\n      throw new BadRequestException('ID người dùng không hợp lệ');\n    }\n\n    const user = await this.userModel.findById(new Types.ObjectId(userId));\n    if (!user) {\n      throw new NotFoundException('Người dùng không tồn tại');\n    }\n\n    const isMatch = await bcrypt.compare(oldPassword, user.password);\n    if (!isMatch) {\n      throw new BadRequestException('Mật khẩu cũ không đúng');\n    }\n\n    user.password = await bcrypt.hash(newPassword, 10);\n    await user.save();\n\n    return { message: 'Đổi mật khẩu thành công' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'coverage.html': {
      url: 'coverage.html',
      title: 'coverage - coverage',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/companies/companies.controller.ts\n            \n            controller\n            CompaniesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/companies/companies.service.ts\n            \n            injectable\n            CompaniesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/companies/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/companies/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schemas.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/companies/schemas/company.schemas.ts\n            \n            variable\n            CompanySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/companies/schemas/company.schemas.ts\n            \n            type alias\n            CompanyDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/databases.controller.ts\n            \n            controller\n            DatabasesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/databases.service.ts\n            \n            injectable\n            DatabasesService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            ADMIN_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            INIT_PERMISSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            USER_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            ALLOWED_MIME_TYPES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            RESPONSE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            SkipCheckPermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/entities/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/multer.config.ts\n            \n            injectable\n            MulterConfigService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/files/multer.filter.ts\n            \n            class\n            MulterExceptionFilter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            CreateJobDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/jobs/dto/update-job.dto.ts\n            \n            class\n            UpdateJobDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            class\n            Job\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                        src/jobs/schemas/job.schema.ts\n            \n            variable\n            JobSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/jobs/schemas/job.schema.ts\n            \n            type alias\n            JobDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/mail.controller.ts\n            \n            controller\n            MailController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/permissions/schemas/permission.schema.ts\n            \n            variable\n            PermissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/permissions/schemas/permission.schema.ts\n            \n            type alias\n            PermissionDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateResumeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateUserCvDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            History\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdatedBy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdateResumeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/resumes/resumes.controller.ts\n            \n            controller\n            ResumesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/resumes.service.ts\n            \n            injectable\n            ResumesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            class\n            Resume\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                        src/resumes/schemas/resume.schema.ts\n            \n            variable\n            ResumeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/resumes/schemas/resume.schema.ts\n            \n            type alias\n            ResumeDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/roles/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/roles/schemas/role.schema.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/roles/schemas/role.schema.ts\n            \n            type alias\n            RoleDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dto/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/subscribers/dto/update-subscriber.dto.ts\n            \n            class\n            UpdateSubscriberDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/schemas/subscriber.schema.ts\n            \n            class\n            Subscriber\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/subscribers/schemas/subscriber.schema.ts\n            \n            variable\n            SubscriberSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/subscribers/schemas/subscriber.schema.ts\n            \n            type alias\n            SubscriberDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                        src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/users/schemas/user.schema.ts\n            \n            type alias\n            UserDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/users.interfacce.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/17)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById(\'coverage-table\'));\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'dependencies.html': {
      url: 'dependencies.html',
      title: 'package-dependencies - dependencies',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^2.0.2\n        \n            @nestjs/common : ^10.4.15\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.4.15\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mongoose : ^10.1.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.4.15\n        \n            @nestjs/schedule : ^4.1.2\n        \n            @nestjs/swagger : ^8.1.1\n        \n            @nestjs/testing : ^10.4.15\n        \n            @nestjs/throttler : ^6.3.0\n        \n            api-query-params : ^5.4.0\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cookie-parser : ^1.4.7\n        \n            helmet : ^8.0.0\n        \n            mjml-cli : ^4.15.3\n        \n            mjml-core : ^4.15.3\n        \n            mongoose : ^7.8.3\n        \n            ms : ^2.1.3\n        \n            otp-generator : ^4.0.1\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            rxjs : ^7.8.1\n        \n            soft-delete-plugin-mongoose : ^1.0.17\n        \n            supertest : ^7.0.0\n        \n            swagger-ui-express : ^5.0.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/functions.html': {
      url: 'miscellaneous/functions.html',
      title: 'miscellaneous-functions - functions',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'index.html': {
      url: 'index.html',
      title: 'getting-started - index',
      body: '\n                   \n\nRecruitment Web - Backend\nThis is the backend of the recruitment system, built with NestJS and using MongoDB. The system supports user management, companies, roles, JWT authentication, and Swagger integration for API documentation.\nTechnologies:\n\nNestJS: Powerful framework based on TypeScript.\n\nMongoDB & Mongoose: NoSQL database with powerful ORM.\n\nJWT & Passport: User authentication.\n\nSwagger: Generate API documentation.\n\nThrottler: Limit request speed.\n\nMailer: Send email.\n\nHelmet & Cookie-Parser: API security.\n\n\nInstallation\nSystem Requirements\nNode.js >= 16\nMongoDB Compass\nClone repository\ngit clone https://github.com/trungnguyen592/Recruitment_Web_BE.git\ncd Recruitment_Web_BE\nInstall dependencies\nnpm install\nEnvironment configuration\nCreate a .env file in the root directory and add the configuration information:\nMONGO_URI=mongodb://localhost:27017/recruitment\nJWT_SECRET=your_secret_key\nPORT=3000\nRun development mode\nnpm run start:dev\nBuild project\nnpm run build\nRun production mode\nnpm run start:prod\nRun migration (TypeORM)\nGenerate migration\nnpm run migration:generate --name=MigrationName\nRun migration\nnpm run migration:run\nRevert migration\nnpm run migration:revert\nRun unit tests\nnpm run test\nRun e2e test\nnpm run test:e2e\nCheck coverage\nnpm run test:cov\nAPI Documentation\nAPI documentation created with Swagger.\nAfter running the server, visit http://localhost:3000/api to view the API documentation.\ndocker run -d --name mongodb-container -p 27017:27017 -v D:/mongodb_data:/data/db mongo\ndocker run -- name postgres-db -p 5432:5432 -e POSTGRES_USER=user_demo -e POSTGRES_PASSWORD=pg_strong_password -e POSTGRES_DB=demo_db -d postgres\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'modules.html': {
      url: 'modules.html',
      title: 'modules - modules',
      body: '\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompaniesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResumesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'overview.html': {
      url: 'overview.html',
      title: 'overview - overview',
      body: '\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAuthModule -->\n\nMailModule->AuthModule\n\n\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    32 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'properties.html': {
      url: 'properties.html',
      title: 'package-properties - properties',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : \n        \n            License : ISC\n        \n            Author :Ito \n    \n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/typealiases.html': {
      url: 'miscellaneous/typealiases.html',
      title: 'miscellaneous-typealiases - typealiases',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompanyDocument   (src/.../company.schemas.ts)\n                        \n                        \n                            JobDocument   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionDocument   (src/.../permission.schema.ts)\n                        \n                        \n                            ResumeDocument   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            SubscriberDocument   (src/.../subscriber.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/companies/schemas/company.schemas.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/jobs/schemas/job.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/permissions/schemas/permission.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PermissionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/resumes/schemas/resume.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ResumeDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/roles/schemas/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/subscribers/schemas/subscriber.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SubscriberDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/variables.html': {
      url: 'miscellaneous/variables.html',
      title: 'miscellaneous-variables - variables',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_ROLE   (src/.../sample.ts)\n                        \n                        \n                            ALLOWED_MIME_TYPES   (src/.../customize.ts)\n                        \n                        \n                            CompanySchema   (src/.../company.schemas.ts)\n                        \n                        \n                            INIT_PERMISSIONS   (src/.../sample.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../customize.ts)\n                        \n                        \n                            IS_PUBLIC_PERMISSION   (src/.../customize.ts)\n                        \n                        \n                            JobSchema   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionSchema   (src/.../permission.schema.ts)\n                        \n                        \n                            Public   (src/.../customize.ts)\n                        \n                        \n                            RESPONSE_MESSAGE   (src/.../customize.ts)\n                        \n                        \n                            ResponseMessage   (src/.../customize.ts)\n                        \n                        \n                            ResumeSchema   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            SkipCheckPermission   (src/.../customize.ts)\n                        \n                        \n                            SubscriberSchema   (src/.../subscriber.schema.ts)\n                        \n                        \n                            User   (src/.../customize.ts)\n                        \n                        \n                            USER_ROLE   (src/.../sample.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/databases/sample.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"SUPER ADMIN\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INIT_PERMISSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"NORMAL USER\"\n                    \n                \n\n\n        \n    \n\n    src/decorator/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALLOWED_MIME_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map([\n  ['application/pdf', 'PDF'],\n  ['application/msword', 'DOC'],\n  [\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'DOCX',\n  ],\n  ['image/jpeg', 'JPG'],\n  ['image/png', 'PNG'],\n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublicPermission'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'response_massage'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>\n  SetMetadata(RESPONSE_MESSAGE, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SkipCheckPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  SetMetadata(IS_PUBLIC_PERMISSION, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/companies/schemas/company.schemas.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CompanySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Company)\n                    \n                \n\n\n        \n    \n\n    src/jobs/schemas/job.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Job)\n                    \n                \n\n\n        \n    \n\n    src/permissions/schemas/permission.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PermissionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Permission)\n                    \n                \n\n\n        \n    \n\n    src/resumes/schemas/resume.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResumeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Resume)\n                    \n                \n\n\n        \n    \n\n    src/roles/schemas/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/subscribers/schemas/subscriber.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SubscriberSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Subscriber)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
  },
};
